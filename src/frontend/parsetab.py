
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEQleftGTLTGEQLEQleftPLUSMINUSleftMULDIVMODrightUMINUSnonassocLOWER_THAN_ELSEnonassocKEYWORD_ELSEAND ASSIGN CHAR_LITERAL COLON COMMA COMMENT DIV DOT EQ FLOAT_LITERAL GEQ GT IDENTIFIER INT_LITERAL KEYWORD_ARRAY KEYWORD_AS KEYWORD_BOOL KEYWORD_BREAK KEYWORD_CASE KEYWORD_CHAR KEYWORD_CONTINUE KEYWORD_DEFAULT KEYWORD_DICT KEYWORD_DO KEYWORD_ELSE KEYWORD_EXIT KEYWORD_EXPORT KEYWORD_FALSE KEYWORD_FILE KEYWORD_FLOAT KEYWORD_FOR KEYWORD_FROM KEYWORD_IF KEYWORD_IMPORT KEYWORD_INT KEYWORD_NULL KEYWORD_REGEX KEYWORD_RETURN KEYWORD_SOCKET KEYWORD_STRING KEYWORD_SWITCH KEYWORD_TRUE KEYWORD_VOID KEYWORD_WHILE LBRACE LBRACKET LEQ LPAREN LT MINUS MOD MUL NEQ OR PLUS RBRACE RBRACKET RPAREN SEMICOLON STRING_LITERAL SYSTEM_ARR_AVG SYSTEM_ARR_CONTAINS SYSTEM_ARR_INDEXOF SYSTEM_ARR_POP SYSTEM_ARR_PUSH SYSTEM_ARR_SIZE SYSTEM_EXIT SYSTEM_INPUT SYSTEM_OUTPUT SYSTEM_SLEEPprogram : statement_listfunction_definition : type_specifier IDENTIFIER LPAREN params RPAREN block_statementparams : param_list\n                  | emptyparam_list : param\n                      | param_list COMMA paramparam : type_specifier IDENTIFIERstatement_list : statement\n                         | statement_list statementstatement : declaration_statement\n                    | assignment_statement\n                    | if_statement\n                    | while_statement\n                    | do_while_statement\n                    | for_statement\n                    | switch_statement\n                    | break_statement\n                    | return_statement\n                    | function_call_statement\n                    | block_statement\n                    | function_definition\n                    | import_statement\n                    | export_statementimport_statement : KEYWORD_IMPORT module_path SEMICOLON\n                           | KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLONmodule_path : IDENTIFIER\n                      | module_path DOT IDENTIFIERexport_statement : KEYWORD_EXPORT function_definition\n                           | KEYWORD_EXPORT declaration_statementdo_while_statement : KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLONswitch_statement : KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACEcase_list : case_clause\n                     | case_list case_clausecase_clause : KEYWORD_CASE expression COLON statement_list\n                       | KEYWORD_DEFAULT COLON statement_listbreak_statement : KEYWORD_BREAK SEMICOLONdeclaration_statement : type_specifier IDENTIFIER SEMICOLON\n                                | type_specifier IDENTIFIER ASSIGN expression SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON\n                                | type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER multi_brackets SEMICOLONtype_specifier : primitive_type\n                         | array_typeprimitive_type : KEYWORD_INT\n                          | KEYWORD_FLOAT\n                          | KEYWORD_CHAR\n                          | KEYWORD_VOID\n                          | KEYWORD_STRING\n                          | KEYWORD_BOOL\n                          | KEYWORD_FILE\n                          | KEYWORD_SOCKET\n                          | KEYWORD_DICT\n                          | KEYWORD_REGEX\n                          | KEYWORD_ARRAYarray_type : primitive_type LBRACKET RBRACKETmulti_brackets : LBRACKET RBRACKET LBRACKET RBRACKET\n                         | multi_brackets LBRACKET RBRACKETassignment_statement : left_hand_side ASSIGN expression SEMICOLONleft_hand_side : IDENTIFIER\n                         | subscript_accessassignment_statement_no_semi : left_hand_side ASSIGN expressionif_statement : KEYWORD_IF LPAREN expression RPAREN statement %prec LOWER_THAN_ELSE\n                        | KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statementwhile_statement : KEYWORD_WHILE LPAREN expression RPAREN statementfor_statement : KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statementfor_init : assignment_statement_no_semi SEMICOLON\n                    | declaration_statement\n                    | SEMICOLONexpression_statement : expression SEMICOLON\n                               | SEMICOLONexpression_opt : expression\n                         | assignment_statement_no_semi\n                         | increment_decrement\n                         | emptyincrement_decrement : IDENTIFIER PLUS PLUS\n                              | IDENTIFIER MINUS MINUSempty :return_statement : KEYWORD_RETURN SEMICOLON\n                           | KEYWORD_RETURN expression SEMICOLONfunction_call_statement : function_call SEMICOLONfunction_call : IDENTIFIER LPAREN argument_list RPAREN\n                        | IDENTIFIER LPAREN RPAREN\n                        | IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN\n                        | IDENTIFIER DOT IDENTIFIER LPAREN RPAREN\n                        | SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN\n                        | SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN\n                        | SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN\n                        | KEYWORD_EXIT LPAREN RPAREN\n                        | SYSTEM_SLEEP LPAREN expression RPAREN\n                        | SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN\n                        | SYSTEM_ARR_POP LPAREN expression RPAREN\n                        | SYSTEM_ARR_SIZE LPAREN expression RPAREN\n                        | SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN\n                        | SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN\n                        | SYSTEM_ARR_AVG LPAREN expression RPAREN\n                        | SYSTEM_ARR_AVG LPAREN expression COMMA expression RPARENargument_list : expression\n                        | argument_list COMMA expressionblock_statement : LBRACE RBRACE\n                          | LBRACE statement_list RBRACEinitializer_list : LBRACKET expression_list_opt RBRACKETexpression_list_opt : expression_list\n                               | emptyexpression_list : expression\n                           | expression_list COMMA expressionexpression : logical_expression\n                      | initializer_listlogical_expression : equality_expression\n                             | logical_expression AND equality_expression\n                             | logical_expression OR equality_expressionequality_expression : relational_expression\n                               | equality_expression EQ relational_expression\n                               | equality_expression NEQ relational_expressionrelational_expression : additive_expression\n                                | relational_expression GT additive_expression\n                                | relational_expression LT additive_expression\n                                | relational_expression GEQ additive_expression\n                                | relational_expression LEQ additive_expressionadditive_expression : multiplicative_expression\n                              | additive_expression PLUS multiplicative_expression\n                              | additive_expression MINUS multiplicative_expressionmultiplicative_expression : unary_expression\n                                    | multiplicative_expression MUL unary_expression\n                                    | multiplicative_expression DIV unary_expression\n                                    | multiplicative_expression MOD unary_expressionunary_expression : primary_expression\n                           | MINUS unary_expression %prec UMINUSprimary_expression : IDENTIFIER\n                             | INT_LITERAL\n                             | FLOAT_LITERAL\n                             | STRING_LITERAL\n                             | CHAR_LITERAL\n                             | KEYWORD_TRUE\n                             | KEYWORD_FALSE\n                             | KEYWORD_NULL\n                             | LPAREN expression RPAREN\n                             | function_call\n                             | subscript_access\n                             | dictionary_literaldictionary_literal : LBRACE key_value_list_opt RBRACEkey_value_list_opt : key_value_list\n                              | emptykey_value_list : key_value\n                          | key_value_list COMMA key_valuekey_value : expression COLON expressionsubscript_access : IDENTIFIER LBRACKET expression RBRACKET\n                           | subscript_access LBRACKET expression RBRACKET'
    
_lr_action_items = {'KEYWORD_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[21,21,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,21,21,-9,-103,21,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,21,21,-38,-43,-66,-68,-25,-39,-44,-2,21,-41,-42,-67,-30,21,-31,21,-40,-69,21,21,21,]),'KEYWORD_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,64,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[22,22,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,22,22,-9,126,-103,22,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,22,22,-38,-43,-66,-68,-25,-39,-44,-2,22,-41,-42,-67,-30,22,-31,22,-40,-69,22,22,22,]),'KEYWORD_DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[23,23,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,23,23,-9,-103,23,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,23,23,-38,-43,-66,-68,-25,-39,-44,-2,23,-41,-42,-67,-30,23,-31,23,-40,-69,23,23,23,]),'KEYWORD_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[24,24,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,24,24,-9,-103,24,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,24,24,-38,-43,-66,-68,-25,-39,-44,-2,24,-41,-42,-67,-30,24,-31,24,-40,-69,24,24,24,]),'KEYWORD_SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[25,25,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,25,25,-9,-103,25,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,25,25,-38,-43,-66,-68,-25,-39,-44,-2,25,-41,-42,-67,-30,25,-31,25,-40,-69,25,25,25,]),'KEYWORD_BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[27,27,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,27,27,-9,-103,27,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,27,27,-38,-43,-66,-68,-25,-39,-44,-2,27,-41,-42,-67,-30,27,-31,27,-40,-69,27,27,27,]),'KEYWORD_RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[28,28,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,28,28,-9,-103,28,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,28,28,-38,-43,-66,-68,-25,-39,-44,-2,28,-41,-42,-67,-30,28,-31,28,-40,-69,28,28,28,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,206,212,224,225,232,235,236,238,239,242,243,247,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[26,26,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,26,26,94,-9,94,94,94,94,94,94,-103,26,-36,-82,94,94,94,94,-84,-28,-29,94,94,94,94,94,94,94,94,94,-37,94,94,94,-72,-71,-104,-83,94,94,94,94,94,94,94,94,94,94,94,94,94,-24,-45,94,94,-62,26,26,94,-70,94,259,94,94,94,94,94,94,94,-38,94,-43,26,-66,-68,94,-25,-39,-44,-2,26,94,94,-41,-42,-67,-30,26,-31,26,-40,-69,26,26,26,]),'KEYWORD_IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[30,30,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,30,30,-9,-103,30,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,30,30,-38,-43,-66,-68,-25,-39,-44,-2,30,-41,-42,-67,-30,30,-31,30,-40,-69,30,30,30,]),'KEYWORD_EXPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,56,67,68,69,70,95,98,99,113,135,136,161,181,192,193,194,239,243,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[31,31,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,31,31,-9,-103,31,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,31,31,-38,-43,-66,-68,-25,-39,-44,-2,31,-41,-42,-67,-30,31,-31,31,-40,-69,31,31,31,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,26,28,30,32,33,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,75,79,90,94,95,98,99,100,102,103,104,106,107,108,109,110,111,112,113,114,115,127,128,130,132,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,162,163,165,181,183,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[19,19,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,57,19,19,82,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-9,82,121,82,82,82,82,133,82,-103,19,-36,-82,82,82,82,82,-84,-28,-29,164,82,167,82,82,82,82,82,82,82,82,-37,82,82,201,-72,-71,205,-104,-83,82,82,82,82,82,82,82,82,82,82,82,82,82,-24,226,227,-59,-45,246,82,82,-62,19,19,82,-70,82,82,82,82,82,82,82,82,-38,82,-43,-66,-68,201,-25,-39,-44,-2,19,82,82,-41,-42,-67,-30,19,-31,19,-40,-69,19,19,19,]),'SYSTEM_INPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[35,35,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,35,35,35,-9,35,35,35,35,35,35,-103,35,-36,-82,35,35,35,35,-84,-28,-29,35,35,35,35,35,35,35,35,35,-37,35,35,35,-72,-71,-104,-83,35,35,35,35,35,35,35,35,35,35,35,35,35,-24,-45,35,35,-62,35,35,35,-70,35,35,35,35,35,35,35,35,-38,35,-43,-66,-68,35,-25,-39,-44,-2,35,35,35,-41,-42,-67,-30,35,-31,35,-40,-69,35,35,35,]),'SYSTEM_OUTPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[36,36,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,36,36,36,-9,36,36,36,36,36,36,-103,36,-36,-82,36,36,36,36,-84,-28,-29,36,36,36,36,36,36,36,36,36,-37,36,36,36,-72,-71,-104,-83,36,36,36,36,36,36,36,36,36,36,36,36,36,-24,-45,36,36,-62,36,36,36,-70,36,36,36,36,36,36,36,36,-38,36,-43,-66,-68,36,-25,-39,-44,-2,36,36,36,-41,-42,-67,-30,36,-31,36,-40,-69,36,36,36,]),'KEYWORD_EXIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[37,37,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,37,37,37,-9,37,37,37,37,37,37,-103,37,-36,-82,37,37,37,37,-84,-28,-29,37,37,37,37,37,37,37,37,37,-37,37,37,37,-72,-71,-104,-83,37,37,37,37,37,37,37,37,37,37,37,37,37,-24,-45,37,37,-62,37,37,37,-70,37,37,37,37,37,37,37,37,-38,37,-43,-66,-68,37,-25,-39,-44,-2,37,37,37,-41,-42,-67,-30,37,-31,37,-40,-69,37,37,37,]),'SYSTEM_SLEEP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[38,38,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,38,38,38,-9,38,38,38,38,38,38,-103,38,-36,-82,38,38,38,38,-84,-28,-29,38,38,38,38,38,38,38,38,38,-37,38,38,38,-72,-71,-104,-83,38,38,38,38,38,38,38,38,38,38,38,38,38,-24,-45,38,38,-62,38,38,38,-70,38,38,38,38,38,38,38,38,-38,38,-43,-66,-68,38,-25,-39,-44,-2,38,38,38,-41,-42,-67,-30,38,-31,38,-40,-69,38,38,38,]),'SYSTEM_ARR_PUSH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[39,39,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,39,39,39,-9,39,39,39,39,39,39,-103,39,-36,-82,39,39,39,39,-84,-28,-29,39,39,39,39,39,39,39,39,39,-37,39,39,39,-72,-71,-104,-83,39,39,39,39,39,39,39,39,39,39,39,39,39,-24,-45,39,39,-62,39,39,39,-70,39,39,39,39,39,39,39,39,-38,39,-43,-66,-68,39,-25,-39,-44,-2,39,39,39,-41,-42,-67,-30,39,-31,39,-40,-69,39,39,39,]),'SYSTEM_ARR_POP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[40,40,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,40,40,40,-9,40,40,40,40,40,40,-103,40,-36,-82,40,40,40,40,-84,-28,-29,40,40,40,40,40,40,40,40,40,-37,40,40,40,-72,-71,-104,-83,40,40,40,40,40,40,40,40,40,40,40,40,40,-24,-45,40,40,-62,40,40,40,-70,40,40,40,40,40,40,40,40,-38,40,-43,-66,-68,40,-25,-39,-44,-2,40,40,40,-41,-42,-67,-30,40,-31,40,-40,-69,40,40,40,]),'SYSTEM_ARR_SIZE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[41,41,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,41,41,41,-9,41,41,41,41,41,41,-103,41,-36,-82,41,41,41,41,-84,-28,-29,41,41,41,41,41,41,41,41,41,-37,41,41,41,-72,-71,-104,-83,41,41,41,41,41,41,41,41,41,41,41,41,41,-24,-45,41,41,-62,41,41,41,-70,41,41,41,41,41,41,41,41,-38,41,-43,-66,-68,41,-25,-39,-44,-2,41,41,41,-41,-42,-67,-30,41,-31,41,-40,-69,41,41,41,]),'SYSTEM_ARR_CONTAINS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[42,42,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,42,42,42,-9,42,42,42,42,42,42,-103,42,-36,-82,42,42,42,42,-84,-28,-29,42,42,42,42,42,42,42,42,42,-37,42,42,42,-72,-71,-104,-83,42,42,42,42,42,42,42,42,42,42,42,42,42,-24,-45,42,42,-62,42,42,42,-70,42,42,42,42,42,42,42,42,-38,42,-43,-66,-68,42,-25,-39,-44,-2,42,42,42,-41,-42,-67,-30,42,-31,42,-40,-69,42,42,42,]),'SYSTEM_ARR_INDEXOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[43,43,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,43,43,43,-9,43,43,43,43,43,43,-103,43,-36,-82,43,43,43,43,-84,-28,-29,43,43,43,43,43,43,43,43,43,-37,43,43,43,-72,-71,-104,-83,43,43,43,43,43,43,43,43,43,43,43,43,43,-24,-45,43,43,-62,43,43,43,-70,43,43,43,43,43,43,43,43,-38,43,-43,-66,-68,43,-25,-39,-44,-2,43,43,43,-41,-42,-67,-30,43,-31,43,-40,-69,43,43,43,]),'SYSTEM_ARR_AVG':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,28,56,58,60,61,62,63,66,67,68,69,70,75,79,90,94,95,98,99,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,135,136,137,138,139,140,145,146,147,148,149,150,151,152,153,161,181,189,190,192,193,194,195,203,204,212,224,225,232,235,236,238,239,242,243,252,253,255,263,270,275,276,279,286,289,296,297,298,299,300,301,304,306,307,308,309,311,],[44,44,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,44,44,44,-9,44,44,44,44,44,44,-103,44,-36,-82,44,44,44,44,-84,-28,-29,44,44,44,44,44,44,44,44,44,-37,44,44,44,-72,-71,-104,-83,44,44,44,44,44,44,44,44,44,44,44,44,44,-24,-45,44,44,-62,44,44,44,-70,44,44,44,44,44,44,44,44,-38,44,-43,-66,-68,44,-25,-39,-44,-2,44,44,44,-41,-42,-67,-30,44,-31,44,-40,-69,44,44,44,]),'KEYWORD_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[45,45,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,45,45,45,-9,45,-103,45,-36,-82,-84,-28,-29,-37,45,-104,-83,-24,-45,-62,45,45,45,45,-38,-43,45,-66,-68,-25,-39,-44,-2,45,-41,-42,-67,-30,45,-31,45,-40,-69,45,45,45,]),'KEYWORD_FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[46,46,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,46,46,46,-9,46,-103,46,-36,-82,-84,-28,-29,-37,46,-104,-83,-24,-45,-62,46,46,46,46,-38,-43,46,-66,-68,-25,-39,-44,-2,46,-41,-42,-67,-30,46,-31,46,-40,-69,46,46,46,]),'KEYWORD_CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[47,47,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,47,47,47,-9,47,-103,47,-36,-82,-84,-28,-29,-37,47,-104,-83,-24,-45,-62,47,47,47,47,-38,-43,47,-66,-68,-25,-39,-44,-2,47,-41,-42,-67,-30,47,-31,47,-40,-69,47,47,47,]),'KEYWORD_VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[48,48,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,48,48,48,-9,48,-103,48,-36,-82,-84,-28,-29,-37,48,-104,-83,-24,-45,-62,48,48,48,48,-38,-43,48,-66,-68,-25,-39,-44,-2,48,-41,-42,-67,-30,48,-31,48,-40,-69,48,48,48,]),'KEYWORD_STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[49,49,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,49,49,49,-9,49,-103,49,-36,-82,-84,-28,-29,-37,49,-104,-83,-24,-45,-62,49,49,49,49,-38,-43,49,-66,-68,-25,-39,-44,-2,49,-41,-42,-67,-30,49,-31,49,-40,-69,49,49,49,]),'KEYWORD_BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[50,50,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,50,50,50,-9,50,-103,50,-36,-82,-84,-28,-29,-37,50,-104,-83,-24,-45,-62,50,50,50,50,-38,-43,50,-66,-68,-25,-39,-44,-2,50,-41,-42,-67,-30,50,-31,50,-40,-69,50,50,50,]),'KEYWORD_FILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[51,51,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,51,51,51,-9,51,-103,51,-36,-82,-84,-28,-29,-37,51,-104,-83,-24,-45,-62,51,51,51,51,-38,-43,51,-66,-68,-25,-39,-44,-2,51,-41,-42,-67,-30,51,-31,51,-40,-69,51,51,51,]),'KEYWORD_SOCKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[52,52,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,52,52,52,-9,52,-103,52,-36,-82,-84,-28,-29,-37,52,-104,-83,-24,-45,-62,52,52,52,52,-38,-43,52,-66,-68,-25,-39,-44,-2,52,-41,-42,-67,-30,52,-31,52,-40,-69,52,52,52,]),'KEYWORD_DICT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[53,53,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,53,53,53,-9,53,-103,53,-36,-82,-84,-28,-29,-37,53,-104,-83,-24,-45,-62,53,53,53,53,-38,-43,53,-66,-68,-25,-39,-44,-2,53,-41,-42,-67,-30,53,-31,53,-40,-69,53,53,53,]),'KEYWORD_REGEX':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[54,54,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,54,54,54,-9,54,-103,54,-36,-82,-84,-28,-29,-37,54,-104,-83,-24,-45,-62,54,54,54,54,-38,-43,54,-66,-68,-25,-39,-44,-2,54,-41,-42,-67,-30,54,-31,54,-40,-69,54,54,54,]),'KEYWORD_ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,26,31,56,65,67,68,69,70,95,98,99,113,117,135,136,161,181,192,193,194,229,230,239,243,248,252,253,263,270,275,276,279,296,297,298,299,300,301,304,306,307,308,309,311,],[55,55,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,55,55,55,-9,55,-103,55,-36,-82,-84,-28,-29,-37,55,-104,-83,-24,-45,-62,55,55,55,55,-38,-43,55,-66,-68,-25,-39,-44,-2,55,-41,-42,-67,-30,55,-31,55,-40,-69,55,55,55,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,56,67,69,70,95,98,99,113,135,136,161,181,192,239,243,252,253,263,270,275,276,296,297,298,299,301,306,307,],[0,-1,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,-103,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,-38,-43,-66,-68,-25,-39,-44,-2,-41,-42,-67,-30,-31,-40,-69,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,56,67,68,69,70,72,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,98,99,113,119,135,136,154,156,157,158,159,161,169,181,188,191,192,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,239,243,251,252,253,261,262,263,270,275,276,278,284,285,288,290,291,292,293,294,296,297,298,299,301,302,306,307,309,310,311,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,67,-9,-103,135,-36,-82,-110,-111,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-81,-84,-28,-29,-37,-86,-104,-83,-131,223,-145,-146,-147,-24,-92,-45,-85,-150,-62,-113,-114,-116,-117,-105,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-38,-43,-88,-66,-68,-148,-149,-25,-39,-44,-2,-87,301,-32,-89,-90,-94,-97,-98,-100,-41,-42,-67,-30,-31,-33,-40,-69,-35,-91,-34,]),'KEYWORD_CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,56,67,69,70,95,98,99,113,135,136,161,181,192,239,243,252,253,259,263,270,275,276,284,285,296,297,298,299,301,302,306,307,309,311,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,-103,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,-38,-43,-66,-68,286,-25,-39,-44,-2,286,-32,-41,-42,-67,-30,-31,-33,-40,-69,-35,-34,]),'KEYWORD_DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,56,67,69,70,95,98,99,113,135,136,161,181,192,239,243,252,253,259,263,270,275,276,284,285,296,297,298,299,301,302,306,307,309,311,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,-103,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,-38,-43,-66,-68,287,-25,-39,-44,-2,287,-32,-41,-42,-67,-30,-31,-33,-40,-69,-35,-34,]),'KEYWORD_ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,67,69,70,95,98,99,113,135,136,161,181,192,239,243,252,253,263,270,275,276,296,297,298,299,301,306,307,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-103,-36,-82,-84,-28,-29,-37,-104,-83,-24,-45,-62,-38,-43,279,-68,-25,-39,-44,-2,-41,-42,-67,-30,-31,-40,-69,]),'ASSIGN':([19,20,34,57,116,131,133,164,179,191,201,202,205,228,240,245,272,],[-63,61,-64,114,180,204,-63,114,242,-150,-63,-64,114,-151,271,-61,-60,]),'LPAREN':([19,21,22,24,25,28,35,36,37,38,39,40,41,42,43,44,57,58,60,61,62,63,66,75,79,82,90,94,102,104,106,107,108,109,110,111,112,113,114,115,121,126,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,164,181,189,190,195,201,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[58,62,63,65,66,90,103,104,105,106,107,108,109,110,111,112,117,90,90,90,90,90,90,90,90,58,90,90,90,90,90,90,90,90,90,90,90,-37,90,90,190,195,90,-72,-71,90,90,90,90,90,90,90,90,90,90,90,90,90,117,-45,90,90,90,58,-70,90,90,90,90,90,90,90,90,-38,90,-43,90,-39,-44,90,90,-41,-42,-40,]),'DOT':([19,82,96,97,201,227,],[59,59,163,-26,59,-27,]),'LBRACKET':([19,28,32,34,45,46,47,48,49,50,51,52,53,54,55,57,58,60,61,62,63,66,75,82,90,92,94,102,104,106,107,108,109,110,111,112,113,114,115,116,127,128,130,133,164,179,180,181,189,190,191,195,201,202,203,204,205,212,224,225,228,232,235,236,238,239,242,243,245,255,270,271,272,275,286,289,296,297,306,],[60,75,101,102,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,115,75,75,75,75,75,75,75,60,75,102,75,75,75,75,75,75,75,75,75,75,-37,75,75,182,75,-72,-71,60,115,241,75,-45,75,75,-150,75,60,102,-70,75,115,75,75,75,-151,75,75,75,75,-38,75,-43,-61,75,-39,75,-60,-44,75,75,-41,-42,-40,]),'SEMICOLON':([27,28,29,57,65,71,72,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,96,97,113,116,119,123,127,128,129,130,154,164,169,177,179,181,188,191,196,197,198,199,200,201,202,203,205,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,226,227,228,231,233,234,237,239,240,243,244,245,251,258,270,272,273,274,275,278,280,282,283,288,290,291,292,293,294,295,296,297,306,310,],[69,70,95,113,128,136,-110,-111,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,161,-26,-37,181,-86,192,-81,-72,203,-71,-131,113,-92,239,243,-45,-85,-150,255,-75,-76,-77,-78,-132,-142,-70,113,-113,-114,-116,-117,-105,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,263,-27,-151,-93,-95,-96,-99,-38,270,-43,275,-61,-88,-65,-39,-60,296,297,-44,-87,299,-79,-80,-89,-90,-94,-97,-98,-100,306,-41,-42,-40,-91,]),'MINUS':([28,58,60,61,62,63,66,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,102,104,106,107,108,109,110,111,112,113,114,115,119,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,154,169,181,188,189,190,191,195,201,202,203,204,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,231,232,233,234,235,236,237,238,239,242,243,251,255,257,270,275,278,286,288,289,290,291,292,293,294,296,297,306,310,],[79,79,79,79,79,79,79,79,150,-123,79,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,79,-141,-142,-143,79,79,79,79,79,79,79,79,79,79,-37,79,79,-86,79,-72,-71,79,79,79,79,79,79,79,79,79,79,79,79,79,-131,-92,-45,-85,79,79,-150,79,257,-142,-70,79,79,150,150,150,150,-124,-125,-127,-128,-129,-140,-144,79,79,-151,-93,79,-95,-96,79,79,-99,79,-38,79,-43,-88,79,283,-39,-44,-87,79,-89,79,-90,-94,-97,-98,-100,-41,-42,-40,-91,]),'INT_LITERAL':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-37,83,83,83,-72,-71,83,83,83,83,83,83,83,83,83,83,83,83,83,-45,83,83,83,-70,83,83,83,83,83,83,83,83,-38,83,-43,83,-39,-44,83,83,-41,-42,-40,]),'FLOAT_LITERAL':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-37,84,84,84,-72,-71,84,84,84,84,84,84,84,84,84,84,84,84,84,-45,84,84,84,-70,84,84,84,84,84,84,84,84,-38,84,-43,84,-39,-44,84,84,-41,-42,-40,]),'STRING_LITERAL':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-37,85,85,85,-72,-71,85,85,85,85,85,85,85,85,85,85,85,85,85,-45,85,85,85,-70,85,85,85,85,85,85,85,85,-38,85,-43,85,-39,-44,85,85,-41,-42,-40,]),'CHAR_LITERAL':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-37,86,86,86,-72,-71,86,86,86,86,86,86,86,86,86,86,86,86,86,-45,86,86,86,-70,86,86,86,86,86,86,86,86,-38,86,-43,86,-39,-44,86,86,-41,-42,-40,]),'KEYWORD_TRUE':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-37,87,87,87,-72,-71,87,87,87,87,87,87,87,87,87,87,87,87,87,-45,87,87,87,-70,87,87,87,87,87,87,87,87,-38,87,-43,87,-39,-44,87,87,-41,-42,-40,]),'KEYWORD_FALSE':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-37,88,88,88,-72,-71,88,88,88,88,88,88,88,88,88,88,88,88,88,-45,88,88,88,-70,88,88,88,88,88,88,88,88,-38,88,-43,88,-39,-44,88,88,-41,-42,-40,]),'KEYWORD_NULL':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,113,114,115,127,128,130,137,138,139,140,145,146,147,148,149,150,151,152,153,181,189,190,195,203,204,212,224,225,232,235,236,238,239,242,243,255,270,275,286,289,296,297,306,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-37,89,89,89,-72,-71,89,89,89,89,89,89,89,89,89,89,89,89,89,-45,89,89,89,-70,89,89,89,89,89,89,89,89,-38,89,-43,89,-39,-44,89,89,-41,-42,-40,]),'RPAREN':([32,33,45,46,47,48,49,50,51,52,53,54,55,58,72,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,105,117,118,119,120,124,125,134,154,155,165,169,170,172,173,176,184,185,186,187,188,190,191,197,198,199,200,201,202,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,246,249,250,251,254,255,258,264,265,266,267,268,269,277,278,281,282,283,288,290,291,292,293,294,305,310,],[-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,119,-110,-111,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,169,-81,188,-86,-101,193,194,206,-131,222,-59,-92,231,233,234,237,247,-3,-4,-5,-85,251,-150,-75,-76,-77,-78,-132,-142,-113,-114,-116,-117,-105,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-7,-102,278,-88,280,-81,-65,288,290,291,292,293,294,-6,-87,300,-79,-80,-89,-90,-94,-97,-98,-100,310,-91,]),'COMMA':([32,33,45,46,47,48,49,50,51,52,53,54,55,72,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,118,119,120,142,144,154,157,159,165,167,168,169,171,174,175,176,185,187,188,191,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,246,249,250,251,260,261,262,265,277,278,288,290,291,292,293,294,310,],[-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-110,-111,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,189,-86,-101,212,-108,-131,224,-147,-59,229,230,-92,232,235,236,238,248,-5,-85,-150,-113,-114,-116,-117,-105,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-7,-102,189,-88,-109,-148,-149,289,-6,-87,-89,-90,-94,-97,-98,-100,-91,]),'RBRACKET':([72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,101,115,119,122,141,142,143,144,154,166,169,178,182,188,191,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,241,251,260,278,288,290,291,292,293,294,310,],[-110,-111,-112,-81,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,165,179,-86,191,211,-106,-107,-108,-131,228,-92,240,245,-85,-150,-113,-114,-116,-117,-105,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,272,-88,-109,-87,-89,-90,-94,-97,-98,-100,-91,]),'COLON':([72,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,160,169,188,191,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,287,288,290,291,292,293,294,303,310,],[-110,-111,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,225,-92,-85,-150,-113,-114,-116,-117,-105,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,304,-89,-90,-94,-97,-98,-100,308,-91,]),'AND':([72,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[137,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,-113,-114,-116,-117,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'OR':([72,74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[138,-112,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,-113,-114,-116,-117,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'EQ':([74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[139,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,139,139,-116,-117,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'NEQ':([74,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[140,-115,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,140,140,-116,-117,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'GT':([76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[145,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,145,145,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'LT':([76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[146,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,146,146,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'GEQ':([76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[147,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,147,147,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'LEQ':([76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,209,210,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[148,-118,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,148,148,-119,-120,-121,-122,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'PLUS':([77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,213,214,215,216,217,218,219,220,221,222,223,228,231,233,234,237,251,256,278,288,290,291,292,293,294,310,],[149,-123,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,256,-142,149,149,149,149,-124,-125,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,282,-87,-89,-90,-94,-97,-98,-100,-91,]),'MUL':([78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[151,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,151,151,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'DIV':([78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[152,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,152,152,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'MOD':([78,80,81,82,83,84,85,86,87,88,89,91,92,93,119,154,169,188,191,201,202,217,218,219,220,221,222,223,228,231,233,234,237,251,278,288,290,291,292,293,294,310,],[153,-126,-130,-132,-133,-134,-135,-136,-137,-138,-139,-141,-142,-143,-86,-131,-92,-85,-150,-132,-142,153,153,-127,-128,-129,-140,-144,-151,-93,-95,-96,-99,-88,-87,-89,-90,-94,-97,-98,-100,-91,]),'KEYWORD_AS':([96,97,227,],[162,-26,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,26,304,308,],[2,68,309,311,]),'statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[3,56,64,3,56,252,253,298,307,3,3,56,56,]),'declaration_statement':([0,2,23,26,31,65,68,193,194,279,300,304,308,309,311,],[4,4,4,4,99,130,4,4,4,4,4,4,4,4,4,]),'assignment_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'do_while_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'switch_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'return_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_call_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'block_statement':([0,2,23,26,68,193,194,247,279,300,304,308,309,311,],[14,14,14,14,14,14,14,276,14,14,14,14,14,14,]),'function_definition':([0,2,23,26,31,68,193,194,279,300,304,308,309,311,],[15,15,15,15,98,15,15,15,15,15,15,15,15,15,]),'import_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'export_statement':([0,2,23,26,68,193,194,279,300,304,308,309,311,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'type_specifier':([0,2,23,26,31,65,68,117,193,194,229,230,248,279,300,304,308,309,311,],[18,18,18,18,100,132,18,183,18,18,264,265,183,18,18,18,18,18,18,]),'left_hand_side':([0,2,23,26,65,68,127,193,194,255,279,300,304,308,309,311,],[20,20,20,20,131,20,131,20,20,131,20,20,20,20,20,20,]),'function_call':([0,2,23,26,28,58,60,61,62,63,66,68,75,79,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,149,150,151,152,153,189,190,193,194,195,204,212,224,225,232,235,236,238,242,255,279,286,289,300,304,308,309,311,],[29,29,29,29,91,91,91,91,91,91,91,29,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,29,29,91,91,91,91,91,91,91,91,91,91,91,29,91,91,29,29,29,29,29,]),'primitive_type':([0,2,23,26,31,65,68,117,193,194,229,230,248,279,300,304,308,309,311,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'array_type':([0,2,23,26,31,65,68,117,193,194,229,230,248,279,300,304,308,309,311,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'subscript_access':([0,2,23,26,28,58,60,61,62,63,65,66,68,75,79,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,149,150,151,152,153,189,190,193,194,195,204,212,224,225,232,235,236,238,242,255,279,286,289,300,304,308,309,311,],[34,34,34,34,92,92,92,92,92,92,34,92,34,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,202,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,34,34,92,92,92,92,92,92,92,92,92,92,202,34,92,92,34,34,34,34,34,]),'expression':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[71,120,122,123,124,125,134,144,155,160,166,168,170,171,172,173,174,175,176,177,178,197,249,120,254,258,260,160,262,266,267,268,269,274,197,303,305,]),'logical_expression':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'initializer_list':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,180,189,190,195,204,212,224,225,232,235,236,238,242,255,271,286,289,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,244,73,73,73,73,73,73,73,73,73,73,73,273,73,295,73,73,]),'equality_expression':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,207,208,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'relational_expression':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,209,210,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'additive_expression':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,213,214,215,216,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'multiplicative_expression':([28,58,60,61,62,63,66,75,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,149,150,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,217,218,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'unary_expression':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,149,150,151,152,153,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[80,80,80,80,80,80,80,80,154,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,219,220,221,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'primary_expression':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,149,150,151,152,153,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'dictionary_literal':([28,58,60,61,62,63,66,75,79,90,94,102,104,106,107,108,109,110,111,112,114,115,127,137,138,139,140,145,146,147,148,149,150,151,152,153,189,190,195,204,212,224,225,232,235,236,238,242,255,286,289,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'module_path':([30,],[96,]),'multi_brackets':([57,164,205,],[116,116,116,]),'argument_list':([58,190,],[118,250,]),'for_init':([65,],[127,]),'assignment_statement_no_semi':([65,127,255,],[129,198,198,]),'expression_list_opt':([75,],[141,]),'expression_list':([75,],[142,]),'empty':([75,94,117,127,255,],[143,158,186,200,200,]),'key_value_list_opt':([94,],[156,]),'key_value_list':([94,],[157,]),'key_value':([94,224,],[159,261,]),'params':([117,],[184,]),'param_list':([117,],[185,]),'param':([117,248,],[187,277,]),'expression_opt':([127,255,],[196,281,]),'increment_decrement':([127,255,],[199,199,]),'case_list':([259,],[284,]),'case_clause':([259,284,],[285,302,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',347),
  ('function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement','function_definition',6,'p_function_definition','parser.py',351),
  ('params -> param_list','params',1,'p_params','parser.py',359),
  ('params -> empty','params',1,'p_params','parser.py',360),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',367),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',368),
  ('param -> type_specifier IDENTIFIER','param',2,'p_param','parser.py',375),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',379),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',380),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',387),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',388),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',389),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',390),
  ('statement -> do_while_statement','statement',1,'p_statement','parser.py',391),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',392),
  ('statement -> switch_statement','statement',1,'p_statement','parser.py',393),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',394),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',395),
  ('statement -> function_call_statement','statement',1,'p_statement','parser.py',396),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',397),
  ('statement -> function_definition','statement',1,'p_statement','parser.py',398),
  ('statement -> import_statement','statement',1,'p_statement','parser.py',399),
  ('statement -> export_statement','statement',1,'p_statement','parser.py',400),
  ('import_statement -> KEYWORD_IMPORT module_path SEMICOLON','import_statement',3,'p_import_statement','parser.py',404),
  ('import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON','import_statement',5,'p_import_statement','parser.py',405),
  ('module_path -> IDENTIFIER','module_path',1,'p_module_path','parser.py',414),
  ('module_path -> module_path DOT IDENTIFIER','module_path',3,'p_module_path','parser.py',415),
  ('export_statement -> KEYWORD_EXPORT function_definition','export_statement',2,'p_export_statement','parser.py',422),
  ('export_statement -> KEYWORD_EXPORT declaration_statement','export_statement',2,'p_export_statement','parser.py',423),
  ('do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON','do_while_statement',7,'p_do_while_statement','parser.py',433),
  ('switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE','switch_statement',7,'p_switch_statement','parser.py',437),
  ('case_list -> case_clause','case_list',1,'p_case_list','parser.py',441),
  ('case_list -> case_list case_clause','case_list',2,'p_case_list','parser.py',442),
  ('case_clause -> KEYWORD_CASE expression COLON statement_list','case_clause',4,'p_case_clause','parser.py',449),
  ('case_clause -> KEYWORD_DEFAULT COLON statement_list','case_clause',3,'p_case_clause','parser.py',450),
  ('break_statement -> KEYWORD_BREAK SEMICOLON','break_statement',2,'p_break_statement','parser.py',457),
  ('declaration_statement -> type_specifier IDENTIFIER SEMICOLON','declaration_statement',3,'p_declaration_statement','parser.py',461),
  ('declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON','declaration_statement',5,'p_declaration_statement','parser.py',462),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON','declaration_statement',6,'p_declaration_statement','parser.py',463),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON','declaration_statement',8,'p_declaration_statement','parser.py',464),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON','declaration_statement',7,'p_declaration_statement','parser.py',465),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON','declaration_statement',7,'p_declaration_statement','parser.py',466),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON','declaration_statement',5,'p_declaration_statement','parser.py',467),
  ('declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON','declaration_statement',6,'p_declaration_statement','parser.py',468),
  ('declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON','declaration_statement',4,'p_declaration_statement','parser.py',469),
  ('type_specifier -> primitive_type','type_specifier',1,'p_type_specifier','parser.py',499),
  ('type_specifier -> array_type','type_specifier',1,'p_type_specifier','parser.py',500),
  ('primitive_type -> KEYWORD_INT','primitive_type',1,'p_primitive_type','parser.py',504),
  ('primitive_type -> KEYWORD_FLOAT','primitive_type',1,'p_primitive_type','parser.py',505),
  ('primitive_type -> KEYWORD_CHAR','primitive_type',1,'p_primitive_type','parser.py',506),
  ('primitive_type -> KEYWORD_VOID','primitive_type',1,'p_primitive_type','parser.py',507),
  ('primitive_type -> KEYWORD_STRING','primitive_type',1,'p_primitive_type','parser.py',508),
  ('primitive_type -> KEYWORD_BOOL','primitive_type',1,'p_primitive_type','parser.py',509),
  ('primitive_type -> KEYWORD_FILE','primitive_type',1,'p_primitive_type','parser.py',510),
  ('primitive_type -> KEYWORD_SOCKET','primitive_type',1,'p_primitive_type','parser.py',511),
  ('primitive_type -> KEYWORD_DICT','primitive_type',1,'p_primitive_type','parser.py',512),
  ('primitive_type -> KEYWORD_REGEX','primitive_type',1,'p_primitive_type','parser.py',513),
  ('primitive_type -> KEYWORD_ARRAY','primitive_type',1,'p_primitive_type','parser.py',514),
  ('array_type -> primitive_type LBRACKET RBRACKET','array_type',3,'p_array_type','parser.py',519),
  ('multi_brackets -> LBRACKET RBRACKET LBRACKET RBRACKET','multi_brackets',4,'p_multi_brackets','parser.py',523),
  ('multi_brackets -> multi_brackets LBRACKET RBRACKET','multi_brackets',3,'p_multi_brackets','parser.py',524),
  ('assignment_statement -> left_hand_side ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser.py',531),
  ('left_hand_side -> IDENTIFIER','left_hand_side',1,'p_left_hand_side','parser.py',535),
  ('left_hand_side -> subscript_access','left_hand_side',1,'p_left_hand_side','parser.py',536),
  ('assignment_statement_no_semi -> left_hand_side ASSIGN expression','assignment_statement_no_semi',3,'p_assignment_statement_no_semi','parser.py',543),
  ('if_statement -> KEYWORD_IF LPAREN expression RPAREN statement','if_statement',5,'p_if_statement','parser.py',547),
  ('if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement','if_statement',7,'p_if_statement','parser.py',548),
  ('while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement','while_statement',5,'p_while_statement','parser.py',555),
  ('for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement','for_statement',8,'p_for_statement','parser.py',559),
  ('for_init -> assignment_statement_no_semi SEMICOLON','for_init',2,'p_for_init','parser.py',563),
  ('for_init -> declaration_statement','for_init',1,'p_for_init','parser.py',564),
  ('for_init -> SEMICOLON','for_init',1,'p_for_init','parser.py',565),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',574),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',575),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',582),
  ('expression_opt -> assignment_statement_no_semi','expression_opt',1,'p_expression_opt','parser.py',583),
  ('expression_opt -> increment_decrement','expression_opt',1,'p_expression_opt','parser.py',584),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',585),
  ('increment_decrement -> IDENTIFIER PLUS PLUS','increment_decrement',3,'p_increment_decrement','parser.py',589),
  ('increment_decrement -> IDENTIFIER MINUS MINUS','increment_decrement',3,'p_increment_decrement','parser.py',590),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',601),
  ('return_statement -> KEYWORD_RETURN SEMICOLON','return_statement',2,'p_return_statement','parser.py',605),
  ('return_statement -> KEYWORD_RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',606),
  ('function_call_statement -> function_call SEMICOLON','function_call_statement',2,'p_function_call_statement','parser.py',613),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',617),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parser.py',618),
  ('function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN','function_call',6,'p_function_call','parser.py',619),
  ('function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN','function_call',5,'p_function_call','parser.py',620),
  ('function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN','function_call',6,'p_function_call','parser.py',621),
  ('function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN','function_call',6,'p_function_call','parser.py',622),
  ('function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN','function_call',8,'p_function_call','parser.py',623),
  ('function_call -> KEYWORD_EXIT LPAREN RPAREN','function_call',3,'p_function_call','parser.py',624),
  ('function_call -> SYSTEM_SLEEP LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',625),
  ('function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',626),
  ('function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',627),
  ('function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',628),
  ('function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',629),
  ('function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',630),
  ('function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',631),
  ('function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',632),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',673),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',674),
  ('block_statement -> LBRACE RBRACE','block_statement',2,'p_block_statement','parser.py',681),
  ('block_statement -> LBRACE statement_list RBRACE','block_statement',3,'p_block_statement','parser.py',682),
  ('initializer_list -> LBRACKET expression_list_opt RBRACKET','initializer_list',3,'p_initializer_list','parser.py',689),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','parser.py',693),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','parser.py',694),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',701),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',702),
  ('expression -> logical_expression','expression',1,'p_expression','parser.py',709),
  ('expression -> initializer_list','expression',1,'p_expression','parser.py',710),
  ('logical_expression -> equality_expression','logical_expression',1,'p_logical_expression','parser.py',714),
  ('logical_expression -> logical_expression AND equality_expression','logical_expression',3,'p_logical_expression','parser.py',715),
  ('logical_expression -> logical_expression OR equality_expression','logical_expression',3,'p_logical_expression','parser.py',716),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',723),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',724),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',725),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','parser.py',732),
  ('relational_expression -> relational_expression GT additive_expression','relational_expression',3,'p_relational_expression','parser.py',733),
  ('relational_expression -> relational_expression LT additive_expression','relational_expression',3,'p_relational_expression','parser.py',734),
  ('relational_expression -> relational_expression GEQ additive_expression','relational_expression',3,'p_relational_expression','parser.py',735),
  ('relational_expression -> relational_expression LEQ additive_expression','relational_expression',3,'p_relational_expression','parser.py',736),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',743),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',744),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',745),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',752),
  ('multiplicative_expression -> multiplicative_expression MUL unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',753),
  ('multiplicative_expression -> multiplicative_expression DIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',754),
  ('multiplicative_expression -> multiplicative_expression MOD unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',755),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','parser.py',762),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',763),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser.py',770),
  ('primary_expression -> INT_LITERAL','primary_expression',1,'p_primary_expression','parser.py',771),
  ('primary_expression -> FLOAT_LITERAL','primary_expression',1,'p_primary_expression','parser.py',772),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',773),
  ('primary_expression -> CHAR_LITERAL','primary_expression',1,'p_primary_expression','parser.py',774),
  ('primary_expression -> KEYWORD_TRUE','primary_expression',1,'p_primary_expression','parser.py',775),
  ('primary_expression -> KEYWORD_FALSE','primary_expression',1,'p_primary_expression','parser.py',776),
  ('primary_expression -> KEYWORD_NULL','primary_expression',1,'p_primary_expression','parser.py',777),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',778),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','parser.py',779),
  ('primary_expression -> subscript_access','primary_expression',1,'p_primary_expression','parser.py',780),
  ('primary_expression -> dictionary_literal','primary_expression',1,'p_primary_expression','parser.py',781),
  ('dictionary_literal -> LBRACE key_value_list_opt RBRACE','dictionary_literal',3,'p_dictionary_literal','parser.py',795),
  ('key_value_list_opt -> key_value_list','key_value_list_opt',1,'p_key_value_list_opt','parser.py',799),
  ('key_value_list_opt -> empty','key_value_list_opt',1,'p_key_value_list_opt','parser.py',800),
  ('key_value_list -> key_value','key_value_list',1,'p_key_value_list','parser.py',807),
  ('key_value_list -> key_value_list COMMA key_value','key_value_list',3,'p_key_value_list','parser.py',808),
  ('key_value -> expression COLON expression','key_value',3,'p_key_value','parser.py',815),
  ('subscript_access -> IDENTIFIER LBRACKET expression RBRACKET','subscript_access',4,'p_subscript_access','parser.py',819),
  ('subscript_access -> subscript_access LBRACKET expression RBRACKET','subscript_access',4,'p_subscript_access','parser.py',820),
]
