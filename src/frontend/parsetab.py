
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEQleftGTLTGEQLEQleftPLUSMINUSleftMULDIVMODrightUMINUSnonassocLOWER_THAN_ELSEnonassocKEYWORD_ELSEAND ASSIGN CHAR_LITERAL COLON COMMA COMMENT DIV DOT EQ FLOAT_LITERAL GEQ GT IDENTIFIER INT_LITERAL KEYWORD_ARRAY KEYWORD_BOOL KEYWORD_BREAK KEYWORD_CASE KEYWORD_CHAR KEYWORD_CONTINUE KEYWORD_DEFAULT KEYWORD_DICT KEYWORD_DO KEYWORD_ELSE KEYWORD_EXIT KEYWORD_FALSE KEYWORD_FILE KEYWORD_FLOAT KEYWORD_FOR KEYWORD_IF KEYWORD_INT KEYWORD_NULL KEYWORD_RETURN KEYWORD_SOCKET KEYWORD_STRING KEYWORD_SWITCH KEYWORD_TRUE KEYWORD_VOID KEYWORD_WHILE LBRACE LBRACKET LEQ LPAREN LT MINUS MOD MUL NEQ OR PLUS RBRACE RBRACKET RPAREN SEMICOLON STRING_LITERAL SYSTEM_ARR_AVG SYSTEM_ARR_CONTAINS SYSTEM_ARR_INDEXOF SYSTEM_ARR_POP SYSTEM_ARR_PUSH SYSTEM_ARR_SIZE SYSTEM_EXIT SYSTEM_INPUT SYSTEM_OUTPUTprogram : statement_listfunction_definition : type_specifier IDENTIFIER LPAREN params RPAREN block_statementparams : param_list\n                  | emptyparam_list : param\n                      | param_list COMMA paramparam : type_specifier IDENTIFIERstatement_list : statement\n                         | statement_list statementstatement : declaration_statement\n                    | assignment_statement\n                    | if_statement\n                    | while_statement\n                    | do_while_statement\n                    | for_statement\n                    | switch_statement\n                    | break_statement\n                    | return_statement\n                    | function_call_statement\n                    | block_statement\n                    | function_definitiondo_while_statement : KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLONswitch_statement : KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACEcase_list : case_clause\n                     | case_list case_clausecase_clause : KEYWORD_CASE expression COLON statement_list\n                       | KEYWORD_DEFAULT COLON statement_listbreak_statement : KEYWORD_BREAK SEMICOLONdeclaration_statement : type_specifier IDENTIFIER SEMICOLON\n                                | type_specifier IDENTIFIER ASSIGN expression SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLONtype_specifier : primitive_type\n                         | array_typeprimitive_type : KEYWORD_INT\n                          | KEYWORD_FLOAT\n                          | KEYWORD_CHAR\n                          | KEYWORD_VOID\n                          | KEYWORD_STRING\n                          | KEYWORD_BOOL\n                          | KEYWORD_FILE\n                          | KEYWORD_SOCKET\n                          | KEYWORD_DICT\n                          | KEYWORD_ARRAYarray_type : primitive_type LBRACKET RBRACKETassignment_statement : left_hand_side ASSIGN expression SEMICOLONleft_hand_side : IDENTIFIER\n                         | subscript_accessassignment_statement_no_semi : left_hand_side ASSIGN expressionif_statement : KEYWORD_IF LPAREN expression RPAREN statement %prec LOWER_THAN_ELSE\n                        | KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statementwhile_statement : KEYWORD_WHILE LPAREN expression RPAREN statementfor_statement : KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statementfor_init : assignment_statement_no_semi SEMICOLON\n                    | declaration_statement\n                    | SEMICOLONexpression_statement : expression SEMICOLON\n                               | SEMICOLONexpression_opt : expression\n                         | assignment_statement_no_semi\n                         | emptyempty :return_statement : KEYWORD_RETURN SEMICOLON\n                           | KEYWORD_RETURN expression SEMICOLONfunction_call_statement : function_call SEMICOLONfunction_call : IDENTIFIER LPAREN argument_list RPAREN\n                        | IDENTIFIER LPAREN RPAREN\n                        | SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN\n                        | SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN\n                        | SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN\n                        | KEYWORD_EXIT LPAREN RPAREN\n                        | SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN\n                        | SYSTEM_ARR_POP LPAREN expression RPAREN\n                        | SYSTEM_ARR_SIZE LPAREN expression RPAREN\n                        | SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN\n                        | SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN\n                        | SYSTEM_ARR_AVG LPAREN expression RPAREN\n                        | SYSTEM_ARR_AVG LPAREN expression COMMA expression RPARENargument_list : expression\n                        | argument_list COMMA expressionblock_statement : LBRACE RBRACE\n                          | LBRACE statement_list RBRACEinitializer_list : LBRACKET expression_list_opt RBRACKETexpression_list_opt : expression_list\n                               | emptyexpression_list : expression\n                           | expression_list COMMA expressionexpression : logical_expression\n                      | initializer_listlogical_expression : equality_expression\n                             | logical_expression AND equality_expression\n                             | logical_expression OR equality_expressionequality_expression : relational_expression\n                               | equality_expression EQ relational_expression\n                               | equality_expression NEQ relational_expressionrelational_expression : additive_expression\n                                | relational_expression GT additive_expression\n                                | relational_expression LT additive_expression\n                                | relational_expression GEQ additive_expression\n                                | relational_expression LEQ additive_expressionadditive_expression : multiplicative_expression\n                              | additive_expression PLUS multiplicative_expression\n                              | additive_expression MINUS multiplicative_expressionmultiplicative_expression : unary_expression\n                                    | multiplicative_expression MUL unary_expression\n                                    | multiplicative_expression DIV unary_expression\n                                    | multiplicative_expression MOD unary_expressionunary_expression : primary_expression\n                           | MINUS unary_expression %prec UMINUSprimary_expression : IDENTIFIER\n                             | INT_LITERAL\n                             | FLOAT_LITERAL\n                             | STRING_LITERAL\n                             | CHAR_LITERAL\n                             | KEYWORD_TRUE\n                             | KEYWORD_FALSE\n                             | KEYWORD_NULL\n                             | LPAREN expression RPAREN\n                             | function_call\n                             | subscript_access\n                             | dictionary_literaldictionary_literal : LBRACE key_value_list_opt RBRACEkey_value_list_opt : key_value_list\n                              | emptykey_value_list : key_value\n                          | key_value_list COMMA key_valuekey_value : expression COLON expressionsubscript_access : IDENTIFIER LBRACKET expression RBRACKET'
    
_lr_action_items = {'KEYWORD_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[19,19,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,19,19,-9,-84,19,-28,-66,-68,-29,-85,-67,-49,19,19,-30,-35,-53,-55,-31,-2,19,-33,-34,-54,-22,19,-23,19,-32,-56,19,19,19,]),'KEYWORD_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,57,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[20,20,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,20,20,-9,110,-84,20,-28,-66,-68,-29,-85,-67,-49,20,20,-30,-35,-53,-55,-31,-2,20,-33,-34,-54,-22,20,-23,20,-32,-56,20,20,20,]),'KEYWORD_DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[21,21,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,21,21,-9,-84,21,-28,-66,-68,-29,-85,-67,-49,21,21,-30,-35,-53,-55,-31,-2,21,-33,-34,-54,-22,21,-23,21,-32,-56,21,21,21,]),'KEYWORD_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[22,22,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,22,22,-9,-84,22,-28,-66,-68,-29,-85,-67,-49,22,22,-30,-35,-53,-55,-31,-2,22,-33,-34,-54,-22,22,-23,22,-32,-56,22,22,22,]),'KEYWORD_SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[23,23,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,23,23,-9,-84,23,-28,-66,-68,-29,-85,-67,-49,23,23,-30,-35,-53,-55,-31,-2,23,-33,-34,-54,-22,23,-23,23,-32,-56,23,23,23,]),'KEYWORD_BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[25,25,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,25,25,-9,-84,25,-28,-66,-68,-29,-85,-67,-49,25,25,-30,-35,-53,-55,-31,-2,25,-33,-34,-54,-22,25,-23,25,-32,-56,25,25,25,]),'KEYWORD_RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,60,61,62,63,88,99,119,120,166,167,168,208,211,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[26,26,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,26,26,-9,-84,26,-28,-66,-68,-29,-85,-67,-49,26,26,-30,-35,-53,-55,-31,-2,26,-33,-34,-54,-22,26,-23,26,-32,-56,26,26,26,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,179,185,197,198,201,204,205,207,208,210,211,213,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[24,24,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,24,24,87,-9,87,87,87,87,87,87,-84,24,-28,-66,87,87,87,87,-68,87,87,87,87,87,87,87,-29,87,87,87,-59,-58,-85,-67,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-49,24,24,87,-57,87,221,87,87,87,87,87,87,87,-30,87,-35,24,-53,-55,87,-31,-2,24,87,87,-33,-34,-54,-22,24,-23,24,-32,-56,24,24,24,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,24,26,28,29,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,60,61,62,63,68,72,83,87,88,90,91,93,94,95,96,97,98,99,100,101,111,112,114,116,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,145,158,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[17,17,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,17,17,75,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-9,75,75,75,75,75,117,75,-84,17,-28,-66,75,75,75,75,-68,146,75,75,75,75,75,75,75,-29,75,75,174,-59,-58,178,-85,-67,75,75,75,75,75,75,75,75,75,75,75,75,75,-48,212,75,-49,17,17,75,-57,75,75,75,75,75,75,75,75,-30,75,-35,-53,-55,174,-31,-2,17,75,75,-33,-34,-54,-22,17,-23,17,-32,-56,17,17,17,]),'SYSTEM_INPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[31,31,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,31,-9,31,31,31,31,31,31,-84,31,-28,-66,31,31,31,31,-68,31,31,31,31,31,31,31,-29,31,31,31,-59,-58,-85,-67,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-49,31,31,31,-57,31,31,31,31,31,31,31,31,-30,31,-35,-53,-55,31,-31,-2,31,31,31,-33,-34,-54,-22,31,-23,31,-32,-56,31,31,31,]),'SYSTEM_OUTPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[32,32,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,32,32,32,-9,32,32,32,32,32,32,-84,32,-28,-66,32,32,32,32,-68,32,32,32,32,32,32,32,-29,32,32,32,-59,-58,-85,-67,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-49,32,32,32,-57,32,32,32,32,32,32,32,32,-30,32,-35,-53,-55,32,-31,-2,32,32,32,-33,-34,-54,-22,32,-23,32,-32,-56,32,32,32,]),'KEYWORD_EXIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[33,33,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,33,33,-9,33,33,33,33,33,33,-84,33,-28,-66,33,33,33,33,-68,33,33,33,33,33,33,33,-29,33,33,33,-59,-58,-85,-67,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-49,33,33,33,-57,33,33,33,33,33,33,33,33,-30,33,-35,-53,-55,33,-31,-2,33,33,33,-33,-34,-54,-22,33,-23,33,-32,-56,33,33,33,]),'SYSTEM_ARR_PUSH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[34,34,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,34,34,34,-9,34,34,34,34,34,34,-84,34,-28,-66,34,34,34,34,-68,34,34,34,34,34,34,34,-29,34,34,34,-59,-58,-85,-67,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-49,34,34,34,-57,34,34,34,34,34,34,34,34,-30,34,-35,-53,-55,34,-31,-2,34,34,34,-33,-34,-54,-22,34,-23,34,-32,-56,34,34,34,]),'SYSTEM_ARR_POP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[35,35,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,35,35,35,-9,35,35,35,35,35,35,-84,35,-28,-66,35,35,35,35,-68,35,35,35,35,35,35,35,-29,35,35,35,-59,-58,-85,-67,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-49,35,35,35,-57,35,35,35,35,35,35,35,35,-30,35,-35,-53,-55,35,-31,-2,35,35,35,-33,-34,-54,-22,35,-23,35,-32,-56,35,35,35,]),'SYSTEM_ARR_SIZE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[36,36,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,36,36,-9,36,36,36,36,36,36,-84,36,-28,-66,36,36,36,36,-68,36,36,36,36,36,36,36,-29,36,36,36,-59,-58,-85,-67,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-49,36,36,36,-57,36,36,36,36,36,36,36,36,-30,36,-35,-53,-55,36,-31,-2,36,36,36,-33,-34,-54,-22,36,-23,36,-32,-56,36,36,36,]),'SYSTEM_ARR_CONTAINS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[37,37,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,37,37,37,-9,37,37,37,37,37,37,-84,37,-28,-66,37,37,37,37,-68,37,37,37,37,37,37,37,-29,37,37,37,-59,-58,-85,-67,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-49,37,37,37,-57,37,37,37,37,37,37,37,37,-30,37,-35,-53,-55,37,-31,-2,37,37,37,-33,-34,-54,-22,37,-23,37,-32,-56,37,37,37,]),'SYSTEM_ARR_INDEXOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[38,38,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,38,38,38,-9,38,38,38,38,38,38,-84,38,-28,-66,38,38,38,38,-68,38,38,38,38,38,38,38,-29,38,38,38,-59,-58,-85,-67,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-49,38,38,38,-57,38,38,38,38,38,38,38,38,-30,38,-35,-53,-55,38,-31,-2,38,38,38,-33,-34,-54,-22,38,-23,38,-32,-56,38,38,38,]),'SYSTEM_ARR_AVG':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,26,50,52,53,54,55,56,59,60,61,62,63,68,72,83,87,88,91,93,94,95,96,97,98,99,100,101,111,112,114,119,120,121,122,123,124,129,130,131,132,133,134,135,136,137,164,166,167,168,169,176,177,185,197,198,201,204,205,207,208,210,211,216,217,219,231,235,237,242,245,252,253,254,255,256,257,260,262,263,264,265,267,],[39,39,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,39,39,39,-9,39,39,39,39,39,39,-84,39,-28,-66,39,39,39,39,-68,39,39,39,39,39,39,39,-29,39,39,39,-59,-58,-85,-67,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-49,39,39,39,-57,39,39,39,39,39,39,39,39,-30,39,-35,-53,-55,39,-31,-2,39,39,39,-33,-34,-54,-22,39,-23,39,-32,-56,39,39,39,]),'KEYWORD_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[40,40,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,40,40,-9,40,-84,40,-28,-66,-68,-29,40,-85,-67,-49,40,40,40,40,-30,-35,40,-53,-55,-31,-2,40,-33,-34,-54,-22,40,-23,40,-32,-56,40,40,40,]),'KEYWORD_FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[41,41,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,41,41,-9,41,-84,41,-28,-66,-68,-29,41,-85,-67,-49,41,41,41,41,-30,-35,41,-53,-55,-31,-2,41,-33,-34,-54,-22,41,-23,41,-32,-56,41,41,41,]),'KEYWORD_CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[42,42,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,42,42,-9,42,-84,42,-28,-66,-68,-29,42,-85,-67,-49,42,42,42,42,-30,-35,42,-53,-55,-31,-2,42,-33,-34,-54,-22,42,-23,42,-32,-56,42,42,42,]),'KEYWORD_VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[43,43,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,43,43,-9,43,-84,43,-28,-66,-68,-29,43,-85,-67,-49,43,43,43,43,-30,-35,43,-53,-55,-31,-2,43,-33,-34,-54,-22,43,-23,43,-32,-56,43,43,43,]),'KEYWORD_STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[44,44,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,44,-9,44,-84,44,-28,-66,-68,-29,44,-85,-67,-49,44,44,44,44,-30,-35,44,-53,-55,-31,-2,44,-33,-34,-54,-22,44,-23,44,-32,-56,44,44,44,]),'KEYWORD_BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[45,45,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,45,-9,45,-84,45,-28,-66,-68,-29,45,-85,-67,-49,45,45,45,45,-30,-35,45,-53,-55,-31,-2,45,-33,-34,-54,-22,45,-23,45,-32,-56,45,45,45,]),'KEYWORD_FILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[46,46,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,46,46,-9,46,-84,46,-28,-66,-68,-29,46,-85,-67,-49,46,46,46,46,-30,-35,46,-53,-55,-31,-2,46,-33,-34,-54,-22,46,-23,46,-32,-56,46,46,46,]),'KEYWORD_SOCKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[47,47,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,47,-9,47,-84,47,-28,-66,-68,-29,47,-85,-67,-49,47,47,47,47,-30,-35,47,-53,-55,-31,-2,47,-33,-34,-54,-22,47,-23,47,-32,-56,47,47,47,]),'KEYWORD_DICT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[48,48,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,48,-9,48,-84,48,-28,-66,-68,-29,48,-85,-67,-49,48,48,48,48,-30,-35,48,-53,-55,-31,-2,48,-33,-34,-54,-22,48,-23,48,-32,-56,48,48,48,]),'KEYWORD_ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,21,24,50,58,60,61,62,63,88,99,102,119,120,166,167,168,199,200,208,211,214,216,217,231,235,237,252,253,254,255,256,257,260,262,263,264,265,267,],[49,49,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,49,-9,49,-84,49,-28,-66,-68,-29,49,-85,-67,-49,49,49,49,49,-30,-35,49,-53,-55,-31,-2,49,-33,-34,-54,-22,49,-23,49,-32,-56,49,49,49,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,50,60,62,63,88,99,119,120,166,208,211,216,217,231,235,252,253,254,255,257,262,263,],[0,-1,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-84,-28,-66,-68,-29,-85,-67,-49,-30,-35,-53,-55,-31,-2,-33,-34,-54,-22,-23,-32,-56,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,24,50,60,61,62,63,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,99,104,119,120,138,140,141,142,143,148,163,165,166,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,202,203,206,208,211,216,217,223,224,231,235,240,241,244,246,247,248,249,250,252,253,254,255,257,258,262,263,265,266,267,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,60,-9,-84,119,-28,-66,-91,-92,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-65,-68,-29,-70,-85,-67,-112,196,-126,-127,-128,-74,-69,-131,-49,-94,-95,-97,-98,-86,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-30,-35,-53,-55,-129,-130,-31,-2,257,-24,-71,-72,-75,-78,-79,-81,-33,-34,-54,-22,-23,-25,-32,-56,-27,-73,-26,]),'KEYWORD_CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,50,60,62,63,88,99,119,120,166,208,211,216,217,221,231,235,240,241,252,253,254,255,257,258,262,263,265,267,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-84,-28,-66,-68,-29,-85,-67,-49,-30,-35,-53,-55,242,-31,-2,242,-24,-33,-34,-54,-22,-23,-25,-32,-56,-27,-26,]),'KEYWORD_DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,50,60,62,63,88,99,119,120,166,208,211,216,217,221,231,235,240,241,252,253,254,255,257,258,262,263,265,267,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-84,-28,-66,-68,-29,-85,-67,-49,-30,-35,-53,-55,243,-31,-2,243,-24,-33,-34,-54,-22,-23,-25,-32,-56,-27,-26,]),'KEYWORD_ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,60,62,63,88,99,119,120,166,208,211,216,217,231,235,252,253,254,255,257,262,263,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-84,-28,-66,-68,-29,-85,-67,-49,-30,-35,237,-55,-31,-2,-33,-34,-54,-22,-23,-32,-56,]),'ASSIGN':([17,18,30,51,115,117,157,165,174,175,178,209,],[-50,54,-51,100,177,-50,210,-131,-50,-51,100,232,]),'LPAREN':([17,19,20,22,23,26,31,32,33,34,35,36,37,38,39,51,52,53,54,55,56,59,68,72,75,83,87,91,93,94,95,96,97,98,99,100,101,110,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,174,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[52,55,56,58,59,83,90,91,92,93,94,95,96,97,98,102,83,83,83,83,83,83,83,83,52,83,83,83,83,83,83,83,83,83,-29,83,83,169,83,-59,-58,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,52,-57,83,83,83,83,83,83,83,83,-30,83,-35,83,-31,83,83,-33,-34,-32,]),'LBRACKET':([17,26,28,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,59,68,75,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,117,164,169,174,176,177,178,185,197,198,201,204,205,207,208,210,211,219,231,232,242,245,252,253,262,],[53,68,89,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,101,68,68,68,68,68,68,68,53,68,68,68,68,68,68,68,68,68,-29,68,68,68,-59,-58,53,68,68,53,-57,68,101,68,68,68,68,68,68,68,-30,68,-35,68,-31,68,68,68,-33,-34,-32,]),'SEMICOLON':([25,26,27,51,58,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,99,104,107,111,112,113,114,138,148,155,157,163,165,170,171,172,173,174,175,176,178,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,202,203,206,208,209,211,220,231,233,234,238,244,246,247,248,249,250,251,252,253,262,266,],[62,63,88,99,112,120,-91,-92,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-29,-70,166,-65,-59,176,-58,-112,-74,208,211,-69,-131,219,-62,-63,-64,-113,-123,-57,99,-94,-95,-97,-98,-86,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-30,231,-35,-52,-31,252,253,255,-71,-72,-75,-78,-79,-81,262,-33,-34,-32,-73,]),'MINUS':([26,52,53,54,55,56,59,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,91,93,94,95,96,97,98,99,100,101,104,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,138,148,163,164,165,169,174,175,176,177,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,210,211,219,231,242,244,245,246,247,248,249,250,252,253,262,266,],[72,72,72,72,72,72,72,72,134,-104,72,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,72,-122,-123,-124,72,72,72,72,72,72,72,72,-29,72,72,-70,72,-59,-58,72,72,72,72,72,72,72,72,72,72,72,72,72,-112,-74,-69,72,-131,72,-113,-123,-57,72,72,134,134,134,134,-105,-106,-108,-109,-110,-121,-125,72,72,72,-76,-77,72,72,-80,72,-30,72,-35,72,-31,72,-71,72,-72,-75,-78,-79,-81,-33,-34,-32,-73,]),'INT_LITERAL':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-29,76,76,76,-59,-58,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-57,76,76,76,76,76,76,76,76,-30,76,-35,76,-31,76,76,-33,-34,-32,]),'FLOAT_LITERAL':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-29,77,77,77,-59,-58,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-57,77,77,77,77,77,77,77,77,-30,77,-35,77,-31,77,77,-33,-34,-32,]),'STRING_LITERAL':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-29,78,78,78,-59,-58,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-57,78,78,78,78,78,78,78,78,-30,78,-35,78,-31,78,78,-33,-34,-32,]),'CHAR_LITERAL':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-29,79,79,79,-59,-58,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-57,79,79,79,79,79,79,79,79,-30,79,-35,79,-31,79,79,-33,-34,-32,]),'KEYWORD_TRUE':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-29,80,80,80,-59,-58,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-57,80,80,80,80,80,80,80,80,-30,80,-35,80,-31,80,80,-33,-34,-32,]),'KEYWORD_FALSE':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-29,81,81,81,-59,-58,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-57,81,81,81,81,81,81,81,81,-30,81,-35,81,-31,81,81,-33,-34,-32,]),'KEYWORD_NULL':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,99,100,101,111,112,114,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,176,177,185,197,198,201,204,205,207,208,210,211,219,231,242,245,252,253,262,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-29,82,82,82,-59,-58,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-57,82,82,82,82,82,82,82,82,-30,82,-35,82,-31,82,82,-33,-34,-32,]),'RPAREN':([28,29,40,41,42,43,44,45,46,47,48,49,52,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,92,102,103,104,105,108,109,118,138,139,145,148,150,151,154,159,160,161,162,163,165,171,172,173,174,175,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,202,203,206,212,215,218,219,220,225,226,227,228,229,230,236,239,244,246,247,248,249,250,261,266,],[-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,104,-91,-92,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,148,-65,163,-70,-82,167,168,179,-112,195,-48,-74,202,203,206,213,-3,-4,-5,-69,-131,-62,-63,-64,-113,-123,-94,-95,-97,-98,-86,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-7,-83,238,-65,-52,244,246,247,248,249,250,-6,256,-71,-72,-75,-78,-79,-81,266,-73,]),'COMMA':([28,29,40,41,42,43,44,45,46,47,48,49,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,103,104,105,126,128,138,141,143,145,146,147,148,149,152,153,154,160,162,163,165,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,202,203,206,212,215,222,223,224,226,236,244,246,247,248,249,250,266,],[-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-91,-92,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,164,-70,-82,185,-89,-112,197,-128,-48,199,200,-74,201,204,205,207,214,-5,-69,-131,-94,-95,-97,-98,-86,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-7,-83,-90,-129,-130,245,-6,-71,-72,-75,-78,-79,-81,-73,]),'RBRACKET':([65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,89,101,104,106,125,126,127,128,138,148,156,163,165,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,202,203,206,222,244,246,247,248,249,250,266,],[-91,-92,-93,-65,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,145,157,-70,165,184,-87,-88,-89,-112,-74,209,-69,-131,-94,-95,-97,-98,-86,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-90,-71,-72,-75,-78,-79,-81,-73,]),'COLON':([65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,144,148,163,165,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,202,203,206,243,244,246,247,248,249,250,259,266,],[-91,-92,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,198,-74,-69,-131,-94,-95,-97,-98,-86,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,260,-71,-72,-75,-78,-79,-81,264,-73,]),'AND':([65,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,180,181,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[121,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,-94,-95,-97,-98,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'OR':([65,67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,180,181,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[122,-93,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,-94,-95,-97,-98,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'EQ':([67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,180,181,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[123,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,123,123,-97,-98,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'NEQ':([67,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,180,181,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[124,-96,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,124,124,-97,-98,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'GT':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[129,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,129,129,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'LT':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[130,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,130,130,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'GEQ':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[131,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,131,131,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'LEQ':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,182,183,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[132,-99,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,132,132,-100,-101,-102,-103,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'PLUS':([70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,186,187,188,189,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[133,-104,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,133,133,133,133,-105,-106,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'MUL':([71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[135,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,135,135,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'DIV':([71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[136,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,136,136,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),'MOD':([71,73,74,75,76,77,78,79,80,81,82,84,85,86,104,138,148,163,165,174,175,190,191,192,193,194,195,196,202,203,206,244,246,247,248,249,250,266,],[137,-107,-111,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-124,-70,-112,-74,-69,-131,-113,-123,137,137,-108,-109,-110,-121,-125,-76,-77,-80,-71,-72,-75,-78,-79,-81,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,24,260,264,],[2,61,265,267,]),'statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[3,50,57,3,50,216,217,254,263,3,3,50,50,]),'declaration_statement':([0,2,21,24,58,61,167,168,237,256,260,264,265,267,],[4,4,4,4,114,4,4,4,4,4,4,4,4,4,]),'assignment_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'do_while_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'switch_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'return_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_call_statement':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'block_statement':([0,2,21,24,61,167,168,213,237,256,260,264,265,267,],[14,14,14,14,14,14,14,235,14,14,14,14,14,14,]),'function_definition':([0,2,21,24,61,167,168,237,256,260,264,265,267,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'type_specifier':([0,2,21,24,58,61,102,167,168,199,200,214,237,256,260,264,265,267,],[16,16,16,16,116,16,158,16,16,225,226,158,16,16,16,16,16,16,]),'left_hand_side':([0,2,21,24,58,61,111,167,168,219,237,256,260,264,265,267,],[18,18,18,18,115,18,115,18,18,115,18,18,18,18,18,18,]),'function_call':([0,2,21,24,26,52,53,54,55,56,59,61,68,72,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,133,134,135,136,137,164,167,168,169,177,185,197,198,201,204,205,207,210,219,237,242,245,256,260,264,265,267,],[27,27,27,27,84,84,84,84,84,84,84,27,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,27,27,84,84,84,84,84,84,84,84,84,84,84,27,84,84,27,27,27,27,27,]),'primitive_type':([0,2,21,24,58,61,102,167,168,199,200,214,237,256,260,264,265,267,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array_type':([0,2,21,24,58,61,102,167,168,199,200,214,237,256,260,264,265,267,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'subscript_access':([0,2,21,24,26,52,53,54,55,56,58,59,61,68,72,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,133,134,135,136,137,164,167,168,169,177,185,197,198,201,204,205,207,210,219,237,242,245,256,260,264,265,267,],[30,30,30,30,85,85,85,85,85,85,30,85,30,85,85,85,85,85,85,85,85,85,85,85,85,85,175,85,85,85,85,85,85,85,85,85,85,85,85,85,85,30,30,85,85,85,85,85,85,85,85,85,85,175,30,85,85,30,30,30,30,30,]),'expression':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[64,105,106,107,108,109,118,128,139,144,147,149,150,151,152,153,154,155,156,171,215,218,220,222,144,224,227,228,229,230,234,171,259,261,]),'logical_expression':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'initializer_list':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,164,169,177,185,197,198,201,204,205,207,210,219,232,242,245,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,233,66,251,66,66,]),'equality_expression':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,121,122,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,180,181,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'relational_expression':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,182,183,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'additive_expression':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,186,187,188,189,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'multiplicative_expression':([26,52,53,54,55,56,59,68,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,133,134,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,190,191,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'unary_expression':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[73,73,73,73,73,73,73,73,138,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,192,193,194,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'primary_expression':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'dictionary_literal':([26,52,53,54,55,56,59,68,72,83,87,91,93,94,95,96,97,98,100,101,111,121,122,123,124,129,130,131,132,133,134,135,136,137,164,169,177,185,197,198,201,204,205,207,210,219,242,245,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'argument_list':([52,],[103,]),'for_init':([58,],[111,]),'assignment_statement_no_semi':([58,111,219,],[113,172,172,]),'expression_list_opt':([68,],[125,]),'expression_list':([68,],[126,]),'empty':([68,87,102,111,219,],[127,142,161,173,173,]),'key_value_list_opt':([87,],[140,]),'key_value_list':([87,],[141,]),'key_value':([87,197,],[143,223,]),'params':([102,],[159,]),'param_list':([102,],[160,]),'param':([102,214,],[162,236,]),'expression_opt':([111,219,],[170,239,]),'case_list':([221,],[240,]),'case_clause':([221,240,],[241,258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',244),
  ('function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement','function_definition',6,'p_function_definition','parser.py',248),
  ('params -> param_list','params',1,'p_params','parser.py',256),
  ('params -> empty','params',1,'p_params','parser.py',257),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',264),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',265),
  ('param -> type_specifier IDENTIFIER','param',2,'p_param','parser.py',272),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',276),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',277),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',284),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',285),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',286),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',287),
  ('statement -> do_while_statement','statement',1,'p_statement','parser.py',288),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',289),
  ('statement -> switch_statement','statement',1,'p_statement','parser.py',290),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',291),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',292),
  ('statement -> function_call_statement','statement',1,'p_statement','parser.py',293),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',294),
  ('statement -> function_definition','statement',1,'p_statement','parser.py',295),
  ('do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON','do_while_statement',7,'p_do_while_statement','parser.py',299),
  ('switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE','switch_statement',7,'p_switch_statement','parser.py',303),
  ('case_list -> case_clause','case_list',1,'p_case_list','parser.py',307),
  ('case_list -> case_list case_clause','case_list',2,'p_case_list','parser.py',308),
  ('case_clause -> KEYWORD_CASE expression COLON statement_list','case_clause',4,'p_case_clause','parser.py',315),
  ('case_clause -> KEYWORD_DEFAULT COLON statement_list','case_clause',3,'p_case_clause','parser.py',316),
  ('break_statement -> KEYWORD_BREAK SEMICOLON','break_statement',2,'p_break_statement','parser.py',323),
  ('declaration_statement -> type_specifier IDENTIFIER SEMICOLON','declaration_statement',3,'p_declaration_statement','parser.py',327),
  ('declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON','declaration_statement',5,'p_declaration_statement','parser.py',328),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON','declaration_statement',6,'p_declaration_statement','parser.py',329),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON','declaration_statement',8,'p_declaration_statement','parser.py',330),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON','declaration_statement',7,'p_declaration_statement','parser.py',331),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON','declaration_statement',7,'p_declaration_statement','parser.py',332),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON','declaration_statement',5,'p_declaration_statement','parser.py',333),
  ('type_specifier -> primitive_type','type_specifier',1,'p_type_specifier','parser.py',357),
  ('type_specifier -> array_type','type_specifier',1,'p_type_specifier','parser.py',358),
  ('primitive_type -> KEYWORD_INT','primitive_type',1,'p_primitive_type','parser.py',362),
  ('primitive_type -> KEYWORD_FLOAT','primitive_type',1,'p_primitive_type','parser.py',363),
  ('primitive_type -> KEYWORD_CHAR','primitive_type',1,'p_primitive_type','parser.py',364),
  ('primitive_type -> KEYWORD_VOID','primitive_type',1,'p_primitive_type','parser.py',365),
  ('primitive_type -> KEYWORD_STRING','primitive_type',1,'p_primitive_type','parser.py',366),
  ('primitive_type -> KEYWORD_BOOL','primitive_type',1,'p_primitive_type','parser.py',367),
  ('primitive_type -> KEYWORD_FILE','primitive_type',1,'p_primitive_type','parser.py',368),
  ('primitive_type -> KEYWORD_SOCKET','primitive_type',1,'p_primitive_type','parser.py',369),
  ('primitive_type -> KEYWORD_DICT','primitive_type',1,'p_primitive_type','parser.py',370),
  ('primitive_type -> KEYWORD_ARRAY','primitive_type',1,'p_primitive_type','parser.py',371),
  ('array_type -> primitive_type LBRACKET RBRACKET','array_type',3,'p_array_type','parser.py',376),
  ('assignment_statement -> left_hand_side ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser.py',380),
  ('left_hand_side -> IDENTIFIER','left_hand_side',1,'p_left_hand_side','parser.py',384),
  ('left_hand_side -> subscript_access','left_hand_side',1,'p_left_hand_side','parser.py',385),
  ('assignment_statement_no_semi -> left_hand_side ASSIGN expression','assignment_statement_no_semi',3,'p_assignment_statement_no_semi','parser.py',392),
  ('if_statement -> KEYWORD_IF LPAREN expression RPAREN statement','if_statement',5,'p_if_statement','parser.py',396),
  ('if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement','if_statement',7,'p_if_statement','parser.py',397),
  ('while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement','while_statement',5,'p_while_statement','parser.py',404),
  ('for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement','for_statement',8,'p_for_statement','parser.py',408),
  ('for_init -> assignment_statement_no_semi SEMICOLON','for_init',2,'p_for_init','parser.py',412),
  ('for_init -> declaration_statement','for_init',1,'p_for_init','parser.py',413),
  ('for_init -> SEMICOLON','for_init',1,'p_for_init','parser.py',414),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',423),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',424),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',431),
  ('expression_opt -> assignment_statement_no_semi','expression_opt',1,'p_expression_opt','parser.py',432),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',433),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',437),
  ('return_statement -> KEYWORD_RETURN SEMICOLON','return_statement',2,'p_return_statement','parser.py',441),
  ('return_statement -> KEYWORD_RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',442),
  ('function_call_statement -> function_call SEMICOLON','function_call_statement',2,'p_function_call_statement','parser.py',449),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',453),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parser.py',454),
  ('function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN','function_call',6,'p_function_call','parser.py',455),
  ('function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN','function_call',6,'p_function_call','parser.py',456),
  ('function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN','function_call',8,'p_function_call','parser.py',457),
  ('function_call -> KEYWORD_EXIT LPAREN RPAREN','function_call',3,'p_function_call','parser.py',458),
  ('function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',459),
  ('function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',460),
  ('function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',461),
  ('function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',462),
  ('function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',463),
  ('function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',464),
  ('function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN','function_call',6,'p_function_call','parser.py',465),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',494),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',495),
  ('block_statement -> LBRACE RBRACE','block_statement',2,'p_block_statement','parser.py',502),
  ('block_statement -> LBRACE statement_list RBRACE','block_statement',3,'p_block_statement','parser.py',503),
  ('initializer_list -> LBRACKET expression_list_opt RBRACKET','initializer_list',3,'p_initializer_list','parser.py',510),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','parser.py',514),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','parser.py',515),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',522),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',523),
  ('expression -> logical_expression','expression',1,'p_expression','parser.py',530),
  ('expression -> initializer_list','expression',1,'p_expression','parser.py',531),
  ('logical_expression -> equality_expression','logical_expression',1,'p_logical_expression','parser.py',535),
  ('logical_expression -> logical_expression AND equality_expression','logical_expression',3,'p_logical_expression','parser.py',536),
  ('logical_expression -> logical_expression OR equality_expression','logical_expression',3,'p_logical_expression','parser.py',537),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',544),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',545),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',546),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','parser.py',553),
  ('relational_expression -> relational_expression GT additive_expression','relational_expression',3,'p_relational_expression','parser.py',554),
  ('relational_expression -> relational_expression LT additive_expression','relational_expression',3,'p_relational_expression','parser.py',555),
  ('relational_expression -> relational_expression GEQ additive_expression','relational_expression',3,'p_relational_expression','parser.py',556),
  ('relational_expression -> relational_expression LEQ additive_expression','relational_expression',3,'p_relational_expression','parser.py',557),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',564),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',565),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',566),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',573),
  ('multiplicative_expression -> multiplicative_expression MUL unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',574),
  ('multiplicative_expression -> multiplicative_expression DIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',575),
  ('multiplicative_expression -> multiplicative_expression MOD unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',576),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','parser.py',583),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',584),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser.py',591),
  ('primary_expression -> INT_LITERAL','primary_expression',1,'p_primary_expression','parser.py',592),
  ('primary_expression -> FLOAT_LITERAL','primary_expression',1,'p_primary_expression','parser.py',593),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',594),
  ('primary_expression -> CHAR_LITERAL','primary_expression',1,'p_primary_expression','parser.py',595),
  ('primary_expression -> KEYWORD_TRUE','primary_expression',1,'p_primary_expression','parser.py',596),
  ('primary_expression -> KEYWORD_FALSE','primary_expression',1,'p_primary_expression','parser.py',597),
  ('primary_expression -> KEYWORD_NULL','primary_expression',1,'p_primary_expression','parser.py',598),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',599),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','parser.py',600),
  ('primary_expression -> subscript_access','primary_expression',1,'p_primary_expression','parser.py',601),
  ('primary_expression -> dictionary_literal','primary_expression',1,'p_primary_expression','parser.py',602),
  ('dictionary_literal -> LBRACE key_value_list_opt RBRACE','dictionary_literal',3,'p_dictionary_literal','parser.py',616),
  ('key_value_list_opt -> key_value_list','key_value_list_opt',1,'p_key_value_list_opt','parser.py',620),
  ('key_value_list_opt -> empty','key_value_list_opt',1,'p_key_value_list_opt','parser.py',621),
  ('key_value_list -> key_value','key_value_list',1,'p_key_value_list','parser.py',628),
  ('key_value_list -> key_value_list COMMA key_value','key_value_list',3,'p_key_value_list','parser.py',629),
  ('key_value -> expression COLON expression','key_value',3,'p_key_value','parser.py',636),
  ('subscript_access -> IDENTIFIER LBRACKET expression RBRACKET','subscript_access',4,'p_subscript_access','parser.py',640),
]
