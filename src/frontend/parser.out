Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    KEYWORD_CONTINUE
    KEYWORD_FROM
    SYSTEM_EXIT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement
Rule 3     params -> param_list
Rule 4     params -> empty
Rule 5     param_list -> param
Rule 6     param_list -> param_list COMMA param
Rule 7     param -> type_specifier IDENTIFIER
Rule 8     statement_list -> statement
Rule 9     statement_list -> statement_list statement
Rule 10    statement -> declaration_statement
Rule 11    statement -> assignment_statement
Rule 12    statement -> if_statement
Rule 13    statement -> while_statement
Rule 14    statement -> do_while_statement
Rule 15    statement -> for_statement
Rule 16    statement -> switch_statement
Rule 17    statement -> break_statement
Rule 18    statement -> return_statement
Rule 19    statement -> function_call_statement
Rule 20    statement -> block_statement
Rule 21    statement -> function_definition
Rule 22    statement -> import_statement
Rule 23    statement -> export_statement
Rule 24    import_statement -> KEYWORD_IMPORT module_path SEMICOLON
Rule 25    import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
Rule 26    module_path -> IDENTIFIER
Rule 27    module_path -> module_path DOT IDENTIFIER
Rule 28    export_statement -> KEYWORD_EXPORT function_definition
Rule 29    export_statement -> KEYWORD_EXPORT declaration_statement
Rule 30    do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
Rule 31    switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
Rule 32    case_list -> case_clause
Rule 33    case_list -> case_list case_clause
Rule 34    case_clause -> KEYWORD_CASE expression COLON statement_list
Rule 35    case_clause -> KEYWORD_DEFAULT COLON statement_list
Rule 36    break_statement -> KEYWORD_BREAK SEMICOLON
Rule 37    declaration_statement -> type_specifier IDENTIFIER SEMICOLON
Rule 38    declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON
Rule 39    declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
Rule 40    declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
Rule 41    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
Rule 42    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
Rule 43    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
Rule 44    declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
Rule 45    declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON
Rule 46    type_specifier -> primitive_type
Rule 47    type_specifier -> array_type
Rule 48    primitive_type -> KEYWORD_INT
Rule 49    primitive_type -> KEYWORD_FLOAT
Rule 50    primitive_type -> KEYWORD_CHAR
Rule 51    primitive_type -> KEYWORD_VOID
Rule 52    primitive_type -> KEYWORD_STRING
Rule 53    primitive_type -> KEYWORD_BOOL
Rule 54    primitive_type -> KEYWORD_FILE
Rule 55    primitive_type -> KEYWORD_SOCKET
Rule 56    primitive_type -> KEYWORD_DICT
Rule 57    primitive_type -> KEYWORD_REGEX
Rule 58    primitive_type -> KEYWORD_ARRAY
Rule 59    array_type -> primitive_type LBRACKET RBRACKET
Rule 60    multi_brackets -> LBRACKET RBRACKET LBRACKET RBRACKET
Rule 61    multi_brackets -> multi_brackets LBRACKET RBRACKET
Rule 62    assignment_statement -> left_hand_side ASSIGN expression SEMICOLON
Rule 63    left_hand_side -> IDENTIFIER
Rule 64    left_hand_side -> subscript_access
Rule 65    assignment_statement_no_semi -> left_hand_side ASSIGN expression
Rule 66    if_statement -> KEYWORD_IF LPAREN expression RPAREN statement
Rule 67    if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
Rule 68    while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement
Rule 69    for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
Rule 70    for_init -> assignment_statement_no_semi SEMICOLON
Rule 71    for_init -> declaration_statement
Rule 72    for_init -> SEMICOLON
Rule 73    expression_statement -> expression SEMICOLON
Rule 74    expression_statement -> SEMICOLON
Rule 75    expression_opt -> expression
Rule 76    expression_opt -> assignment_statement_no_semi
Rule 77    expression_opt -> increment_decrement
Rule 78    expression_opt -> empty
Rule 79    increment_decrement -> IDENTIFIER PLUS PLUS
Rule 80    increment_decrement -> IDENTIFIER MINUS MINUS
Rule 81    empty -> <empty>
Rule 82    return_statement -> KEYWORD_RETURN SEMICOLON
Rule 83    return_statement -> KEYWORD_RETURN expression SEMICOLON
Rule 84    function_call_statement -> function_call SEMICOLON
Rule 85    function_call -> IDENTIFIER LPAREN argument_list RPAREN
Rule 86    function_call -> IDENTIFIER LPAREN RPAREN
Rule 87    function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
Rule 88    function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
Rule 89    function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
Rule 90    function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
Rule 91    function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
Rule 92    function_call -> KEYWORD_EXIT LPAREN RPAREN
Rule 93    function_call -> SYSTEM_SLEEP LPAREN expression RPAREN
Rule 94    function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
Rule 95    function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN
Rule 96    function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN
Rule 97    function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
Rule 98    function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
Rule 99    function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN
Rule 100   function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
Rule 101   argument_list -> expression
Rule 102   argument_list -> argument_list COMMA expression
Rule 103   block_statement -> LBRACE RBRACE
Rule 104   block_statement -> LBRACE statement_list RBRACE
Rule 105   initializer_list -> LBRACKET expression_list_opt RBRACKET
Rule 106   expression_list_opt -> expression_list
Rule 107   expression_list_opt -> empty
Rule 108   expression_list -> expression
Rule 109   expression_list -> expression_list COMMA expression
Rule 110   expression -> logical_expression
Rule 111   expression -> initializer_list
Rule 112   logical_expression -> equality_expression
Rule 113   logical_expression -> logical_expression AND equality_expression
Rule 114   logical_expression -> logical_expression OR equality_expression
Rule 115   equality_expression -> relational_expression
Rule 116   equality_expression -> equality_expression EQ relational_expression
Rule 117   equality_expression -> equality_expression NEQ relational_expression
Rule 118   relational_expression -> additive_expression
Rule 119   relational_expression -> relational_expression GT additive_expression
Rule 120   relational_expression -> relational_expression LT additive_expression
Rule 121   relational_expression -> relational_expression GEQ additive_expression
Rule 122   relational_expression -> relational_expression LEQ additive_expression
Rule 123   additive_expression -> multiplicative_expression
Rule 124   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 125   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 126   multiplicative_expression -> unary_expression
Rule 127   multiplicative_expression -> multiplicative_expression MUL unary_expression
Rule 128   multiplicative_expression -> multiplicative_expression DIV unary_expression
Rule 129   multiplicative_expression -> multiplicative_expression MOD unary_expression
Rule 130   unary_expression -> primary_expression
Rule 131   unary_expression -> MINUS unary_expression
Rule 132   primary_expression -> IDENTIFIER
Rule 133   primary_expression -> INT_LITERAL
Rule 134   primary_expression -> FLOAT_LITERAL
Rule 135   primary_expression -> STRING_LITERAL
Rule 136   primary_expression -> CHAR_LITERAL
Rule 137   primary_expression -> KEYWORD_TRUE
Rule 138   primary_expression -> KEYWORD_FALSE
Rule 139   primary_expression -> KEYWORD_NULL
Rule 140   primary_expression -> LPAREN expression RPAREN
Rule 141   primary_expression -> function_call
Rule 142   primary_expression -> subscript_access
Rule 143   primary_expression -> dictionary_literal
Rule 144   dictionary_literal -> LBRACE key_value_list_opt RBRACE
Rule 145   key_value_list_opt -> key_value_list
Rule 146   key_value_list_opt -> empty
Rule 147   key_value_list -> key_value
Rule 148   key_value_list -> key_value_list COMMA key_value
Rule 149   key_value -> expression COLON expression
Rule 150   subscript_access -> IDENTIFIER LBRACKET expression RBRACKET
Rule 151   subscript_access -> subscript_access LBRACKET expression RBRACKET

Terminals, with rules where they appear

AND                  : 113
ASSIGN               : 38 40 41 42 44 62 65
CHAR_LITERAL         : 136
COLON                : 34 35 149
COMMA                : 6 89 90 91 91 94 97 98 100 102 109 148
COMMENT              : 
DIV                  : 128
DOT                  : 27 87 88
EQ                   : 116
FLOAT_LITERAL        : 134
GEQ                  : 121
GT                   : 119
IDENTIFIER           : 2 7 25 26 27 37 38 39 40 41 42 43 44 45 63 79 80 85 86 87 87 88 88 89 132 150
INT_LITERAL          : 133
KEYWORD_ARRAY        : 58
KEYWORD_AS           : 25
KEYWORD_BOOL         : 53
KEYWORD_BREAK        : 36
KEYWORD_CASE         : 34
KEYWORD_CHAR         : 50
KEYWORD_CONTINUE     : 
KEYWORD_DEFAULT      : 35
KEYWORD_DICT         : 56
KEYWORD_DO           : 30
KEYWORD_ELSE         : 67
KEYWORD_EXIT         : 92
KEYWORD_EXPORT       : 28 29
KEYWORD_FALSE        : 138
KEYWORD_FILE         : 54
KEYWORD_FLOAT        : 49
KEYWORD_FOR          : 69
KEYWORD_FROM         : 
KEYWORD_IF           : 66 67
KEYWORD_IMPORT       : 24 25
KEYWORD_INT          : 48
KEYWORD_NULL         : 139
KEYWORD_REGEX        : 57
KEYWORD_RETURN       : 82 83
KEYWORD_SOCKET       : 55
KEYWORD_STRING       : 52
KEYWORD_SWITCH       : 31
KEYWORD_TRUE         : 137
KEYWORD_VOID         : 51
KEYWORD_WHILE        : 30 68
LBRACE               : 31 103 104 144
LBRACKET             : 39 40 41 42 43 59 60 60 61 105 150 151
LEQ                  : 122
LPAREN               : 2 30 31 66 67 68 69 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 140
LT                   : 120
MINUS                : 80 80 125 131
MOD                  : 129
MUL                  : 127
NEQ                  : 117
OR                   : 114
PLUS                 : 79 79 124
RBRACE               : 31 103 104 144
RBRACKET             : 39 40 41 42 43 59 60 60 61 105 150 151
RPAREN               : 2 30 31 66 67 68 69 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 140
SEMICOLON            : 24 25 30 36 37 38 39 40 41 42 43 44 45 62 69 70 72 73 74 82 83 84
STRING_LITERAL       : 135
SYSTEM_ARR_AVG       : 99 100
SYSTEM_ARR_CONTAINS  : 97
SYSTEM_ARR_INDEXOF   : 98
SYSTEM_ARR_POP       : 95
SYSTEM_ARR_PUSH      : 94
SYSTEM_ARR_SIZE      : 96
SYSTEM_EXIT          : 
SYSTEM_INPUT         : 89
SYSTEM_OUTPUT        : 90 91
SYSTEM_SLEEP         : 93
error                : 

Nonterminals, with rules where they appear

additive_expression  : 118 119 120 121 122 124 125
argument_list        : 85 87 102
array_type           : 47
assignment_statement : 11
assignment_statement_no_semi : 70 76
block_statement      : 2 20
break_statement      : 17
case_clause          : 32 33
case_list            : 31 33
declaration_statement : 10 29 71
dictionary_literal   : 143
do_while_statement   : 14
empty                : 4 78 107 146
equality_expression  : 112 113 114 116 117
export_statement     : 23
expression           : 30 31 34 38 39 40 42 62 65 66 67 68 73 75 83 90 91 91 93 94 94 95 96 97 97 98 98 99 100 100 101 102 108 109 140 149 149 150 151
expression_list      : 106 109
expression_list_opt  : 105
expression_opt       : 69 69
expression_statement : 
for_init             : 69
for_statement        : 15
function_call        : 84 141
function_call_statement : 19
function_definition  : 21 28
if_statement         : 12
import_statement     : 22
increment_decrement  : 77
initializer_list     : 40 41 44 111
key_value            : 147 148
key_value_list       : 145 148
key_value_list_opt   : 144
left_hand_side       : 62 65
logical_expression   : 110 113 114
module_path          : 24 25 27
multi_brackets       : 44 45 61
multiplicative_expression : 123 124 125 127 128 129
param                : 5 6
param_list           : 3 6
params               : 2
primary_expression   : 130
primitive_type       : 46 59
program              : 0
relational_expression : 115 116 117 119 120 121 122
return_statement     : 18
statement            : 8 9 30 66 67 67 68 69
statement_list       : 1 9 34 35 104
subscript_access     : 64 142 151
switch_statement     : 16
type_specifier       : 2 7 37 38 39 40 41 42 43 44 45 89 90 91
unary_expression     : 126 127 128 129 131
while_statement      : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    $end            reduce using rule 1 (program -> statement_list .)
    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 56
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 3

    (8) statement_list -> statement .

    KEYWORD_IF      reduce using rule 8 (statement_list -> statement .)
    KEYWORD_WHILE   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DO      reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FOR     reduce using rule 8 (statement_list -> statement .)
    KEYWORD_SWITCH  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_BREAK   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_RETURN  reduce using rule 8 (statement_list -> statement .)
    LBRACE          reduce using rule 8 (statement_list -> statement .)
    KEYWORD_IMPORT  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_EXPORT  reduce using rule 8 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 8 (statement_list -> statement .)
    SYSTEM_INPUT    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_OUTPUT   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_EXIT    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_SLEEP    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_PUSH reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_POP  reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_SIZE reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_AVG  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_INT     reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FLOAT   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_CHAR    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_VOID    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_STRING  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_BOOL    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FILE    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_SOCKET  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DICT    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_REGEX   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_ARRAY   reduce using rule 8 (statement_list -> statement .)
    $end            reduce using rule 8 (statement_list -> statement .)
    RBRACE          reduce using rule 8 (statement_list -> statement .)
    KEYWORD_CASE    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DEFAULT reduce using rule 8 (statement_list -> statement .)


state 4

    (10) statement -> declaration_statement .

    KEYWORD_IF      reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_WHILE   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DO      reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FOR     reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_SWITCH  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_BREAK   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_RETURN  reduce using rule 10 (statement -> declaration_statement .)
    LBRACE          reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_IMPORT  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_EXPORT  reduce using rule 10 (statement -> declaration_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_INPUT    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_EXIT    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_SLEEP    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_INT     reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FLOAT   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_CHAR    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_VOID    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_STRING  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_BOOL    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FILE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_SOCKET  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DICT    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_REGEX   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_ARRAY   reduce using rule 10 (statement -> declaration_statement .)
    $end            reduce using rule 10 (statement -> declaration_statement .)
    RBRACE          reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_ELSE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_CASE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DEFAULT reduce using rule 10 (statement -> declaration_statement .)


state 5

    (11) statement -> assignment_statement .

    KEYWORD_IF      reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_WHILE   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DO      reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FOR     reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_SWITCH  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_BREAK   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_RETURN  reduce using rule 11 (statement -> assignment_statement .)
    LBRACE          reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_IMPORT  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_EXPORT  reduce using rule 11 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_INPUT    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_OUTPUT   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_EXIT    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_SLEEP    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_PUSH reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_POP  reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_SIZE reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_AVG  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_INT     reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FLOAT   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_CHAR    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_VOID    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_STRING  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_BOOL    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FILE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_SOCKET  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DICT    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_REGEX   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_ARRAY   reduce using rule 11 (statement -> assignment_statement .)
    $end            reduce using rule 11 (statement -> assignment_statement .)
    RBRACE          reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_ELSE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_CASE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DEFAULT reduce using rule 11 (statement -> assignment_statement .)


state 6

    (12) statement -> if_statement .

    KEYWORD_IF      reduce using rule 12 (statement -> if_statement .)
    KEYWORD_WHILE   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DO      reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FOR     reduce using rule 12 (statement -> if_statement .)
    KEYWORD_SWITCH  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_BREAK   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_RETURN  reduce using rule 12 (statement -> if_statement .)
    LBRACE          reduce using rule 12 (statement -> if_statement .)
    KEYWORD_IMPORT  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_EXPORT  reduce using rule 12 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> if_statement .)
    SYSTEM_INPUT    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_OUTPUT   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_EXIT    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_SLEEP    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_PUSH reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_POP  reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_SIZE reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_AVG  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_INT     reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FLOAT   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_CHAR    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_VOID    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_STRING  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_BOOL    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FILE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_SOCKET  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DICT    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_REGEX   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_ARRAY   reduce using rule 12 (statement -> if_statement .)
    $end            reduce using rule 12 (statement -> if_statement .)
    RBRACE          reduce using rule 12 (statement -> if_statement .)
    KEYWORD_ELSE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_CASE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DEFAULT reduce using rule 12 (statement -> if_statement .)


state 7

    (13) statement -> while_statement .

    KEYWORD_IF      reduce using rule 13 (statement -> while_statement .)
    KEYWORD_WHILE   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DO      reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FOR     reduce using rule 13 (statement -> while_statement .)
    KEYWORD_SWITCH  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_BREAK   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_RETURN  reduce using rule 13 (statement -> while_statement .)
    LBRACE          reduce using rule 13 (statement -> while_statement .)
    KEYWORD_IMPORT  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_EXPORT  reduce using rule 13 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> while_statement .)
    SYSTEM_INPUT    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_OUTPUT   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_EXIT    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_SLEEP    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_PUSH reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_POP  reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_SIZE reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_AVG  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_INT     reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FLOAT   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_CHAR    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_VOID    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_STRING  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_BOOL    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FILE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_SOCKET  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DICT    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_REGEX   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_ARRAY   reduce using rule 13 (statement -> while_statement .)
    $end            reduce using rule 13 (statement -> while_statement .)
    RBRACE          reduce using rule 13 (statement -> while_statement .)
    KEYWORD_ELSE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_CASE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DEFAULT reduce using rule 13 (statement -> while_statement .)


state 8

    (14) statement -> do_while_statement .

    KEYWORD_IF      reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_WHILE   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DO      reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FOR     reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_SWITCH  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_BREAK   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_RETURN  reduce using rule 14 (statement -> do_while_statement .)
    LBRACE          reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_IMPORT  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_EXPORT  reduce using rule 14 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_INPUT    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_OUTPUT   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_EXIT    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_SLEEP    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_PUSH reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_POP  reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_SIZE reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_AVG  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_INT     reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FLOAT   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_CHAR    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_VOID    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_STRING  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_BOOL    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FILE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_SOCKET  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DICT    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_REGEX   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_ARRAY   reduce using rule 14 (statement -> do_while_statement .)
    $end            reduce using rule 14 (statement -> do_while_statement .)
    RBRACE          reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_ELSE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_CASE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DEFAULT reduce using rule 14 (statement -> do_while_statement .)


state 9

    (15) statement -> for_statement .

    KEYWORD_IF      reduce using rule 15 (statement -> for_statement .)
    KEYWORD_WHILE   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DO      reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FOR     reduce using rule 15 (statement -> for_statement .)
    KEYWORD_SWITCH  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_BREAK   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_RETURN  reduce using rule 15 (statement -> for_statement .)
    LBRACE          reduce using rule 15 (statement -> for_statement .)
    KEYWORD_IMPORT  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_EXPORT  reduce using rule 15 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> for_statement .)
    SYSTEM_INPUT    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_OUTPUT   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_EXIT    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_SLEEP    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_PUSH reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_POP  reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_SIZE reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_AVG  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_INT     reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FLOAT   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_CHAR    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_VOID    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_STRING  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_BOOL    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FILE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_SOCKET  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DICT    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_REGEX   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_ARRAY   reduce using rule 15 (statement -> for_statement .)
    $end            reduce using rule 15 (statement -> for_statement .)
    RBRACE          reduce using rule 15 (statement -> for_statement .)
    KEYWORD_ELSE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_CASE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DEFAULT reduce using rule 15 (statement -> for_statement .)


state 10

    (16) statement -> switch_statement .

    KEYWORD_IF      reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_WHILE   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DO      reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FOR     reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_SWITCH  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_BREAK   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_RETURN  reduce using rule 16 (statement -> switch_statement .)
    LBRACE          reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_IMPORT  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_EXPORT  reduce using rule 16 (statement -> switch_statement .)
    IDENTIFIER      reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_INPUT    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_OUTPUT   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_EXIT    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_SLEEP    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_PUSH reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_POP  reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_SIZE reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_AVG  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_INT     reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FLOAT   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_CHAR    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_VOID    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_STRING  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_BOOL    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FILE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_SOCKET  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DICT    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_REGEX   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_ARRAY   reduce using rule 16 (statement -> switch_statement .)
    $end            reduce using rule 16 (statement -> switch_statement .)
    RBRACE          reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_ELSE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_CASE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DEFAULT reduce using rule 16 (statement -> switch_statement .)


state 11

    (17) statement -> break_statement .

    KEYWORD_IF      reduce using rule 17 (statement -> break_statement .)
    KEYWORD_WHILE   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DO      reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FOR     reduce using rule 17 (statement -> break_statement .)
    KEYWORD_SWITCH  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_BREAK   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_RETURN  reduce using rule 17 (statement -> break_statement .)
    LBRACE          reduce using rule 17 (statement -> break_statement .)
    KEYWORD_IMPORT  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_EXPORT  reduce using rule 17 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> break_statement .)
    SYSTEM_INPUT    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_OUTPUT   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_EXIT    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_SLEEP    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_PUSH reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_POP  reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_SIZE reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_AVG  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_INT     reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FLOAT   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_CHAR    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_VOID    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_STRING  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_BOOL    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FILE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_SOCKET  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DICT    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_REGEX   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_ARRAY   reduce using rule 17 (statement -> break_statement .)
    $end            reduce using rule 17 (statement -> break_statement .)
    RBRACE          reduce using rule 17 (statement -> break_statement .)
    KEYWORD_ELSE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_CASE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DEFAULT reduce using rule 17 (statement -> break_statement .)


state 12

    (18) statement -> return_statement .

    KEYWORD_IF      reduce using rule 18 (statement -> return_statement .)
    KEYWORD_WHILE   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DO      reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FOR     reduce using rule 18 (statement -> return_statement .)
    KEYWORD_SWITCH  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_BREAK   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_RETURN  reduce using rule 18 (statement -> return_statement .)
    LBRACE          reduce using rule 18 (statement -> return_statement .)
    KEYWORD_IMPORT  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_EXPORT  reduce using rule 18 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 18 (statement -> return_statement .)
    SYSTEM_INPUT    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_OUTPUT   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_EXIT    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_SLEEP    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_PUSH reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_POP  reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_SIZE reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_AVG  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_INT     reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FLOAT   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_CHAR    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_VOID    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_STRING  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_BOOL    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FILE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_SOCKET  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DICT    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_REGEX   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_ARRAY   reduce using rule 18 (statement -> return_statement .)
    $end            reduce using rule 18 (statement -> return_statement .)
    RBRACE          reduce using rule 18 (statement -> return_statement .)
    KEYWORD_ELSE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_CASE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DEFAULT reduce using rule 18 (statement -> return_statement .)


state 13

    (19) statement -> function_call_statement .

    KEYWORD_IF      reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_WHILE   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DO      reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FOR     reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_SWITCH  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_BREAK   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_RETURN  reduce using rule 19 (statement -> function_call_statement .)
    LBRACE          reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_IMPORT  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_EXPORT  reduce using rule 19 (statement -> function_call_statement .)
    IDENTIFIER      reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_INPUT    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_OUTPUT   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_EXIT    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_SLEEP    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_PUSH reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_POP  reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_SIZE reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_AVG  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_INT     reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FLOAT   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_CHAR    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_VOID    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_STRING  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_BOOL    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FILE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_SOCKET  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DICT    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_REGEX   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_ARRAY   reduce using rule 19 (statement -> function_call_statement .)
    $end            reduce using rule 19 (statement -> function_call_statement .)
    RBRACE          reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_ELSE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_CASE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DEFAULT reduce using rule 19 (statement -> function_call_statement .)


state 14

    (20) statement -> block_statement .

    KEYWORD_IF      reduce using rule 20 (statement -> block_statement .)
    KEYWORD_WHILE   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DO      reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FOR     reduce using rule 20 (statement -> block_statement .)
    KEYWORD_SWITCH  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_BREAK   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_RETURN  reduce using rule 20 (statement -> block_statement .)
    LBRACE          reduce using rule 20 (statement -> block_statement .)
    KEYWORD_IMPORT  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_EXPORT  reduce using rule 20 (statement -> block_statement .)
    IDENTIFIER      reduce using rule 20 (statement -> block_statement .)
    SYSTEM_INPUT    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_OUTPUT   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_EXIT    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_SLEEP    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_PUSH reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_POP  reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_SIZE reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_AVG  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_INT     reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FLOAT   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_CHAR    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_VOID    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_STRING  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_BOOL    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FILE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_SOCKET  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DICT    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_REGEX   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_ARRAY   reduce using rule 20 (statement -> block_statement .)
    $end            reduce using rule 20 (statement -> block_statement .)
    RBRACE          reduce using rule 20 (statement -> block_statement .)
    KEYWORD_ELSE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_CASE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DEFAULT reduce using rule 20 (statement -> block_statement .)


state 15

    (21) statement -> function_definition .

    KEYWORD_IF      reduce using rule 21 (statement -> function_definition .)
    KEYWORD_WHILE   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DO      reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FOR     reduce using rule 21 (statement -> function_definition .)
    KEYWORD_SWITCH  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_BREAK   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_RETURN  reduce using rule 21 (statement -> function_definition .)
    LBRACE          reduce using rule 21 (statement -> function_definition .)
    KEYWORD_IMPORT  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_EXPORT  reduce using rule 21 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 21 (statement -> function_definition .)
    SYSTEM_INPUT    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_OUTPUT   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_EXIT    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_SLEEP    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_PUSH reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_POP  reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_SIZE reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_CONTAINS reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_INDEXOF reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_AVG  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_INT     reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FLOAT   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_CHAR    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_VOID    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_STRING  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_BOOL    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FILE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_SOCKET  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DICT    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_REGEX   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_ARRAY   reduce using rule 21 (statement -> function_definition .)
    $end            reduce using rule 21 (statement -> function_definition .)
    RBRACE          reduce using rule 21 (statement -> function_definition .)
    KEYWORD_ELSE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_CASE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DEFAULT reduce using rule 21 (statement -> function_definition .)


state 16

    (22) statement -> import_statement .

    KEYWORD_IF      reduce using rule 22 (statement -> import_statement .)
    KEYWORD_WHILE   reduce using rule 22 (statement -> import_statement .)
    KEYWORD_DO      reduce using rule 22 (statement -> import_statement .)
    KEYWORD_FOR     reduce using rule 22 (statement -> import_statement .)
    KEYWORD_SWITCH  reduce using rule 22 (statement -> import_statement .)
    KEYWORD_BREAK   reduce using rule 22 (statement -> import_statement .)
    KEYWORD_RETURN  reduce using rule 22 (statement -> import_statement .)
    LBRACE          reduce using rule 22 (statement -> import_statement .)
    KEYWORD_IMPORT  reduce using rule 22 (statement -> import_statement .)
    KEYWORD_EXPORT  reduce using rule 22 (statement -> import_statement .)
    IDENTIFIER      reduce using rule 22 (statement -> import_statement .)
    SYSTEM_INPUT    reduce using rule 22 (statement -> import_statement .)
    SYSTEM_OUTPUT   reduce using rule 22 (statement -> import_statement .)
    KEYWORD_EXIT    reduce using rule 22 (statement -> import_statement .)
    SYSTEM_SLEEP    reduce using rule 22 (statement -> import_statement .)
    SYSTEM_ARR_PUSH reduce using rule 22 (statement -> import_statement .)
    SYSTEM_ARR_POP  reduce using rule 22 (statement -> import_statement .)
    SYSTEM_ARR_SIZE reduce using rule 22 (statement -> import_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 22 (statement -> import_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 22 (statement -> import_statement .)
    SYSTEM_ARR_AVG  reduce using rule 22 (statement -> import_statement .)
    KEYWORD_INT     reduce using rule 22 (statement -> import_statement .)
    KEYWORD_FLOAT   reduce using rule 22 (statement -> import_statement .)
    KEYWORD_CHAR    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_VOID    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_STRING  reduce using rule 22 (statement -> import_statement .)
    KEYWORD_BOOL    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_FILE    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_SOCKET  reduce using rule 22 (statement -> import_statement .)
    KEYWORD_DICT    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_REGEX   reduce using rule 22 (statement -> import_statement .)
    KEYWORD_ARRAY   reduce using rule 22 (statement -> import_statement .)
    $end            reduce using rule 22 (statement -> import_statement .)
    RBRACE          reduce using rule 22 (statement -> import_statement .)
    KEYWORD_ELSE    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_CASE    reduce using rule 22 (statement -> import_statement .)
    KEYWORD_DEFAULT reduce using rule 22 (statement -> import_statement .)


state 17

    (23) statement -> export_statement .

    KEYWORD_IF      reduce using rule 23 (statement -> export_statement .)
    KEYWORD_WHILE   reduce using rule 23 (statement -> export_statement .)
    KEYWORD_DO      reduce using rule 23 (statement -> export_statement .)
    KEYWORD_FOR     reduce using rule 23 (statement -> export_statement .)
    KEYWORD_SWITCH  reduce using rule 23 (statement -> export_statement .)
    KEYWORD_BREAK   reduce using rule 23 (statement -> export_statement .)
    KEYWORD_RETURN  reduce using rule 23 (statement -> export_statement .)
    LBRACE          reduce using rule 23 (statement -> export_statement .)
    KEYWORD_IMPORT  reduce using rule 23 (statement -> export_statement .)
    KEYWORD_EXPORT  reduce using rule 23 (statement -> export_statement .)
    IDENTIFIER      reduce using rule 23 (statement -> export_statement .)
    SYSTEM_INPUT    reduce using rule 23 (statement -> export_statement .)
    SYSTEM_OUTPUT   reduce using rule 23 (statement -> export_statement .)
    KEYWORD_EXIT    reduce using rule 23 (statement -> export_statement .)
    SYSTEM_SLEEP    reduce using rule 23 (statement -> export_statement .)
    SYSTEM_ARR_PUSH reduce using rule 23 (statement -> export_statement .)
    SYSTEM_ARR_POP  reduce using rule 23 (statement -> export_statement .)
    SYSTEM_ARR_SIZE reduce using rule 23 (statement -> export_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 23 (statement -> export_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 23 (statement -> export_statement .)
    SYSTEM_ARR_AVG  reduce using rule 23 (statement -> export_statement .)
    KEYWORD_INT     reduce using rule 23 (statement -> export_statement .)
    KEYWORD_FLOAT   reduce using rule 23 (statement -> export_statement .)
    KEYWORD_CHAR    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_VOID    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_STRING  reduce using rule 23 (statement -> export_statement .)
    KEYWORD_BOOL    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_FILE    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_SOCKET  reduce using rule 23 (statement -> export_statement .)
    KEYWORD_DICT    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_REGEX   reduce using rule 23 (statement -> export_statement .)
    KEYWORD_ARRAY   reduce using rule 23 (statement -> export_statement .)
    $end            reduce using rule 23 (statement -> export_statement .)
    RBRACE          reduce using rule 23 (statement -> export_statement .)
    KEYWORD_ELSE    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_CASE    reduce using rule 23 (statement -> export_statement .)
    KEYWORD_DEFAULT reduce using rule 23 (statement -> export_statement .)


state 18

    (37) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (38) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> type_specifier . IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier . IDENTIFIER multi_brackets SEMICOLON
    (2) function_definition -> type_specifier . IDENTIFIER LPAREN params RPAREN block_statement

    IDENTIFIER      shift and go to state 57


state 19

    (63) left_hand_side -> IDENTIFIER .
    (85) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (86) function_call -> IDENTIFIER . LPAREN RPAREN
    (87) function_call -> IDENTIFIER . DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> IDENTIFIER . DOT IDENTIFIER LPAREN RPAREN
    (150) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 63 (left_hand_side -> IDENTIFIER .)
    LPAREN          shift and go to state 58
    DOT             shift and go to state 59
    LBRACKET        shift and go to state 60


state 20

    (62) assignment_statement -> left_hand_side . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 61


state 21

    (66) if_statement -> KEYWORD_IF . LPAREN expression RPAREN statement
    (67) if_statement -> KEYWORD_IF . LPAREN expression RPAREN statement KEYWORD_ELSE statement

    LPAREN          shift and go to state 62


state 22

    (68) while_statement -> KEYWORD_WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 63


state 23

    (30) do_while_statement -> KEYWORD_DO . statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 64
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 24

    (69) for_statement -> KEYWORD_FOR . LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement

    LPAREN          shift and go to state 65


state 25

    (31) switch_statement -> KEYWORD_SWITCH . LPAREN expression RPAREN LBRACE case_list RBRACE

    LPAREN          shift and go to state 66


state 26

    (103) block_statement -> LBRACE . RBRACE
    (104) block_statement -> LBRACE . statement_list RBRACE
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    RBRACE          shift and go to state 67
    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement_list                 shift and go to state 68
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 27

    (36) break_statement -> KEYWORD_BREAK . SEMICOLON

    SEMICOLON       shift and go to state 69


state 28

    (82) return_statement -> KEYWORD_RETURN . SEMICOLON
    (83) return_statement -> KEYWORD_RETURN . expression SEMICOLON
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    SEMICOLON       shift and go to state 70
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 71
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 29

    (84) function_call_statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 95


state 30

    (24) import_statement -> KEYWORD_IMPORT . module_path SEMICOLON
    (25) import_statement -> KEYWORD_IMPORT . module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (26) module_path -> . IDENTIFIER
    (27) module_path -> . module_path DOT IDENTIFIER

    IDENTIFIER      shift and go to state 97

    module_path                    shift and go to state 96

state 31

    (28) export_statement -> KEYWORD_EXPORT . function_definition
    (29) export_statement -> KEYWORD_EXPORT . declaration_statement
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    function_definition            shift and go to state 98
    declaration_statement          shift and go to state 99
    type_specifier                 shift and go to state 100
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33

state 32

    (46) type_specifier -> primitive_type .
    (59) array_type -> primitive_type . LBRACKET RBRACKET

    IDENTIFIER      reduce using rule 46 (type_specifier -> primitive_type .)
    RPAREN          reduce using rule 46 (type_specifier -> primitive_type .)
    COMMA           reduce using rule 46 (type_specifier -> primitive_type .)
    LBRACKET        shift and go to state 101


state 33

    (47) type_specifier -> array_type .

    IDENTIFIER      reduce using rule 47 (type_specifier -> array_type .)
    RPAREN          reduce using rule 47 (type_specifier -> array_type .)
    COMMA           reduce using rule 47 (type_specifier -> array_type .)


state 34

    (64) left_hand_side -> subscript_access .
    (151) subscript_access -> subscript_access . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 64 (left_hand_side -> subscript_access .)
    LBRACKET        shift and go to state 102


state 35

    (89) function_call -> SYSTEM_INPUT . LPAREN IDENTIFIER COMMA type_specifier RPAREN

    LPAREN          shift and go to state 103


state 36

    (90) function_call -> SYSTEM_OUTPUT . LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> SYSTEM_OUTPUT . LPAREN expression COMMA type_specifier COMMA expression RPAREN

    LPAREN          shift and go to state 104


state 37

    (92) function_call -> KEYWORD_EXIT . LPAREN RPAREN

    LPAREN          shift and go to state 105


state 38

    (93) function_call -> SYSTEM_SLEEP . LPAREN expression RPAREN

    LPAREN          shift and go to state 106


state 39

    (94) function_call -> SYSTEM_ARR_PUSH . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 107


state 40

    (95) function_call -> SYSTEM_ARR_POP . LPAREN expression RPAREN

    LPAREN          shift and go to state 108


state 41

    (96) function_call -> SYSTEM_ARR_SIZE . LPAREN expression RPAREN

    LPAREN          shift and go to state 109


state 42

    (97) function_call -> SYSTEM_ARR_CONTAINS . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 110


state 43

    (98) function_call -> SYSTEM_ARR_INDEXOF . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 111


state 44

    (99) function_call -> SYSTEM_ARR_AVG . LPAREN expression RPAREN
    (100) function_call -> SYSTEM_ARR_AVG . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 112


state 45

    (48) primitive_type -> KEYWORD_INT .

    LBRACKET        reduce using rule 48 (primitive_type -> KEYWORD_INT .)
    IDENTIFIER      reduce using rule 48 (primitive_type -> KEYWORD_INT .)
    RPAREN          reduce using rule 48 (primitive_type -> KEYWORD_INT .)
    COMMA           reduce using rule 48 (primitive_type -> KEYWORD_INT .)


state 46

    (49) primitive_type -> KEYWORD_FLOAT .

    LBRACKET        reduce using rule 49 (primitive_type -> KEYWORD_FLOAT .)
    IDENTIFIER      reduce using rule 49 (primitive_type -> KEYWORD_FLOAT .)
    RPAREN          reduce using rule 49 (primitive_type -> KEYWORD_FLOAT .)
    COMMA           reduce using rule 49 (primitive_type -> KEYWORD_FLOAT .)


state 47

    (50) primitive_type -> KEYWORD_CHAR .

    LBRACKET        reduce using rule 50 (primitive_type -> KEYWORD_CHAR .)
    IDENTIFIER      reduce using rule 50 (primitive_type -> KEYWORD_CHAR .)
    RPAREN          reduce using rule 50 (primitive_type -> KEYWORD_CHAR .)
    COMMA           reduce using rule 50 (primitive_type -> KEYWORD_CHAR .)


state 48

    (51) primitive_type -> KEYWORD_VOID .

    LBRACKET        reduce using rule 51 (primitive_type -> KEYWORD_VOID .)
    IDENTIFIER      reduce using rule 51 (primitive_type -> KEYWORD_VOID .)
    RPAREN          reduce using rule 51 (primitive_type -> KEYWORD_VOID .)
    COMMA           reduce using rule 51 (primitive_type -> KEYWORD_VOID .)


state 49

    (52) primitive_type -> KEYWORD_STRING .

    LBRACKET        reduce using rule 52 (primitive_type -> KEYWORD_STRING .)
    IDENTIFIER      reduce using rule 52 (primitive_type -> KEYWORD_STRING .)
    RPAREN          reduce using rule 52 (primitive_type -> KEYWORD_STRING .)
    COMMA           reduce using rule 52 (primitive_type -> KEYWORD_STRING .)


state 50

    (53) primitive_type -> KEYWORD_BOOL .

    LBRACKET        reduce using rule 53 (primitive_type -> KEYWORD_BOOL .)
    IDENTIFIER      reduce using rule 53 (primitive_type -> KEYWORD_BOOL .)
    RPAREN          reduce using rule 53 (primitive_type -> KEYWORD_BOOL .)
    COMMA           reduce using rule 53 (primitive_type -> KEYWORD_BOOL .)


state 51

    (54) primitive_type -> KEYWORD_FILE .

    LBRACKET        reduce using rule 54 (primitive_type -> KEYWORD_FILE .)
    IDENTIFIER      reduce using rule 54 (primitive_type -> KEYWORD_FILE .)
    RPAREN          reduce using rule 54 (primitive_type -> KEYWORD_FILE .)
    COMMA           reduce using rule 54 (primitive_type -> KEYWORD_FILE .)


state 52

    (55) primitive_type -> KEYWORD_SOCKET .

    LBRACKET        reduce using rule 55 (primitive_type -> KEYWORD_SOCKET .)
    IDENTIFIER      reduce using rule 55 (primitive_type -> KEYWORD_SOCKET .)
    RPAREN          reduce using rule 55 (primitive_type -> KEYWORD_SOCKET .)
    COMMA           reduce using rule 55 (primitive_type -> KEYWORD_SOCKET .)


state 53

    (56) primitive_type -> KEYWORD_DICT .

    LBRACKET        reduce using rule 56 (primitive_type -> KEYWORD_DICT .)
    IDENTIFIER      reduce using rule 56 (primitive_type -> KEYWORD_DICT .)
    RPAREN          reduce using rule 56 (primitive_type -> KEYWORD_DICT .)
    COMMA           reduce using rule 56 (primitive_type -> KEYWORD_DICT .)


state 54

    (57) primitive_type -> KEYWORD_REGEX .

    LBRACKET        reduce using rule 57 (primitive_type -> KEYWORD_REGEX .)
    IDENTIFIER      reduce using rule 57 (primitive_type -> KEYWORD_REGEX .)
    RPAREN          reduce using rule 57 (primitive_type -> KEYWORD_REGEX .)
    COMMA           reduce using rule 57 (primitive_type -> KEYWORD_REGEX .)


state 55

    (58) primitive_type -> KEYWORD_ARRAY .

    LBRACKET        reduce using rule 58 (primitive_type -> KEYWORD_ARRAY .)
    IDENTIFIER      reduce using rule 58 (primitive_type -> KEYWORD_ARRAY .)
    RPAREN          reduce using rule 58 (primitive_type -> KEYWORD_ARRAY .)
    COMMA           reduce using rule 58 (primitive_type -> KEYWORD_ARRAY .)


state 56

    (9) statement_list -> statement_list statement .

    KEYWORD_IF      reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_WHILE   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DO      reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FOR     reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_SWITCH  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_BREAK   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_RETURN  reduce using rule 9 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_IMPORT  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_EXPORT  reduce using rule 9 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_INPUT    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_OUTPUT   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_EXIT    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_SLEEP    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_PUSH reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_POP  reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_SIZE reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_AVG  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_INT     reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FLOAT   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_CHAR    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_VOID    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_STRING  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_BOOL    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FILE    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_SOCKET  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DICT    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_REGEX   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_ARRAY   reduce using rule 9 (statement_list -> statement_list statement .)
    $end            reduce using rule 9 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_CASE    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DEFAULT reduce using rule 9 (statement_list -> statement_list statement .)


state 57

    (37) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (38) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (39) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> type_specifier IDENTIFIER . multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier IDENTIFIER . multi_brackets SEMICOLON
    (2) function_definition -> type_specifier IDENTIFIER . LPAREN params RPAREN block_statement
    (60) multi_brackets -> . LBRACKET RBRACKET LBRACKET RBRACKET
    (61) multi_brackets -> . multi_brackets LBRACKET RBRACKET

    SEMICOLON       shift and go to state 113
    ASSIGN          shift and go to state 114
    LBRACKET        shift and go to state 115
    LPAREN          shift and go to state 117

    multi_brackets                 shift and go to state 116

state 58

    (85) function_call -> IDENTIFIER LPAREN . argument_list RPAREN
    (86) function_call -> IDENTIFIER LPAREN . RPAREN
    (101) argument_list -> . expression
    (102) argument_list -> . argument_list COMMA expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RPAREN          shift and go to state 119
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    argument_list                  shift and go to state 118
    expression                     shift and go to state 120
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 59

    (87) function_call -> IDENTIFIER DOT . IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> IDENTIFIER DOT . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 121


state 60

    (150) subscript_access -> IDENTIFIER LBRACKET . expression RBRACKET
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 122
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 61

    (62) assignment_statement -> left_hand_side ASSIGN . expression SEMICOLON
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 123
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 62

    (66) if_statement -> KEYWORD_IF LPAREN . expression RPAREN statement
    (67) if_statement -> KEYWORD_IF LPAREN . expression RPAREN statement KEYWORD_ELSE statement
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 124
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 63

    (68) while_statement -> KEYWORD_WHILE LPAREN . expression RPAREN statement
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 125
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 64

    (30) do_while_statement -> KEYWORD_DO statement . KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON

    KEYWORD_WHILE   shift and go to state 126


state 65

    (69) for_statement -> KEYWORD_FOR LPAREN . for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (70) for_init -> . assignment_statement_no_semi SEMICOLON
    (71) for_init -> . declaration_statement
    (72) for_init -> . SEMICOLON
    (65) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET

    SEMICOLON       shift and go to state 128
    IDENTIFIER      shift and go to state 133
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    for_init                       shift and go to state 127
    assignment_statement_no_semi   shift and go to state 129
    declaration_statement          shift and go to state 130
    left_hand_side                 shift and go to state 131
    type_specifier                 shift and go to state 132
    subscript_access               shift and go to state 34
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33

state 66

    (31) switch_statement -> KEYWORD_SWITCH LPAREN . expression RPAREN LBRACE case_list RBRACE
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 134
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 67

    (103) block_statement -> LBRACE RBRACE .

    KEYWORD_IF      reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_WHILE   reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DO      reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FOR     reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_SWITCH  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_BREAK   reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_RETURN  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    LBRACE          reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_IMPORT  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_EXPORT  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_INPUT    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_EXIT    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_SLEEP    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_INT     reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FLOAT   reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_CHAR    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_VOID    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_STRING  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_BOOL    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FILE    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_SOCKET  reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DICT    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_REGEX   reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_ARRAY   reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    $end            reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_ELSE    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_CASE    reduce using rule 103 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DEFAULT reduce using rule 103 (block_statement -> LBRACE RBRACE .)


state 68

    (104) block_statement -> LBRACE statement_list . RBRACE
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    RBRACE          shift and go to state 135
    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 56
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 69

    (36) break_statement -> KEYWORD_BREAK SEMICOLON .

    KEYWORD_IF      reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DO      reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FOR     reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    LBRACE          reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_INT     reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_VOID    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_STRING  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FILE    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DICT    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    $end            reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    RBRACE          reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CASE    reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 36 (break_statement -> KEYWORD_BREAK SEMICOLON .)


state 70

    (82) return_statement -> KEYWORD_RETURN SEMICOLON .

    KEYWORD_IF      reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DO      reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    LBRACE          reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_INT     reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_VOID    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_STRING  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FILE    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DICT    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    $end            reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    RBRACE          reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CASE    reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 82 (return_statement -> KEYWORD_RETURN SEMICOLON .)


state 71

    (83) return_statement -> KEYWORD_RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 136


state 72

    (110) expression -> logical_expression .
    (113) logical_expression -> logical_expression . AND equality_expression
    (114) logical_expression -> logical_expression . OR equality_expression

    SEMICOLON       reduce using rule 110 (expression -> logical_expression .)
    RPAREN          reduce using rule 110 (expression -> logical_expression .)
    COMMA           reduce using rule 110 (expression -> logical_expression .)
    RBRACKET        reduce using rule 110 (expression -> logical_expression .)
    COLON           reduce using rule 110 (expression -> logical_expression .)
    RBRACE          reduce using rule 110 (expression -> logical_expression .)
    AND             shift and go to state 137
    OR              shift and go to state 138


state 73

    (111) expression -> initializer_list .

    SEMICOLON       reduce using rule 111 (expression -> initializer_list .)
    RPAREN          reduce using rule 111 (expression -> initializer_list .)
    COMMA           reduce using rule 111 (expression -> initializer_list .)
    RBRACKET        reduce using rule 111 (expression -> initializer_list .)
    COLON           reduce using rule 111 (expression -> initializer_list .)
    RBRACE          reduce using rule 111 (expression -> initializer_list .)


state 74

    (112) logical_expression -> equality_expression .
    (116) equality_expression -> equality_expression . EQ relational_expression
    (117) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 112 (logical_expression -> equality_expression .)
    OR              reduce using rule 112 (logical_expression -> equality_expression .)
    SEMICOLON       reduce using rule 112 (logical_expression -> equality_expression .)
    RPAREN          reduce using rule 112 (logical_expression -> equality_expression .)
    COMMA           reduce using rule 112 (logical_expression -> equality_expression .)
    RBRACKET        reduce using rule 112 (logical_expression -> equality_expression .)
    COLON           reduce using rule 112 (logical_expression -> equality_expression .)
    RBRACE          reduce using rule 112 (logical_expression -> equality_expression .)
    EQ              shift and go to state 139
    NEQ             shift and go to state 140


state 75

    (105) initializer_list -> LBRACKET . expression_list_opt RBRACKET
    (106) expression_list_opt -> . expression_list
    (107) expression_list_opt -> . empty
    (108) expression_list -> . expression
    (109) expression_list -> . expression_list COMMA expression
    (81) empty -> .
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACKET        reduce using rule 81 (empty -> .)
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression_list_opt            shift and go to state 141
    expression_list                shift and go to state 142
    empty                          shift and go to state 143
    expression                     shift and go to state 144
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 76

    (115) equality_expression -> relational_expression .
    (119) relational_expression -> relational_expression . GT additive_expression
    (120) relational_expression -> relational_expression . LT additive_expression
    (121) relational_expression -> relational_expression . GEQ additive_expression
    (122) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 115 (equality_expression -> relational_expression .)
    NEQ             reduce using rule 115 (equality_expression -> relational_expression .)
    AND             reduce using rule 115 (equality_expression -> relational_expression .)
    OR              reduce using rule 115 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 115 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 115 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 115 (equality_expression -> relational_expression .)
    RBRACKET        reduce using rule 115 (equality_expression -> relational_expression .)
    COLON           reduce using rule 115 (equality_expression -> relational_expression .)
    RBRACE          reduce using rule 115 (equality_expression -> relational_expression .)
    GT              shift and go to state 145
    LT              shift and go to state 146
    GEQ             shift and go to state 147
    LEQ             shift and go to state 148


state 77

    (118) relational_expression -> additive_expression .
    (124) additive_expression -> additive_expression . PLUS multiplicative_expression
    (125) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 118 (relational_expression -> additive_expression .)
    LT              reduce using rule 118 (relational_expression -> additive_expression .)
    GEQ             reduce using rule 118 (relational_expression -> additive_expression .)
    LEQ             reduce using rule 118 (relational_expression -> additive_expression .)
    EQ              reduce using rule 118 (relational_expression -> additive_expression .)
    NEQ             reduce using rule 118 (relational_expression -> additive_expression .)
    AND             reduce using rule 118 (relational_expression -> additive_expression .)
    OR              reduce using rule 118 (relational_expression -> additive_expression .)
    SEMICOLON       reduce using rule 118 (relational_expression -> additive_expression .)
    RPAREN          reduce using rule 118 (relational_expression -> additive_expression .)
    COMMA           reduce using rule 118 (relational_expression -> additive_expression .)
    RBRACKET        reduce using rule 118 (relational_expression -> additive_expression .)
    COLON           reduce using rule 118 (relational_expression -> additive_expression .)
    RBRACE          reduce using rule 118 (relational_expression -> additive_expression .)
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150


state 78

    (123) additive_expression -> multiplicative_expression .
    (127) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (128) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (129) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 123 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 123 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 123 (additive_expression -> multiplicative_expression .)
    LT              reduce using rule 123 (additive_expression -> multiplicative_expression .)
    GEQ             reduce using rule 123 (additive_expression -> multiplicative_expression .)
    LEQ             reduce using rule 123 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 123 (additive_expression -> multiplicative_expression .)
    NEQ             reduce using rule 123 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 123 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 123 (additive_expression -> multiplicative_expression .)
    SEMICOLON       reduce using rule 123 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 123 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 123 (additive_expression -> multiplicative_expression .)
    RBRACKET        reduce using rule 123 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 123 (additive_expression -> multiplicative_expression .)
    RBRACE          reduce using rule 123 (additive_expression -> multiplicative_expression .)
    MUL             shift and go to state 151
    DIV             shift and go to state 152
    MOD             shift and go to state 153


state 79

    (131) unary_expression -> MINUS . unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    unary_expression               shift and go to state 154
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 80

    (126) multiplicative_expression -> unary_expression .

    MUL             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    DIV             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 126 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 126 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 126 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 126 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 126 (multiplicative_expression -> unary_expression .)
    NEQ             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 126 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 126 (multiplicative_expression -> unary_expression .)
    SEMICOLON       reduce using rule 126 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 126 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 126 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 126 (multiplicative_expression -> unary_expression .)
    COLON           reduce using rule 126 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 126 (multiplicative_expression -> unary_expression .)


state 81

    (130) unary_expression -> primary_expression .

    MUL             reduce using rule 130 (unary_expression -> primary_expression .)
    DIV             reduce using rule 130 (unary_expression -> primary_expression .)
    MOD             reduce using rule 130 (unary_expression -> primary_expression .)
    PLUS            reduce using rule 130 (unary_expression -> primary_expression .)
    MINUS           reduce using rule 130 (unary_expression -> primary_expression .)
    GT              reduce using rule 130 (unary_expression -> primary_expression .)
    LT              reduce using rule 130 (unary_expression -> primary_expression .)
    GEQ             reduce using rule 130 (unary_expression -> primary_expression .)
    LEQ             reduce using rule 130 (unary_expression -> primary_expression .)
    EQ              reduce using rule 130 (unary_expression -> primary_expression .)
    NEQ             reduce using rule 130 (unary_expression -> primary_expression .)
    AND             reduce using rule 130 (unary_expression -> primary_expression .)
    OR              reduce using rule 130 (unary_expression -> primary_expression .)
    SEMICOLON       reduce using rule 130 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 130 (unary_expression -> primary_expression .)
    COMMA           reduce using rule 130 (unary_expression -> primary_expression .)
    RBRACKET        reduce using rule 130 (unary_expression -> primary_expression .)
    COLON           reduce using rule 130 (unary_expression -> primary_expression .)
    RBRACE          reduce using rule 130 (unary_expression -> primary_expression .)


state 82

    (132) primary_expression -> IDENTIFIER .
    (85) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (86) function_call -> IDENTIFIER . LPAREN RPAREN
    (87) function_call -> IDENTIFIER . DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> IDENTIFIER . DOT IDENTIFIER LPAREN RPAREN
    (150) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    MUL             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    DIV             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    MOD             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 132 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 132 (primary_expression -> IDENTIFIER .)
    GT              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    LT              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    EQ              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 132 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 132 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 132 (primary_expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 132 (primary_expression -> IDENTIFIER .)
    COLON           reduce using rule 132 (primary_expression -> IDENTIFIER .)
    RBRACE          reduce using rule 132 (primary_expression -> IDENTIFIER .)
    LPAREN          shift and go to state 58
    DOT             shift and go to state 59
    LBRACKET        shift and go to state 60


state 83

    (133) primary_expression -> INT_LITERAL .

    MUL             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    DIV             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    MOD             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    PLUS            reduce using rule 133 (primary_expression -> INT_LITERAL .)
    MINUS           reduce using rule 133 (primary_expression -> INT_LITERAL .)
    GT              reduce using rule 133 (primary_expression -> INT_LITERAL .)
    LT              reduce using rule 133 (primary_expression -> INT_LITERAL .)
    GEQ             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    LEQ             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    EQ              reduce using rule 133 (primary_expression -> INT_LITERAL .)
    NEQ             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    AND             reduce using rule 133 (primary_expression -> INT_LITERAL .)
    OR              reduce using rule 133 (primary_expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 133 (primary_expression -> INT_LITERAL .)
    RPAREN          reduce using rule 133 (primary_expression -> INT_LITERAL .)
    COMMA           reduce using rule 133 (primary_expression -> INT_LITERAL .)
    RBRACKET        reduce using rule 133 (primary_expression -> INT_LITERAL .)
    COLON           reduce using rule 133 (primary_expression -> INT_LITERAL .)
    RBRACE          reduce using rule 133 (primary_expression -> INT_LITERAL .)


state 84

    (134) primary_expression -> FLOAT_LITERAL .

    MUL             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    DIV             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    MOD             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    PLUS            reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    MINUS           reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    GT              reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    LT              reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    GEQ             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    LEQ             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    EQ              reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    NEQ             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    AND             reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    OR              reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    SEMICOLON       reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    COMMA           reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    RBRACKET        reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    COLON           reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)
    RBRACE          reduce using rule 134 (primary_expression -> FLOAT_LITERAL .)


state 85

    (135) primary_expression -> STRING_LITERAL .

    MUL             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    DIV             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    MOD             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    PLUS            reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    MINUS           reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    GT              reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    LT              reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    GEQ             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    LEQ             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    EQ              reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    NEQ             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    AND             reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    OR              reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    COMMA           reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    RBRACKET        reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    COLON           reduce using rule 135 (primary_expression -> STRING_LITERAL .)
    RBRACE          reduce using rule 135 (primary_expression -> STRING_LITERAL .)


state 86

    (136) primary_expression -> CHAR_LITERAL .

    MUL             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    DIV             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    MOD             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    PLUS            reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    MINUS           reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    GT              reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    LT              reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    GEQ             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    LEQ             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    EQ              reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    NEQ             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    AND             reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    OR              reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    SEMICOLON       reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    RPAREN          reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    COMMA           reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    RBRACKET        reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    COLON           reduce using rule 136 (primary_expression -> CHAR_LITERAL .)
    RBRACE          reduce using rule 136 (primary_expression -> CHAR_LITERAL .)


state 87

    (137) primary_expression -> KEYWORD_TRUE .

    MUL             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    DIV             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    MOD             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    PLUS            reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    MINUS           reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    GT              reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    LT              reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    GEQ             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    LEQ             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    EQ              reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    NEQ             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    AND             reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    OR              reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    SEMICOLON       reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    RPAREN          reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    COMMA           reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    RBRACKET        reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    COLON           reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)
    RBRACE          reduce using rule 137 (primary_expression -> KEYWORD_TRUE .)


state 88

    (138) primary_expression -> KEYWORD_FALSE .

    MUL             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    DIV             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    MOD             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    PLUS            reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    MINUS           reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    GT              reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    LT              reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    GEQ             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    LEQ             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    EQ              reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    NEQ             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    AND             reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    OR              reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    SEMICOLON       reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    RPAREN          reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    COMMA           reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    RBRACKET        reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    COLON           reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)
    RBRACE          reduce using rule 138 (primary_expression -> KEYWORD_FALSE .)


state 89

    (139) primary_expression -> KEYWORD_NULL .

    MUL             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    DIV             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    MOD             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    PLUS            reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    MINUS           reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    GT              reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    LT              reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    GEQ             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    LEQ             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    EQ              reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    NEQ             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    AND             reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    OR              reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    SEMICOLON       reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    RPAREN          reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    COMMA           reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    RBRACKET        reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    COLON           reduce using rule 139 (primary_expression -> KEYWORD_NULL .)
    RBRACE          reduce using rule 139 (primary_expression -> KEYWORD_NULL .)


state 90

    (140) primary_expression -> LPAREN . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 155
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 91

    (141) primary_expression -> function_call .

    MUL             reduce using rule 141 (primary_expression -> function_call .)
    DIV             reduce using rule 141 (primary_expression -> function_call .)
    MOD             reduce using rule 141 (primary_expression -> function_call .)
    PLUS            reduce using rule 141 (primary_expression -> function_call .)
    MINUS           reduce using rule 141 (primary_expression -> function_call .)
    GT              reduce using rule 141 (primary_expression -> function_call .)
    LT              reduce using rule 141 (primary_expression -> function_call .)
    GEQ             reduce using rule 141 (primary_expression -> function_call .)
    LEQ             reduce using rule 141 (primary_expression -> function_call .)
    EQ              reduce using rule 141 (primary_expression -> function_call .)
    NEQ             reduce using rule 141 (primary_expression -> function_call .)
    AND             reduce using rule 141 (primary_expression -> function_call .)
    OR              reduce using rule 141 (primary_expression -> function_call .)
    SEMICOLON       reduce using rule 141 (primary_expression -> function_call .)
    RPAREN          reduce using rule 141 (primary_expression -> function_call .)
    COMMA           reduce using rule 141 (primary_expression -> function_call .)
    RBRACKET        reduce using rule 141 (primary_expression -> function_call .)
    COLON           reduce using rule 141 (primary_expression -> function_call .)
    RBRACE          reduce using rule 141 (primary_expression -> function_call .)


state 92

    (142) primary_expression -> subscript_access .
    (151) subscript_access -> subscript_access . LBRACKET expression RBRACKET

    MUL             reduce using rule 142 (primary_expression -> subscript_access .)
    DIV             reduce using rule 142 (primary_expression -> subscript_access .)
    MOD             reduce using rule 142 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 142 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 142 (primary_expression -> subscript_access .)
    GT              reduce using rule 142 (primary_expression -> subscript_access .)
    LT              reduce using rule 142 (primary_expression -> subscript_access .)
    GEQ             reduce using rule 142 (primary_expression -> subscript_access .)
    LEQ             reduce using rule 142 (primary_expression -> subscript_access .)
    EQ              reduce using rule 142 (primary_expression -> subscript_access .)
    NEQ             reduce using rule 142 (primary_expression -> subscript_access .)
    AND             reduce using rule 142 (primary_expression -> subscript_access .)
    OR              reduce using rule 142 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 142 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 142 (primary_expression -> subscript_access .)
    COMMA           reduce using rule 142 (primary_expression -> subscript_access .)
    RBRACKET        reduce using rule 142 (primary_expression -> subscript_access .)
    COLON           reduce using rule 142 (primary_expression -> subscript_access .)
    RBRACE          reduce using rule 142 (primary_expression -> subscript_access .)
    LBRACKET        shift and go to state 102


state 93

    (143) primary_expression -> dictionary_literal .

    MUL             reduce using rule 143 (primary_expression -> dictionary_literal .)
    DIV             reduce using rule 143 (primary_expression -> dictionary_literal .)
    MOD             reduce using rule 143 (primary_expression -> dictionary_literal .)
    PLUS            reduce using rule 143 (primary_expression -> dictionary_literal .)
    MINUS           reduce using rule 143 (primary_expression -> dictionary_literal .)
    GT              reduce using rule 143 (primary_expression -> dictionary_literal .)
    LT              reduce using rule 143 (primary_expression -> dictionary_literal .)
    GEQ             reduce using rule 143 (primary_expression -> dictionary_literal .)
    LEQ             reduce using rule 143 (primary_expression -> dictionary_literal .)
    EQ              reduce using rule 143 (primary_expression -> dictionary_literal .)
    NEQ             reduce using rule 143 (primary_expression -> dictionary_literal .)
    AND             reduce using rule 143 (primary_expression -> dictionary_literal .)
    OR              reduce using rule 143 (primary_expression -> dictionary_literal .)
    SEMICOLON       reduce using rule 143 (primary_expression -> dictionary_literal .)
    RPAREN          reduce using rule 143 (primary_expression -> dictionary_literal .)
    COMMA           reduce using rule 143 (primary_expression -> dictionary_literal .)
    RBRACKET        reduce using rule 143 (primary_expression -> dictionary_literal .)
    COLON           reduce using rule 143 (primary_expression -> dictionary_literal .)
    RBRACE          reduce using rule 143 (primary_expression -> dictionary_literal .)


state 94

    (144) dictionary_literal -> LBRACE . key_value_list_opt RBRACE
    (145) key_value_list_opt -> . key_value_list
    (146) key_value_list_opt -> . empty
    (147) key_value_list -> . key_value
    (148) key_value_list -> . key_value_list COMMA key_value
    (81) empty -> .
    (149) key_value -> . expression COLON expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACE          reduce using rule 81 (empty -> .)
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    key_value_list_opt             shift and go to state 156
    key_value_list                 shift and go to state 157
    empty                          shift and go to state 158
    key_value                      shift and go to state 159
    expression                     shift and go to state 160
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 95

    (84) function_call_statement -> function_call SEMICOLON .

    KEYWORD_IF      reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DO      reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FOR     reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    LBRACE          reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_INT     reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_VOID    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_STRING  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FILE    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DICT    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    $end            reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    RBRACE          reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_CASE    reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 84 (function_call_statement -> function_call SEMICOLON .)


state 96

    (24) import_statement -> KEYWORD_IMPORT module_path . SEMICOLON
    (25) import_statement -> KEYWORD_IMPORT module_path . KEYWORD_AS IDENTIFIER SEMICOLON
    (27) module_path -> module_path . DOT IDENTIFIER

    SEMICOLON       shift and go to state 161
    KEYWORD_AS      shift and go to state 162
    DOT             shift and go to state 163


state 97

    (26) module_path -> IDENTIFIER .

    SEMICOLON       reduce using rule 26 (module_path -> IDENTIFIER .)
    KEYWORD_AS      reduce using rule 26 (module_path -> IDENTIFIER .)
    DOT             reduce using rule 26 (module_path -> IDENTIFIER .)


state 98

    (28) export_statement -> KEYWORD_EXPORT function_definition .

    KEYWORD_IF      reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_WHILE   reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_DO      reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_FOR     reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_SWITCH  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_BREAK   reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_RETURN  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    LBRACE          reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_IMPORT  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_EXPORT  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    IDENTIFIER      reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_INPUT    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_OUTPUT   reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_EXIT    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_SLEEP    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_ARR_PUSH reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_ARR_POP  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_ARR_SIZE reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_ARR_CONTAINS reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_ARR_INDEXOF reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    SYSTEM_ARR_AVG  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_INT     reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_FLOAT   reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_CHAR    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_VOID    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_STRING  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_BOOL    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_FILE    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_SOCKET  reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_DICT    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_REGEX   reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_ARRAY   reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    $end            reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    RBRACE          reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_ELSE    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_CASE    reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)
    KEYWORD_DEFAULT reduce using rule 28 (export_statement -> KEYWORD_EXPORT function_definition .)


state 99

    (29) export_statement -> KEYWORD_EXPORT declaration_statement .

    KEYWORD_IF      reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_WHILE   reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_DO      reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_FOR     reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_SWITCH  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_BREAK   reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_RETURN  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    LBRACE          reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_IMPORT  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_EXPORT  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    IDENTIFIER      reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_INPUT    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_EXIT    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_SLEEP    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_INT     reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_FLOAT   reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_CHAR    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_VOID    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_STRING  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_BOOL    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_FILE    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_SOCKET  reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_DICT    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_REGEX   reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_ARRAY   reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    $end            reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    RBRACE          reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_ELSE    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_CASE    reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)
    KEYWORD_DEFAULT reduce using rule 29 (export_statement -> KEYWORD_EXPORT declaration_statement .)


state 100

    (2) function_definition -> type_specifier . IDENTIFIER LPAREN params RPAREN block_statement
    (37) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (38) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> type_specifier . IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier . IDENTIFIER multi_brackets SEMICOLON

    IDENTIFIER      shift and go to state 164


state 101

    (59) array_type -> primitive_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 165


state 102

    (151) subscript_access -> subscript_access LBRACKET . expression RBRACKET
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    subscript_access               shift and go to state 92
    expression                     shift and go to state 166
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    dictionary_literal             shift and go to state 93

state 103

    (89) function_call -> SYSTEM_INPUT LPAREN . IDENTIFIER COMMA type_specifier RPAREN

    IDENTIFIER      shift and go to state 167


state 104

    (90) function_call -> SYSTEM_OUTPUT LPAREN . expression COMMA type_specifier RPAREN
    (91) function_call -> SYSTEM_OUTPUT LPAREN . expression COMMA type_specifier COMMA expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 168
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 105

    (92) function_call -> KEYWORD_EXIT LPAREN . RPAREN

    RPAREN          shift and go to state 169


state 106

    (93) function_call -> SYSTEM_SLEEP LPAREN . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 170
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 107

    (94) function_call -> SYSTEM_ARR_PUSH LPAREN . expression COMMA expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 171
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 108

    (95) function_call -> SYSTEM_ARR_POP LPAREN . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 172
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 109

    (96) function_call -> SYSTEM_ARR_SIZE LPAREN . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 173
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 110

    (97) function_call -> SYSTEM_ARR_CONTAINS LPAREN . expression COMMA expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 174
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 111

    (98) function_call -> SYSTEM_ARR_INDEXOF LPAREN . expression COMMA expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 175
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 112

    (99) function_call -> SYSTEM_ARR_AVG LPAREN . expression RPAREN
    (100) function_call -> SYSTEM_ARR_AVG LPAREN . expression COMMA expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 176
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 113

    (37) declaration_statement -> type_specifier IDENTIFIER SEMICOLON .

    KEYWORD_IF      reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DO      reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FOR     reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_INT     reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_VOID    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_STRING  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FILE    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DICT    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    $end            reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_CASE    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    INT_LITERAL     reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    STRING_LITERAL  reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    CHAR_LITERAL    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_NULL    reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SEMICOLON       reduce using rule 37 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)


state 114

    (38) declaration_statement -> type_specifier IDENTIFIER ASSIGN . expression SEMICOLON
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 177
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 115

    (39) declaration_statement -> type_specifier IDENTIFIER LBRACKET . expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier IDENTIFIER LBRACKET . expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET SEMICOLON
    (60) multi_brackets -> LBRACKET . RBRACKET LBRACKET RBRACKET
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACKET        shift and go to state 179
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 178
    initializer_list               shift and go to state 73
    logical_expression             shift and go to state 72
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 116

    (44) declaration_statement -> type_specifier IDENTIFIER multi_brackets . ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier IDENTIFIER multi_brackets . SEMICOLON
    (61) multi_brackets -> multi_brackets . LBRACKET RBRACKET

    ASSIGN          shift and go to state 180
    SEMICOLON       shift and go to state 181
    LBRACKET        shift and go to state 182


state 117

    (2) function_definition -> type_specifier IDENTIFIER LPAREN . params RPAREN block_statement
    (3) params -> . param_list
    (4) params -> . empty
    (5) param_list -> . param
    (6) param_list -> . param_list COMMA param
    (81) empty -> .
    (7) param -> . type_specifier IDENTIFIER
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET

    RPAREN          reduce using rule 81 (empty -> .)
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    type_specifier                 shift and go to state 183
    params                         shift and go to state 184
    param_list                     shift and go to state 185
    empty                          shift and go to state 186
    param                          shift and go to state 187
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33

state 118

    (85) function_call -> IDENTIFIER LPAREN argument_list . RPAREN
    (102) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 188
    COMMA           shift and go to state 189


state 119

    (86) function_call -> IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GEQ             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LEQ             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQ              reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NEQ             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 86 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 120

    (101) argument_list -> expression .

    RPAREN          reduce using rule 101 (argument_list -> expression .)
    COMMA           reduce using rule 101 (argument_list -> expression .)


state 121

    (87) function_call -> IDENTIFIER DOT IDENTIFIER . LPAREN argument_list RPAREN
    (88) function_call -> IDENTIFIER DOT IDENTIFIER . LPAREN RPAREN

    LPAREN          shift and go to state 190


state 122

    (150) subscript_access -> IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 191


state 123

    (62) assignment_statement -> left_hand_side ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 192


state 124

    (66) if_statement -> KEYWORD_IF LPAREN expression . RPAREN statement
    (67) if_statement -> KEYWORD_IF LPAREN expression . RPAREN statement KEYWORD_ELSE statement

    RPAREN          shift and go to state 193


state 125

    (68) while_statement -> KEYWORD_WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 194


state 126

    (30) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 195


state 127

    (69) for_statement -> KEYWORD_FOR LPAREN for_init . expression_opt SEMICOLON expression_opt RPAREN statement
    (75) expression_opt -> . expression
    (76) expression_opt -> . assignment_statement_no_semi
    (77) expression_opt -> . increment_decrement
    (78) expression_opt -> . empty
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (65) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (79) increment_decrement -> . IDENTIFIER PLUS PLUS
    (80) increment_decrement -> . IDENTIFIER MINUS MINUS
    (81) empty -> .
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    IDENTIFIER      shift and go to state 201
    SEMICOLON       reduce using rule 81 (empty -> .)
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression_opt                 shift and go to state 196
    expression                     shift and go to state 197
    assignment_statement_no_semi   shift and go to state 198
    increment_decrement            shift and go to state 199
    empty                          shift and go to state 200
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    left_hand_side                 shift and go to state 131
    equality_expression            shift and go to state 74
    subscript_access               shift and go to state 202
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    dictionary_literal             shift and go to state 93

state 128

    (72) for_init -> SEMICOLON .

    IDENTIFIER      reduce using rule 72 (for_init -> SEMICOLON .)
    LBRACKET        reduce using rule 72 (for_init -> SEMICOLON .)
    MINUS           reduce using rule 72 (for_init -> SEMICOLON .)
    INT_LITERAL     reduce using rule 72 (for_init -> SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 72 (for_init -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 72 (for_init -> SEMICOLON .)
    CHAR_LITERAL    reduce using rule 72 (for_init -> SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 72 (for_init -> SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 72 (for_init -> SEMICOLON .)
    KEYWORD_NULL    reduce using rule 72 (for_init -> SEMICOLON .)
    LPAREN          reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 72 (for_init -> SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 72 (for_init -> SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 72 (for_init -> SEMICOLON .)
    LBRACE          reduce using rule 72 (for_init -> SEMICOLON .)
    SEMICOLON       reduce using rule 72 (for_init -> SEMICOLON .)


state 129

    (70) for_init -> assignment_statement_no_semi . SEMICOLON

    SEMICOLON       shift and go to state 203


state 130

    (71) for_init -> declaration_statement .

    IDENTIFIER      reduce using rule 71 (for_init -> declaration_statement .)
    LBRACKET        reduce using rule 71 (for_init -> declaration_statement .)
    MINUS           reduce using rule 71 (for_init -> declaration_statement .)
    INT_LITERAL     reduce using rule 71 (for_init -> declaration_statement .)
    FLOAT_LITERAL   reduce using rule 71 (for_init -> declaration_statement .)
    STRING_LITERAL  reduce using rule 71 (for_init -> declaration_statement .)
    CHAR_LITERAL    reduce using rule 71 (for_init -> declaration_statement .)
    KEYWORD_TRUE    reduce using rule 71 (for_init -> declaration_statement .)
    KEYWORD_FALSE   reduce using rule 71 (for_init -> declaration_statement .)
    KEYWORD_NULL    reduce using rule 71 (for_init -> declaration_statement .)
    LPAREN          reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_INPUT    reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 71 (for_init -> declaration_statement .)
    KEYWORD_EXIT    reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_SLEEP    reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 71 (for_init -> declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 71 (for_init -> declaration_statement .)
    LBRACE          reduce using rule 71 (for_init -> declaration_statement .)
    SEMICOLON       reduce using rule 71 (for_init -> declaration_statement .)


state 131

    (65) assignment_statement_no_semi -> left_hand_side . ASSIGN expression

    ASSIGN          shift and go to state 204


state 132

    (37) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (38) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> type_specifier . IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier . IDENTIFIER multi_brackets SEMICOLON

    IDENTIFIER      shift and go to state 205


state 133

    (63) left_hand_side -> IDENTIFIER .
    (150) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 63 (left_hand_side -> IDENTIFIER .)
    LBRACKET        shift and go to state 60


state 134

    (31) switch_statement -> KEYWORD_SWITCH LPAREN expression . RPAREN LBRACE case_list RBRACE

    RPAREN          shift and go to state 206


state 135

    (104) block_statement -> LBRACE statement_list RBRACE .

    KEYWORD_IF      reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_WHILE   reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DO      reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FOR     reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_SWITCH  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_BREAK   reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_RETURN  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_IMPORT  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_EXPORT  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_INPUT    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_EXIT    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_SLEEP    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_INT     reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FLOAT   reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_CHAR    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_VOID    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_STRING  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_BOOL    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FILE    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_SOCKET  reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DICT    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_REGEX   reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_ARRAY   reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_ELSE    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_CASE    reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DEFAULT reduce using rule 104 (block_statement -> LBRACE statement_list RBRACE .)


state 136

    (83) return_statement -> KEYWORD_RETURN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    $end            reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 83 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)


state 137

    (113) logical_expression -> logical_expression AND . equality_expression
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    equality_expression            shift and go to state 207
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 138

    (114) logical_expression -> logical_expression OR . equality_expression
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    equality_expression            shift and go to state 208
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 139

    (116) equality_expression -> equality_expression EQ . relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    relational_expression          shift and go to state 209
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 140

    (117) equality_expression -> equality_expression NEQ . relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    relational_expression          shift and go to state 210
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 141

    (105) initializer_list -> LBRACKET expression_list_opt . RBRACKET

    RBRACKET        shift and go to state 211


state 142

    (106) expression_list_opt -> expression_list .
    (109) expression_list -> expression_list . COMMA expression

    RBRACKET        reduce using rule 106 (expression_list_opt -> expression_list .)
    COMMA           shift and go to state 212


state 143

    (107) expression_list_opt -> empty .

    RBRACKET        reduce using rule 107 (expression_list_opt -> empty .)


state 144

    (108) expression_list -> expression .

    COMMA           reduce using rule 108 (expression_list -> expression .)
    RBRACKET        reduce using rule 108 (expression_list -> expression .)


state 145

    (119) relational_expression -> relational_expression GT . additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    additive_expression            shift and go to state 213
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 146

    (120) relational_expression -> relational_expression LT . additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    additive_expression            shift and go to state 214
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 147

    (121) relational_expression -> relational_expression GEQ . additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    additive_expression            shift and go to state 215
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 148

    (122) relational_expression -> relational_expression LEQ . additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    additive_expression            shift and go to state 216
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 149

    (124) additive_expression -> additive_expression PLUS . multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    multiplicative_expression      shift and go to state 217
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 150

    (125) additive_expression -> additive_expression MINUS . multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    multiplicative_expression      shift and go to state 218
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 151

    (127) multiplicative_expression -> multiplicative_expression MUL . unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    unary_expression               shift and go to state 219
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 152

    (128) multiplicative_expression -> multiplicative_expression DIV . unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    unary_expression               shift and go to state 220
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 153

    (129) multiplicative_expression -> multiplicative_expression MOD . unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    unary_expression               shift and go to state 221
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 154

    (131) unary_expression -> MINUS unary_expression .

    MUL             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    DIV             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    MOD             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    PLUS            reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    MINUS           reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    GT              reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    LT              reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    GEQ             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    LEQ             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    EQ              reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    NEQ             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    AND             reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    OR              reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    SEMICOLON       reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    RPAREN          reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    COMMA           reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    RBRACKET        reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    COLON           reduce using rule 131 (unary_expression -> MINUS unary_expression .)
    RBRACE          reduce using rule 131 (unary_expression -> MINUS unary_expression .)


state 155

    (140) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 222


state 156

    (144) dictionary_literal -> LBRACE key_value_list_opt . RBRACE

    RBRACE          shift and go to state 223


state 157

    (145) key_value_list_opt -> key_value_list .
    (148) key_value_list -> key_value_list . COMMA key_value

    RBRACE          reduce using rule 145 (key_value_list_opt -> key_value_list .)
    COMMA           shift and go to state 224


state 158

    (146) key_value_list_opt -> empty .

    RBRACE          reduce using rule 146 (key_value_list_opt -> empty .)


state 159

    (147) key_value_list -> key_value .

    COMMA           reduce using rule 147 (key_value_list -> key_value .)
    RBRACE          reduce using rule 147 (key_value_list -> key_value .)


state 160

    (149) key_value -> expression . COLON expression

    COLON           shift and go to state 225


state 161

    (24) import_statement -> KEYWORD_IMPORT module_path SEMICOLON .

    KEYWORD_IF      reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_DO      reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_FOR     reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    LBRACE          reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_INT     reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_VOID    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_STRING  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_FILE    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_DICT    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    $end            reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    RBRACE          reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_CASE    reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 24 (import_statement -> KEYWORD_IMPORT module_path SEMICOLON .)


state 162

    (25) import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 226


state 163

    (27) module_path -> module_path DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 227


state 164

    (2) function_definition -> type_specifier IDENTIFIER . LPAREN params RPAREN block_statement
    (37) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (38) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (39) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> type_specifier IDENTIFIER . multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier IDENTIFIER . multi_brackets SEMICOLON
    (60) multi_brackets -> . LBRACKET RBRACKET LBRACKET RBRACKET
    (61) multi_brackets -> . multi_brackets LBRACKET RBRACKET

    LPAREN          shift and go to state 117
    SEMICOLON       shift and go to state 113
    ASSIGN          shift and go to state 114
    LBRACKET        shift and go to state 115

    multi_brackets                 shift and go to state 116

state 165

    (59) array_type -> primitive_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 59 (array_type -> primitive_type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 59 (array_type -> primitive_type LBRACKET RBRACKET .)
    COMMA           reduce using rule 59 (array_type -> primitive_type LBRACKET RBRACKET .)


state 166

    (151) subscript_access -> subscript_access LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 228


state 167

    (89) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER . COMMA type_specifier RPAREN

    COMMA           shift and go to state 229


state 168

    (90) function_call -> SYSTEM_OUTPUT LPAREN expression . COMMA type_specifier RPAREN
    (91) function_call -> SYSTEM_OUTPUT LPAREN expression . COMMA type_specifier COMMA expression RPAREN

    COMMA           shift and go to state 230


state 169

    (92) function_call -> KEYWORD_EXIT LPAREN RPAREN .

    SEMICOLON       reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MUL             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    DIV             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MOD             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    PLUS            reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MINUS           reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    GT              reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    LT              reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    GEQ             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    LEQ             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    EQ              reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    NEQ             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    AND             reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    OR              reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RPAREN          reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    COMMA           reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RBRACKET        reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    COLON           reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RBRACE          reduce using rule 92 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)


state 170

    (93) function_call -> SYSTEM_SLEEP LPAREN expression . RPAREN

    RPAREN          shift and go to state 231


state 171

    (94) function_call -> SYSTEM_ARR_PUSH LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 232


state 172

    (95) function_call -> SYSTEM_ARR_POP LPAREN expression . RPAREN

    RPAREN          shift and go to state 233


state 173

    (96) function_call -> SYSTEM_ARR_SIZE LPAREN expression . RPAREN

    RPAREN          shift and go to state 234


state 174

    (97) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 235


state 175

    (98) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 236


state 176

    (99) function_call -> SYSTEM_ARR_AVG LPAREN expression . RPAREN
    (100) function_call -> SYSTEM_ARR_AVG LPAREN expression . COMMA expression RPAREN

    RPAREN          shift and go to state 237
    COMMA           shift and go to state 238


state 177

    (38) declaration_statement -> type_specifier IDENTIFIER ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 239


state 178

    (39) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression . RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression . RBRACKET ASSIGN initializer_list SEMICOLON

    RBRACKET        shift and go to state 240


state 179

    (41) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . SEMICOLON
    (60) multi_brackets -> LBRACKET RBRACKET . LBRACKET RBRACKET

    ASSIGN          shift and go to state 242
    SEMICOLON       shift and go to state 243
    LBRACKET        shift and go to state 241


state 180

    (44) declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN . initializer_list SEMICOLON
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET

    LBRACKET        shift and go to state 75

    initializer_list               shift and go to state 244

state 181

    (45) declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .

    KEYWORD_IF      reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_DO      reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_FOR     reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    LBRACE          reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    IDENTIFIER      reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_INT     reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_VOID    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_STRING  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_FILE    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_DICT    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    $end            reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    RBRACE          reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_CASE    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    LBRACKET        reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    MINUS           reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    INT_LITERAL     reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    STRING_LITERAL  reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    CHAR_LITERAL    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    KEYWORD_NULL    reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    LPAREN          reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)
    SEMICOLON       reduce using rule 45 (declaration_statement -> type_specifier IDENTIFIER multi_brackets SEMICOLON .)


state 182

    (61) multi_brackets -> multi_brackets LBRACKET . RBRACKET

    RBRACKET        shift and go to state 245


state 183

    (7) param -> type_specifier . IDENTIFIER

    IDENTIFIER      shift and go to state 246


state 184

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params . RPAREN block_statement

    RPAREN          shift and go to state 247


state 185

    (3) params -> param_list .
    (6) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 3 (params -> param_list .)
    COMMA           shift and go to state 248


state 186

    (4) params -> empty .

    RPAREN          reduce using rule 4 (params -> empty .)


state 187

    (5) param_list -> param .

    COMMA           reduce using rule 5 (param_list -> param .)
    RPAREN          reduce using rule 5 (param_list -> param .)


state 188

    (85) function_call -> IDENTIFIER LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MUL             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    DIV             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MOD             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    GT              reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LT              reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    EQ              reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    AND             reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    OR              reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COLON           reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 85 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)


state 189

    (102) argument_list -> argument_list COMMA . expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 249
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 190

    (87) function_call -> IDENTIFIER DOT IDENTIFIER LPAREN . argument_list RPAREN
    (88) function_call -> IDENTIFIER DOT IDENTIFIER LPAREN . RPAREN
    (101) argument_list -> . expression
    (102) argument_list -> . argument_list COMMA expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RPAREN          shift and go to state 251
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    argument_list                  shift and go to state 250
    expression                     shift and go to state 120
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 191

    (150) subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MUL             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIV             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    GT              reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    LT              reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQ              reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    COLON           reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 150 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)


state 192

    (62) assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    $end            reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 62 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)


state 193

    (66) if_statement -> KEYWORD_IF LPAREN expression RPAREN . statement
    (67) if_statement -> KEYWORD_IF LPAREN expression RPAREN . statement KEYWORD_ELSE statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 252
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 194

    (68) while_statement -> KEYWORD_WHILE LPAREN expression RPAREN . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 253
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 195

    (30) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN . expression RPAREN SEMICOLON
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 254
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 196

    (69) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt . SEMICOLON expression_opt RPAREN statement

    SEMICOLON       shift and go to state 255


state 197

    (75) expression_opt -> expression .

    SEMICOLON       reduce using rule 75 (expression_opt -> expression .)
    RPAREN          reduce using rule 75 (expression_opt -> expression .)


state 198

    (76) expression_opt -> assignment_statement_no_semi .

    SEMICOLON       reduce using rule 76 (expression_opt -> assignment_statement_no_semi .)
    RPAREN          reduce using rule 76 (expression_opt -> assignment_statement_no_semi .)


state 199

    (77) expression_opt -> increment_decrement .

    SEMICOLON       reduce using rule 77 (expression_opt -> increment_decrement .)
    RPAREN          reduce using rule 77 (expression_opt -> increment_decrement .)


state 200

    (78) expression_opt -> empty .

    SEMICOLON       reduce using rule 78 (expression_opt -> empty .)
    RPAREN          reduce using rule 78 (expression_opt -> empty .)


state 201

    (79) increment_decrement -> IDENTIFIER . PLUS PLUS
    (80) increment_decrement -> IDENTIFIER . MINUS MINUS
    (63) left_hand_side -> IDENTIFIER .
    (150) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET
    (132) primary_expression -> IDENTIFIER .
    (85) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (86) function_call -> IDENTIFIER . LPAREN RPAREN
    (87) function_call -> IDENTIFIER . DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> IDENTIFIER . DOT IDENTIFIER LPAREN RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 256
    MINUS           shift and go to state 257
    ASSIGN          reduce using rule 63 (left_hand_side -> IDENTIFIER .)
    LBRACKET        shift and go to state 60
    MUL             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    DIV             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    MOD             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    GT              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    LT              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    EQ              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 132 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 132 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 132 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 132 (primary_expression -> IDENTIFIER .)
    LPAREN          shift and go to state 58
    DOT             shift and go to state 59

  ! PLUS            [ reduce using rule 132 (primary_expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 132 (primary_expression -> IDENTIFIER .) ]


state 202

    (64) left_hand_side -> subscript_access .
    (151) subscript_access -> subscript_access . LBRACKET expression RBRACKET
    (142) primary_expression -> subscript_access .

    ASSIGN          reduce using rule 64 (left_hand_side -> subscript_access .)
    LBRACKET        shift and go to state 102
    MUL             reduce using rule 142 (primary_expression -> subscript_access .)
    DIV             reduce using rule 142 (primary_expression -> subscript_access .)
    MOD             reduce using rule 142 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 142 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 142 (primary_expression -> subscript_access .)
    GT              reduce using rule 142 (primary_expression -> subscript_access .)
    LT              reduce using rule 142 (primary_expression -> subscript_access .)
    GEQ             reduce using rule 142 (primary_expression -> subscript_access .)
    LEQ             reduce using rule 142 (primary_expression -> subscript_access .)
    EQ              reduce using rule 142 (primary_expression -> subscript_access .)
    NEQ             reduce using rule 142 (primary_expression -> subscript_access .)
    AND             reduce using rule 142 (primary_expression -> subscript_access .)
    OR              reduce using rule 142 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 142 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 142 (primary_expression -> subscript_access .)


state 203

    (70) for_init -> assignment_statement_no_semi SEMICOLON .

    IDENTIFIER      reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LBRACKET        reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    MINUS           reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    INT_LITERAL     reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    STRING_LITERAL  reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    CHAR_LITERAL    reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_NULL    reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LPAREN          reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LBRACE          reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SEMICOLON       reduce using rule 70 (for_init -> assignment_statement_no_semi SEMICOLON .)


state 204

    (65) assignment_statement_no_semi -> left_hand_side ASSIGN . expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 258
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 205

    (37) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (38) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (39) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> type_specifier IDENTIFIER . multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> type_specifier IDENTIFIER . multi_brackets SEMICOLON
    (60) multi_brackets -> . LBRACKET RBRACKET LBRACKET RBRACKET
    (61) multi_brackets -> . multi_brackets LBRACKET RBRACKET

    SEMICOLON       shift and go to state 113
    ASSIGN          shift and go to state 114
    LBRACKET        shift and go to state 115

    multi_brackets                 shift and go to state 116

state 206

    (31) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN . LBRACE case_list RBRACE

    LBRACE          shift and go to state 259


state 207

    (113) logical_expression -> logical_expression AND equality_expression .
    (116) equality_expression -> equality_expression . EQ relational_expression
    (117) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    OR              reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    SEMICOLON       reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    RPAREN          reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    COMMA           reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    RBRACKET        reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    COLON           reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    RBRACE          reduce using rule 113 (logical_expression -> logical_expression AND equality_expression .)
    EQ              shift and go to state 139
    NEQ             shift and go to state 140


state 208

    (114) logical_expression -> logical_expression OR equality_expression .
    (116) equality_expression -> equality_expression . EQ relational_expression
    (117) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    OR              reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    SEMICOLON       reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    RPAREN          reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    COMMA           reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    RBRACKET        reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    COLON           reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    RBRACE          reduce using rule 114 (logical_expression -> logical_expression OR equality_expression .)
    EQ              shift and go to state 139
    NEQ             shift and go to state 140


state 209

    (116) equality_expression -> equality_expression EQ relational_expression .
    (119) relational_expression -> relational_expression . GT additive_expression
    (120) relational_expression -> relational_expression . LT additive_expression
    (121) relational_expression -> relational_expression . GEQ additive_expression
    (122) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    NEQ             reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    AND             reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    OR              reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    SEMICOLON       reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    COMMA           reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACKET        reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    COLON           reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACE          reduce using rule 116 (equality_expression -> equality_expression EQ relational_expression .)
    GT              shift and go to state 145
    LT              shift and go to state 146
    GEQ             shift and go to state 147
    LEQ             shift and go to state 148


state 210

    (117) equality_expression -> equality_expression NEQ relational_expression .
    (119) relational_expression -> relational_expression . GT additive_expression
    (120) relational_expression -> relational_expression . LT additive_expression
    (121) relational_expression -> relational_expression . GEQ additive_expression
    (122) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    NEQ             reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    AND             reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    OR              reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    SEMICOLON       reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    RPAREN          reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    COMMA           reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    RBRACKET        reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    COLON           reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    RBRACE          reduce using rule 117 (equality_expression -> equality_expression NEQ relational_expression .)
    GT              shift and go to state 145
    LT              shift and go to state 146
    GEQ             shift and go to state 147
    LEQ             shift and go to state 148


state 211

    (105) initializer_list -> LBRACKET expression_list_opt RBRACKET .

    SEMICOLON       reduce using rule 105 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RPAREN          reduce using rule 105 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    COMMA           reduce using rule 105 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RBRACKET        reduce using rule 105 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    COLON           reduce using rule 105 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RBRACE          reduce using rule 105 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)


state 212

    (109) expression_list -> expression_list COMMA . expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 260
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 213

    (119) relational_expression -> relational_expression GT additive_expression .
    (124) additive_expression -> additive_expression . PLUS multiplicative_expression
    (125) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    LT              reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    GEQ             reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    LEQ             reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    EQ              reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    NEQ             reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    AND             reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    OR              reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    SEMICOLON       reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    RPAREN          reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    COMMA           reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    RBRACKET        reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    COLON           reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    RBRACE          reduce using rule 119 (relational_expression -> relational_expression GT additive_expression .)
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150


state 214

    (120) relational_expression -> relational_expression LT additive_expression .
    (124) additive_expression -> additive_expression . PLUS multiplicative_expression
    (125) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    LT              reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    GEQ             reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    LEQ             reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    EQ              reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    NEQ             reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    AND             reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    OR              reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    SEMICOLON       reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    RPAREN          reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    COMMA           reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    RBRACKET        reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    COLON           reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    RBRACE          reduce using rule 120 (relational_expression -> relational_expression LT additive_expression .)
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150


state 215

    (121) relational_expression -> relational_expression GEQ additive_expression .
    (124) additive_expression -> additive_expression . PLUS multiplicative_expression
    (125) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    LT              reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    GEQ             reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    LEQ             reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    EQ              reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    NEQ             reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    AND             reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    OR              reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    SEMICOLON       reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    RPAREN          reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    COMMA           reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    RBRACKET        reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    COLON           reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    RBRACE          reduce using rule 121 (relational_expression -> relational_expression GEQ additive_expression .)
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150


state 216

    (122) relational_expression -> relational_expression LEQ additive_expression .
    (124) additive_expression -> additive_expression . PLUS multiplicative_expression
    (125) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    LT              reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    GEQ             reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    LEQ             reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    EQ              reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    NEQ             reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    AND             reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    OR              reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    SEMICOLON       reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    RPAREN          reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    COMMA           reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    RBRACKET        reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    COLON           reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    RBRACE          reduce using rule 122 (relational_expression -> relational_expression LEQ additive_expression .)
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150


state 217

    (124) additive_expression -> additive_expression PLUS multiplicative_expression .
    (127) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (128) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (129) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LT              reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GEQ             reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEQ             reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NEQ             reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMICOLON       reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACKET        reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COLON           reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACE          reduce using rule 124 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MUL             shift and go to state 151
    DIV             shift and go to state 152
    MOD             shift and go to state 153


state 218

    (125) additive_expression -> additive_expression MINUS multiplicative_expression .
    (127) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (128) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (129) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LT              reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GEQ             reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEQ             reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ              reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NEQ             reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    SEMICOLON       reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACKET        reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COLON           reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACE          reduce using rule 125 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MUL             shift and go to state 151
    DIV             shift and go to state 152
    MOD             shift and go to state 153


state 219

    (127) multiplicative_expression -> multiplicative_expression MUL unary_expression .

    MUL             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    DIV             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    MOD             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    PLUS            reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    MINUS           reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    GT              reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    LT              reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    GEQ             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    LEQ             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    EQ              reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    NEQ             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    AND             reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    OR              reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    SEMICOLON       reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RPAREN          reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    COMMA           reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RBRACKET        reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    COLON           reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RBRACE          reduce using rule 127 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)


state 220

    (128) multiplicative_expression -> multiplicative_expression DIV unary_expression .

    MUL             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    DIV             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    MOD             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    PLUS            reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    MINUS           reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    GT              reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    LT              reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    GEQ             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    LEQ             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    EQ              reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    NEQ             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    AND             reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    OR              reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    SEMICOLON       reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RPAREN          reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    COMMA           reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RBRACKET        reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    COLON           reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RBRACE          reduce using rule 128 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)


state 221

    (129) multiplicative_expression -> multiplicative_expression MOD unary_expression .

    MUL             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    DIV             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MOD             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    PLUS            reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MINUS           reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GT              reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LT              reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GEQ             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LEQ             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    EQ              reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    NEQ             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    AND             reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    OR              reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    SEMICOLON       reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RPAREN          reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COMMA           reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACKET        reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COLON           reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACE          reduce using rule 129 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)


state 222

    (140) primary_expression -> LPAREN expression RPAREN .

    MUL             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 140 (primary_expression -> LPAREN expression RPAREN .)


state 223

    (144) dictionary_literal -> LBRACE key_value_list_opt RBRACE .

    MUL             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    DIV             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    MOD             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    PLUS            reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    MINUS           reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    GT              reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    LT              reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    GEQ             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    LEQ             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    EQ              reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    NEQ             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    AND             reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    OR              reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    SEMICOLON       reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RPAREN          reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    COMMA           reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RBRACKET        reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    COLON           reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RBRACE          reduce using rule 144 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)


state 224

    (148) key_value_list -> key_value_list COMMA . key_value
    (149) key_value -> . expression COLON expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    key_value                      shift and go to state 261
    expression                     shift and go to state 160
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 225

    (149) key_value -> expression COLON . expression
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 262
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 226

    (25) import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 263


state 227

    (27) module_path -> module_path DOT IDENTIFIER .

    SEMICOLON       reduce using rule 27 (module_path -> module_path DOT IDENTIFIER .)
    KEYWORD_AS      reduce using rule 27 (module_path -> module_path DOT IDENTIFIER .)
    DOT             reduce using rule 27 (module_path -> module_path DOT IDENTIFIER .)


state 228

    (151) subscript_access -> subscript_access LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    MUL             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    DIV             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    MOD             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    GT              reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    LT              reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    EQ              reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    AND             reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    OR              reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    COLON           reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 151 (subscript_access -> subscript_access LBRACKET expression RBRACKET .)


state 229

    (89) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA . type_specifier RPAREN
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    type_specifier                 shift and go to state 264
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33

state 230

    (90) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA . type_specifier RPAREN
    (91) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA . type_specifier COMMA expression RPAREN
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    type_specifier                 shift and go to state 265
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33

state 231

    (93) function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    MUL             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    DIV             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    MOD             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    PLUS            reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    MINUS           reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    GT              reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    LT              reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    GEQ             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    LEQ             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    EQ              reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    NEQ             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    AND             reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    OR              reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    COMMA           reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    COLON           reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    RBRACE          reduce using rule 93 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)


state 232

    (94) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 266
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 233

    (95) function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MUL             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    DIV             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MOD             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    PLUS            reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MINUS           reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    GT              reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    LT              reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    GEQ             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    LEQ             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    EQ              reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    NEQ             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    AND             reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    OR              reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    COMMA           reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    COLON           reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RBRACE          reduce using rule 95 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)


state 234

    (96) function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MUL             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    DIV             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MOD             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    PLUS            reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MINUS           reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    GT              reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    LT              reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    GEQ             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    LEQ             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    EQ              reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    NEQ             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    AND             reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    OR              reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    COMMA           reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    COLON           reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RBRACE          reduce using rule 96 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)


state 235

    (97) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 267
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 236

    (98) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 268
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 237

    (99) function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MUL             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    DIV             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MOD             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    PLUS            reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MINUS           reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    GT              reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    LT              reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    GEQ             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    LEQ             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    EQ              reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    NEQ             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    AND             reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    OR              reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RPAREN          reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    COMMA           reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    COLON           reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RBRACE          reduce using rule 99 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)


state 238

    (100) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 269
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 239

    (38) declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    INT_LITERAL     reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR_LITERAL    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_NULL    reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SEMICOLON       reduce using rule 38 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)


state 240

    (39) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET . SEMICOLON
    (40) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET . ASSIGN initializer_list SEMICOLON

    SEMICOLON       shift and go to state 270
    ASSIGN          shift and go to state 271


state 241

    (60) multi_brackets -> LBRACKET RBRACKET LBRACKET . RBRACKET

    RBRACKET        shift and go to state 272


state 242

    (41) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN . initializer_list SEMICOLON
    (42) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN . expression SEMICOLON
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    initializer_list               shift and go to state 273
    expression                     shift and go to state 274
    logical_expression             shift and go to state 72
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 243

    (43) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    KEYWORD_IF      reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DO      reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FOR     reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_INT     reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_VOID    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_STRING  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FILE    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DICT    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_CASE    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    INT_LITERAL     reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CHAR_LITERAL    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_NULL    reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 43 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)


state 244

    (44) declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list . SEMICOLON

    SEMICOLON       shift and go to state 275


state 245

    (61) multi_brackets -> multi_brackets LBRACKET RBRACKET .

    ASSIGN          reduce using rule 61 (multi_brackets -> multi_brackets LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 61 (multi_brackets -> multi_brackets LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 61 (multi_brackets -> multi_brackets LBRACKET RBRACKET .)


state 246

    (7) param -> type_specifier IDENTIFIER .

    COMMA           reduce using rule 7 (param -> type_specifier IDENTIFIER .)
    RPAREN          reduce using rule 7 (param -> type_specifier IDENTIFIER .)


state 247

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN . block_statement
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 26

    block_statement                shift and go to state 276

state 248

    (6) param_list -> param_list COMMA . param
    (7) param -> . type_specifier IDENTIFIER
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    param                          shift and go to state 277
    type_specifier                 shift and go to state 183
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33

state 249

    (102) argument_list -> argument_list COMMA expression .

    RPAREN          reduce using rule 102 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 102 (argument_list -> argument_list COMMA expression .)


state 250

    (87) function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list . RPAREN
    (102) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 278
    COMMA           shift and go to state 189


state 251

    (88) function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    GEQ             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    LEQ             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    EQ              reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    NEQ             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    COLON           reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 88 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN .)


state 252

    (66) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .
    (67) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement . KEYWORD_ELSE statement

    KEYWORD_IF      reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DO      reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FOR     reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_IMPORT  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_EXPORT  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_SLEEP    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_INT     reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_VOID    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_STRING  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FILE    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DICT    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_CASE    reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_ELSE    shift and go to state 279

  ! KEYWORD_ELSE    [ reduce using rule 66 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .) ]


state 253

    (68) while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .

    KEYWORD_IF      reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DO      reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FOR     reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_IMPORT  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_EXPORT  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_SLEEP    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_INT     reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_VOID    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_STRING  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FILE    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DICT    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_ELSE    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_CASE    reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 68 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)


state 254

    (30) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 280


state 255

    (69) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON . expression_opt RPAREN statement
    (75) expression_opt -> . expression
    (76) expression_opt -> . assignment_statement_no_semi
    (77) expression_opt -> . increment_decrement
    (78) expression_opt -> . empty
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (65) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (79) increment_decrement -> . IDENTIFIER PLUS PLUS
    (80) increment_decrement -> . IDENTIFIER MINUS MINUS
    (81) empty -> .
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    IDENTIFIER      shift and go to state 201
    RPAREN          reduce using rule 81 (empty -> .)
    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression_opt                 shift and go to state 281
    expression                     shift and go to state 197
    assignment_statement_no_semi   shift and go to state 198
    increment_decrement            shift and go to state 199
    empty                          shift and go to state 200
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    left_hand_side                 shift and go to state 131
    equality_expression            shift and go to state 74
    subscript_access               shift and go to state 202
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    dictionary_literal             shift and go to state 93

state 256

    (79) increment_decrement -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 282


state 257

    (80) increment_decrement -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 283


state 258

    (65) assignment_statement_no_semi -> left_hand_side ASSIGN expression .

    SEMICOLON       reduce using rule 65 (assignment_statement_no_semi -> left_hand_side ASSIGN expression .)
    RPAREN          reduce using rule 65 (assignment_statement_no_semi -> left_hand_side ASSIGN expression .)


state 259

    (31) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE . case_list RBRACE
    (32) case_list -> . case_clause
    (33) case_list -> . case_list case_clause
    (34) case_clause -> . KEYWORD_CASE expression COLON statement_list
    (35) case_clause -> . KEYWORD_DEFAULT COLON statement_list

    KEYWORD_CASE    shift and go to state 286
    KEYWORD_DEFAULT shift and go to state 287

    case_list                      shift and go to state 284
    case_clause                    shift and go to state 285

state 260

    (109) expression_list -> expression_list COMMA expression .

    COMMA           reduce using rule 109 (expression_list -> expression_list COMMA expression .)
    RBRACKET        reduce using rule 109 (expression_list -> expression_list COMMA expression .)


state 261

    (148) key_value_list -> key_value_list COMMA key_value .

    COMMA           reduce using rule 148 (key_value_list -> key_value_list COMMA key_value .)
    RBRACE          reduce using rule 148 (key_value_list -> key_value_list COMMA key_value .)


state 262

    (149) key_value -> expression COLON expression .

    COMMA           reduce using rule 149 (key_value -> expression COLON expression .)
    RBRACE          reduce using rule 149 (key_value -> expression COLON expression .)


state 263

    (25) import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .

    KEYWORD_IF      reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_DO      reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_FOR     reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_INT     reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_VOID    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_STRING  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_FILE    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_DICT    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    $end            reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_CASE    reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 25 (import_statement -> KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON .)


state 264

    (89) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier . RPAREN

    RPAREN          shift and go to state 288


state 265

    (90) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier . RPAREN
    (91) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier . COMMA expression RPAREN

    RPAREN          shift and go to state 290
    COMMA           shift and go to state 289


state 266

    (94) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 291


state 267

    (97) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 292


state 268

    (98) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 293


state 269

    (100) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 294


state 270

    (39) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .

    KEYWORD_IF      reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DO      reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FOR     reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_INT     reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_VOID    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_STRING  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FILE    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DICT    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    $end            reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_CASE    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    MINUS           reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    INT_LITERAL     reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    CHAR_LITERAL    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_NULL    reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 39 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)


state 271

    (40) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN . initializer_list SEMICOLON
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET

    LBRACKET        shift and go to state 75

    initializer_list               shift and go to state 295

state 272

    (60) multi_brackets -> LBRACKET RBRACKET LBRACKET RBRACKET .

    ASSIGN          reduce using rule 60 (multi_brackets -> LBRACKET RBRACKET LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 60 (multi_brackets -> LBRACKET RBRACKET LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 60 (multi_brackets -> LBRACKET RBRACKET LBRACKET RBRACKET .)


state 273

    (41) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list . SEMICOLON
    (111) expression -> initializer_list .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 296

  ! SEMICOLON       [ reduce using rule 111 (expression -> initializer_list .) ]


state 274

    (42) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 297


state 275

    (44) declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 44 (declaration_statement -> type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON .)


state 276

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .

    KEYWORD_IF      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_WHILE   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DO      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FOR     reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_SWITCH  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_BREAK   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_RETURN  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    LBRACE          reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_IMPORT  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_EXPORT  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    IDENTIFIER      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_INPUT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_OUTPUT   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_EXIT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_SLEEP    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_PUSH reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_POP  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_SIZE reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_AVG  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_INT     reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FLOAT   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_CHAR    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_VOID    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_STRING  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_BOOL    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FILE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_SOCKET  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DICT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_REGEX   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_ARRAY   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    $end            reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    RBRACE          reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_ELSE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_CASE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DEFAULT reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)


state 277

    (6) param_list -> param_list COMMA param .

    COMMA           reduce using rule 6 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 6 (param_list -> param_list COMMA param .)


state 278

    (87) function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    MUL             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    DIV             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    MOD             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    GT              reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    LT              reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    EQ              reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    AND             reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    OR              reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    COLON           reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 87 (function_call -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN .)


state 279

    (67) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 298
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 280

    (30) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 299


state 281

    (69) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt . RPAREN statement

    RPAREN          shift and go to state 300


state 282

    (79) increment_decrement -> IDENTIFIER PLUS PLUS .

    SEMICOLON       reduce using rule 79 (increment_decrement -> IDENTIFIER PLUS PLUS .)
    RPAREN          reduce using rule 79 (increment_decrement -> IDENTIFIER PLUS PLUS .)


state 283

    (80) increment_decrement -> IDENTIFIER MINUS MINUS .

    SEMICOLON       reduce using rule 80 (increment_decrement -> IDENTIFIER MINUS MINUS .)
    RPAREN          reduce using rule 80 (increment_decrement -> IDENTIFIER MINUS MINUS .)


state 284

    (31) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list . RBRACE
    (33) case_list -> case_list . case_clause
    (34) case_clause -> . KEYWORD_CASE expression COLON statement_list
    (35) case_clause -> . KEYWORD_DEFAULT COLON statement_list

    RBRACE          shift and go to state 301
    KEYWORD_CASE    shift and go to state 286
    KEYWORD_DEFAULT shift and go to state 287

    case_clause                    shift and go to state 302

state 285

    (32) case_list -> case_clause .

    RBRACE          reduce using rule 32 (case_list -> case_clause .)
    KEYWORD_CASE    reduce using rule 32 (case_list -> case_clause .)
    KEYWORD_DEFAULT reduce using rule 32 (case_list -> case_clause .)


state 286

    (34) case_clause -> KEYWORD_CASE . expression COLON statement_list
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 303
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 287

    (35) case_clause -> KEYWORD_DEFAULT . COLON statement_list

    COLON           shift and go to state 304


state 288

    (89) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .

    SEMICOLON       reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MUL             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    DIV             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MOD             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    PLUS            reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MINUS           reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    GT              reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    LT              reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    GEQ             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    LEQ             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    EQ              reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    NEQ             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    AND             reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    OR              reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RPAREN          reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    COMMA           reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RBRACKET        reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    COLON           reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RBRACE          reduce using rule 89 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)


state 289

    (91) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA . expression RPAREN
    (110) expression -> . logical_expression
    (111) expression -> . initializer_list
    (112) logical_expression -> . equality_expression
    (113) logical_expression -> . logical_expression AND equality_expression
    (114) logical_expression -> . logical_expression OR equality_expression
    (105) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (115) equality_expression -> . relational_expression
    (116) equality_expression -> . equality_expression EQ relational_expression
    (117) equality_expression -> . equality_expression NEQ relational_expression
    (118) relational_expression -> . additive_expression
    (119) relational_expression -> . relational_expression GT additive_expression
    (120) relational_expression -> . relational_expression LT additive_expression
    (121) relational_expression -> . relational_expression GEQ additive_expression
    (122) relational_expression -> . relational_expression LEQ additive_expression
    (123) additive_expression -> . multiplicative_expression
    (124) additive_expression -> . additive_expression PLUS multiplicative_expression
    (125) additive_expression -> . additive_expression MINUS multiplicative_expression
    (126) multiplicative_expression -> . unary_expression
    (127) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (128) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (129) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (130) unary_expression -> . primary_expression
    (131) unary_expression -> . MINUS unary_expression
    (132) primary_expression -> . IDENTIFIER
    (133) primary_expression -> . INT_LITERAL
    (134) primary_expression -> . FLOAT_LITERAL
    (135) primary_expression -> . STRING_LITERAL
    (136) primary_expression -> . CHAR_LITERAL
    (137) primary_expression -> . KEYWORD_TRUE
    (138) primary_expression -> . KEYWORD_FALSE
    (139) primary_expression -> . KEYWORD_NULL
    (140) primary_expression -> . LPAREN expression RPAREN
    (141) primary_expression -> . function_call
    (142) primary_expression -> . subscript_access
    (143) primary_expression -> . dictionary_literal
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET
    (144) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 75
    MINUS           shift and go to state 79
    IDENTIFIER      shift and go to state 82
    INT_LITERAL     shift and go to state 83
    FLOAT_LITERAL   shift and go to state 84
    STRING_LITERAL  shift and go to state 85
    CHAR_LITERAL    shift and go to state 86
    KEYWORD_TRUE    shift and go to state 87
    KEYWORD_FALSE   shift and go to state 88
    KEYWORD_NULL    shift and go to state 89
    LPAREN          shift and go to state 90
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    LBRACE          shift and go to state 94

    expression                     shift and go to state 305
    logical_expression             shift and go to state 72
    initializer_list               shift and go to state 73
    equality_expression            shift and go to state 74
    relational_expression          shift and go to state 76
    additive_expression            shift and go to state 77
    multiplicative_expression      shift and go to state 78
    unary_expression               shift and go to state 80
    primary_expression             shift and go to state 81
    function_call                  shift and go to state 91
    subscript_access               shift and go to state 92
    dictionary_literal             shift and go to state 93

state 290

    (90) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .

    SEMICOLON       reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MUL             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    DIV             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MOD             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    PLUS            reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MINUS           reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    GT              reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    LT              reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    GEQ             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    LEQ             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    EQ              reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    NEQ             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    AND             reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    OR              reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RPAREN          reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    COMMA           reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RBRACKET        reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    COLON           reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RBRACE          reduce using rule 90 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)


state 291

    (94) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 94 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)


state 292

    (97) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 97 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)


state 293

    (98) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 98 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)


state 294

    (100) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 100 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)


state 295

    (40) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list . SEMICOLON

    SEMICOLON       shift and go to state 306


state 296

    (41) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 41 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)


state 297

    (42) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    INT_LITERAL     reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    CHAR_LITERAL    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_NULL    reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SEMICOLON       reduce using rule 42 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)


state 298

    (67) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .

    KEYWORD_IF      reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_WHILE   reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DO      reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FOR     reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_SWITCH  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_BREAK   reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_RETURN  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    LBRACE          reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_IMPORT  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_EXPORT  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    IDENTIFIER      reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_INPUT    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_OUTPUT   reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_EXIT    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_SLEEP    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_PUSH reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_POP  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_SIZE reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_AVG  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_INT     reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FLOAT   reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_CHAR    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_VOID    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_STRING  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_BOOL    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FILE    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_SOCKET  reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DICT    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_REGEX   reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_ARRAY   reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    $end            reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    RBRACE          reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_ELSE    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_CASE    reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DEFAULT reduce using rule 67 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)


state 299

    (30) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .

    KEYWORD_IF      reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DO      reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_INT     reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_VOID    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_STRING  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FILE    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DICT    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_CASE    reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 30 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)


state 300

    (69) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 307
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 301

    (31) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .

    KEYWORD_IF      reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_WHILE   reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DO      reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FOR     reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_SWITCH  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_BREAK   reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_RETURN  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    LBRACE          reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_IMPORT  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_EXPORT  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    IDENTIFIER      reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_INPUT    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_EXIT    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_SLEEP    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_INT     reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FLOAT   reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_CHAR    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_VOID    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_STRING  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_BOOL    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FILE    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_SOCKET  reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DICT    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_REGEX   reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_ARRAY   reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    $end            reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    RBRACE          reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_ELSE    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_CASE    reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DEFAULT reduce using rule 31 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)


state 302

    (33) case_list -> case_list case_clause .

    RBRACE          reduce using rule 33 (case_list -> case_list case_clause .)
    KEYWORD_CASE    reduce using rule 33 (case_list -> case_list case_clause .)
    KEYWORD_DEFAULT reduce using rule 33 (case_list -> case_list case_clause .)


state 303

    (34) case_clause -> KEYWORD_CASE expression . COLON statement_list

    COLON           shift and go to state 308


state 304

    (35) case_clause -> KEYWORD_DEFAULT COLON . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement_list                 shift and go to state 309
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 305

    (91) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression . RPAREN

    RPAREN          shift and go to state 310


state 306

    (40) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_IMPORT  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXPORT  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 40 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)


state 307

    (69) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .

    KEYWORD_IF      reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DO      reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FOR     reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    LBRACE          reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_IMPORT  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_EXPORT  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    IDENTIFIER      reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_SLEEP    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_INT     reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_VOID    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_STRING  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FILE    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DICT    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    $end            reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    RBRACE          reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_ELSE    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_CASE    reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 69 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)


state 308

    (34) case_clause -> KEYWORD_CASE expression COLON . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement_list                 shift and go to state 311
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 309

    (35) case_clause -> KEYWORD_DEFAULT COLON statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    RBRACE          reduce using rule 35 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_CASE    reduce using rule 35 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_DEFAULT reduce using rule 35 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 56
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34

state 310

    (91) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .

    SEMICOLON       reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MUL             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    DIV             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MOD             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    PLUS            reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MINUS           reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    GT              reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    LT              reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    GEQ             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    LEQ             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    EQ              reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    NEQ             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    AND             reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    OR              reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RPAREN          reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    COMMA           reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RBRACKET        reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    COLON           reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RBRACE          reduce using rule 91 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)


state 311

    (34) case_clause -> KEYWORD_CASE expression COLON statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (22) statement -> . import_statement
    (23) statement -> . export_statement
    (37) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (38) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (39) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (40) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (41) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (42) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (43) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (44) declaration_statement -> . type_specifier IDENTIFIER multi_brackets ASSIGN initializer_list SEMICOLON
    (45) declaration_statement -> . type_specifier IDENTIFIER multi_brackets SEMICOLON
    (62) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (66) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (67) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (68) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (30) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (69) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (31) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (36) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) return_statement -> . KEYWORD_RETURN SEMICOLON
    (83) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (84) function_call_statement -> . function_call SEMICOLON
    (103) block_statement -> . LBRACE RBRACE
    (104) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (24) import_statement -> . KEYWORD_IMPORT module_path SEMICOLON
    (25) import_statement -> . KEYWORD_IMPORT module_path KEYWORD_AS IDENTIFIER SEMICOLON
    (28) export_statement -> . KEYWORD_EXPORT function_definition
    (29) export_statement -> . KEYWORD_EXPORT declaration_statement
    (46) type_specifier -> . primitive_type
    (47) type_specifier -> . array_type
    (63) left_hand_side -> . IDENTIFIER
    (64) left_hand_side -> . subscript_access
    (85) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (86) function_call -> . IDENTIFIER LPAREN RPAREN
    (87) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN
    (88) function_call -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
    (89) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (90) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (91) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (92) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (93) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (94) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (95) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (96) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (97) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (98) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (99) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (100) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (48) primitive_type -> . KEYWORD_INT
    (49) primitive_type -> . KEYWORD_FLOAT
    (50) primitive_type -> . KEYWORD_CHAR
    (51) primitive_type -> . KEYWORD_VOID
    (52) primitive_type -> . KEYWORD_STRING
    (53) primitive_type -> . KEYWORD_BOOL
    (54) primitive_type -> . KEYWORD_FILE
    (55) primitive_type -> . KEYWORD_SOCKET
    (56) primitive_type -> . KEYWORD_DICT
    (57) primitive_type -> . KEYWORD_REGEX
    (58) primitive_type -> . KEYWORD_ARRAY
    (59) array_type -> . primitive_type LBRACKET RBRACKET
    (150) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (151) subscript_access -> . subscript_access LBRACKET expression RBRACKET

    RBRACE          reduce using rule 34 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_CASE    reduce using rule 34 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_DEFAULT reduce using rule 34 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_IF      shift and go to state 21
    KEYWORD_WHILE   shift and go to state 22
    KEYWORD_DO      shift and go to state 23
    KEYWORD_FOR     shift and go to state 24
    KEYWORD_SWITCH  shift and go to state 25
    KEYWORD_BREAK   shift and go to state 27
    KEYWORD_RETURN  shift and go to state 28
    LBRACE          shift and go to state 26
    KEYWORD_IMPORT  shift and go to state 30
    KEYWORD_EXPORT  shift and go to state 31
    IDENTIFIER      shift and go to state 19
    SYSTEM_INPUT    shift and go to state 35
    SYSTEM_OUTPUT   shift and go to state 36
    KEYWORD_EXIT    shift and go to state 37
    SYSTEM_SLEEP    shift and go to state 38
    SYSTEM_ARR_PUSH shift and go to state 39
    SYSTEM_ARR_POP  shift and go to state 40
    SYSTEM_ARR_SIZE shift and go to state 41
    SYSTEM_ARR_CONTAINS shift and go to state 42
    SYSTEM_ARR_INDEXOF shift and go to state 43
    SYSTEM_ARR_AVG  shift and go to state 44
    KEYWORD_INT     shift and go to state 45
    KEYWORD_FLOAT   shift and go to state 46
    KEYWORD_CHAR    shift and go to state 47
    KEYWORD_VOID    shift and go to state 48
    KEYWORD_STRING  shift and go to state 49
    KEYWORD_BOOL    shift and go to state 50
    KEYWORD_FILE    shift and go to state 51
    KEYWORD_SOCKET  shift and go to state 52
    KEYWORD_DICT    shift and go to state 53
    KEYWORD_REGEX   shift and go to state 54
    KEYWORD_ARRAY   shift and go to state 55

    statement                      shift and go to state 56
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    import_statement               shift and go to state 16
    export_statement               shift and go to state 17
    type_specifier                 shift and go to state 18
    left_hand_side                 shift and go to state 20
    function_call                  shift and go to state 29
    primitive_type                 shift and go to state 32
    array_type                     shift and go to state 33
    subscript_access               shift and go to state 34
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 201 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 201 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 273 resolved as shift
