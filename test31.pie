int graph[][] = [
    [0, 1, 0, 0, 1],
    [1, 0, 1, 1, 0],
    [0, 1, 0, 0, 1],
    [0, 1, 0, 0, 1],
    [1, 0, 1, 1, 0]
];

int visited[] = [0, 0, 0, 0, 0];
void dfs(int node) {
    visited[node] = 1;
    output("Visiting node: " + node, string);
    
    for (int neighbor = 0; neighbor < arr_size(graph[node]); neighbor = neighbor + 1) {
        if (graph[node][neighbor] == 1 && visited[neighbor] == 0) {
            dfs(neighbor);
        }
    }
}
output("Starting DFS from node 0", string);
dfs(0);

// //nested array test
int nested[][] = [
    [1, 2, 3],
    [4, 5],
    [6, 7, 8, 9]
];


output("Nested array contents:", string);
for (int i = 0; i < arr_size(nested); i = i + 1) {
    output("Row " + i + ":", string);
    output(nested[i], array);
}
output("Second nested array contents:", string);

int subArray[] = nested[1];
output("Sub-array nested[1]:", string);
output(subArray, array);
// output(nested[0], array);
